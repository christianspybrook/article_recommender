arxiv210500092v1 physicsplasmph 30 apr 2021code osukin 3d upgraded directdrive fueltarget 3d implosion code heavy ion inertial fusionh nakamuraa k uchiboria s kawataa t karinob r satoaogoyskicgraduate school engineering utsunomiya university utsunomiya 3218585 japancollaborative laboratories advanced decommissioning science japan atomicenergy agency fukushima 9708026 japandepartment physics varna technical university varna 9010 bulgariaabstractcode osukin 3d upgraded version 2d code osukicomput phys commun 240 83 2019 code osukin 3d integrated 3dimensional 3d simulation program fuel implosionignition burning directdrive nuclearfusion pellet heavy ion beamhib inertial confinement fusion hifthe code osukin 3d consistsprograms lagrangian fluid implosion program data conversionprogram euler fluid implosion ignition burning program codeosukin 3d couple hib illumination energy deposition program ok3 comput phys commun 181 1332 2010spherical target implosion 3d behavior computed 3d lagrangianfluid code time void closure fuel implosiondata lagrangian implosion code converteddata 3d eulerian code 3d euler code dt fuel compression stagnation ignition burning computed codeosukin 3d simulation provides capability computestudy hif target implosion dynamicskeywords implosion heavy ion beam inertial confinement fusiondirectdrive fuel pellet implosion ignition burningprogram summarycorresponding authoremail address kwtccutsunomiyauacjp skwtaggmailcompreprint submitted elsevier4 2021program title osukin 3dlicensing provisions cc nc 30programming language cworkstation xeon 2 ghz higher recommendedram 120gbytes minimumoperating unix linux example centos 64 ubuntu 18041 ltsjournal reference previous version code osuki 2d versionnature problem nuclear fusion energy energy source societypaper focus heavy ion beam hib inertial confinement fusion hifspherical mmradius deuterium d tritium t fuel pellet irradiated hibscompressed thousand times solid density dt fueltemperature reaches 510kev ignition release fusion energytypical hibs total input energy mj hibs pulse lengthtens ns osukin 3d code provides integrated toolsimulate hif dt fuel pellet implosion ignition burning 3 dimensions3d osukin 3d code upgraded version code osukicomput phys commun 240 83 2019 2d implosion simulationhif dt fuel compressed high density dtfuel spatial deformation dt fuel stagnationosuki osukin 3d systems employ lagrangian fluid codesimulate dt fuel implosion phase stagnationsimulation data lagrangian code converted eulerfluid code dt fuel ignition burning simulatedsolution method fluid codes lagrangian euler fluid codesosukin 3d threetemperature fluid model j appl phys 60 8981986 employed simulate pellet dynamics hifadditional comments including restrictions unusual features lagrangecode weak spatial mesh deformation nature numericalalgorithm shortwavelength perturbations imposed near polesspherical target spatial meshes crash computation runstop1 introductioncode osukin 3d 3 dimension upgraded 3d version codeosuki 1 provides capability simulate deuterium d tritiumt fuel target implosion ignition burning 3d heavy ion beam hibinertial confinement fusion icficf dt fuel target implosion ignition burning essentiallyimportant release sufficient fusion energy output icf mg dtfuel pellet compressed thousand times solid densityinput driver energy example lasers heavy ion beams hibspulse power addition ion temperature compressed dtreach 510 kev 2 order compress dt fuel stably highdensity implosion nonuniformity percent3key issues fuel implosion icf include realize uniformimplosion osukin 3d code provides integratedsimulation tool study dt fuel implosion ignition burning heavyion inertial confinement fusion hif 4 5dt fuel implosion simulated void closure timelagrangian code couple ok3 code includetimedependent hibs energy deposition profile target energy absorberlayer example hibs illumination hif dt targetcomputed code ok3 6 7 8 lagrange code dataconverted data imported euler code euler code robusttarget fuel deformation dt fuel ignition burningsimulated 3d euler fluid code osukin 3d codesimulates 3d hif target implosion dynamics contributerelease fusion energy stably society2 osukin 3d code algorithm description21 osukin 3d code structureosukin 3d code consists parts lagrangianfluid code 9 data conversion code lagrangian codeeuler code euler code fluid model threetemperature modelref 10 lagrangian fluid code data conversion codeeuler code describedlagrangian fluid code spatial meshesfluid motion 9 lagrange meshes follow fluidlarge deformation hand euler meshes fixedspace fluid moves meshesvoid closure time stagnation phase lagrangian codesimulate dt fuel implosion void closure time eulercode employed simulate dt fuel compression ignitionburning lagrangian code euler code dataconverted data conversion codesimulation process performed integrated wayscript codeosukinfusionstartsh processes executedshell script follows1 stack size infinite2 remove output data file new output files3 change permission shell scripts executable4 compile main function lagrangian code execute5 problems appear calculation lagrangiancode compile main function data conversion code execute6 problem data conversion compile main function euler code execute22 steps lagrangian codelagrangian code following stepsinitialize variables calculation total input energycalculation time step sizecalculation coordinatessolve equation motionsolve density equation continuitycalculation artificial viscositytransfer data ok3calculation energy deposition distribution code ok3 detailsok3 refs6 7 8solve energy equationscalculation heat conductioncalculation temperature relaxation temperaturessolve equation statesave resultsend lagrangian calculation right void closuretransfer data converting code23 data conversion code lagrangian fluid code euler fluid code1 read variables saved lagrangian code2 generate eulerian mesh3 calculate interpolation physical quantityeulerian mesh4 write converted data eulerian code24 steps eulerian code1 read mesh number converted data definematrices2 initialize variables3 calculation time step size4 solve equation motion5 track material boundaries dt al pb6 linearly interpolate boundary lines transcribeeulerian code7 discriminate materials transferred boundary line8 solve density equation continuity9 calculate artificial viscosity10 solve energy equations11 calculation fusion reaction12 calculation heat conduction13 calculation temperature relaxation temperatures14 solve equation state15 save results16 end3 files includedlogical coordinates lagrangian code identified meshnumber j k lagrange mesh shown fig 1 discretizationmethod ref 9 employed lagrangian fluid code usespatial coordinate r xi j k yi j k zi j k vector rnomal rfigure 1 lagrangian meshdefinition points discretized physical quantities lagrangeeuler codes presented figs 2 3 respectively subscriptsj k correspond positions space subscript n correspondstime n dt displacements j l directions definedfollowsdxndxii 1 jk xni1jk xnijk21 jkdyi 1 jk dyii 1 jk yi1jkyijkdz n 1 dzi 1 z n2 jki1jk zijk2 jkdxjij 1 k xnij1k xnijkdxnij 21 kdyij 1 k dyjij 1 k yij1kyijkdz n 1 dzj 1 z nij 2 kij1k zijkij 2 kdxkijk 1 xnijk1 xnijkdxnijk 21yijkdyijk 1 dykijk 1 yijk1dz n1 zzn1 dzkijk 2ijk 2ijk1ijkfigure 2 definition points discretized physical quantities lagrangian codefigure 3 definition points discretized physical quantities eulerian codelagrange code derivatives x y z followsx j x k x1 y zy zy z y zy z y zj j k k jkk jjj kdix djx dkxy j y k y1 z x z xz x z xz x z xj j k k jkk jjj kdiy djy dkyz j z k z1 x y x yx y x yx y x yj j k k jkk jjj kdiz djz dkzgeneralized formula followsdir djr dkrdixdjxdkxdir diy djr djy dkr dkydizdjzdkz31 lagrangian code ok31 bc lccppboundary conditions included procedure2 beammakingcppfunction calculates total input energy3 constanthfile contains definition constant values normalizationfactors4 derfcfile contains error function double precision5 hifschemehfile contains 1 2 3 6 12 20 32 60 120beam irradiationschemes refs 6 7 86 imokcppfile contains procedure transfer lagrange mesh datefile sets initial target surface numerically7 initmesh lccppfile initializes lagrangian coordinates determines number target layer number layers selected1 5 layers user set mesh number layerfile8 inputok3hinput data file contains target parameters hib parameters9 insulationcppfile contains procedure calculate adiabat evaluatefuel preheating 1 210 lagrange setcpp function performs auxiliary calculationsspatial differentiation thermal conductivity calculations lagrange code11 legendrecppprocedure performs mode analyses based spherical harmonics order implosion nonuniformity analysisresults output procedure12 lr lccppprocedure calculate rosseland mean free path ref 1113 mscppfunction solve matrix gauss elimination methodfunction optimized specifically langnge calculations14 ms tdmacppfunction solve matrix tdma tridiagonalmatrix algorithm15 ok3codecppfile main routine hibs illumination code ok3contains following procedures6 7 8 detailsprocedure relating hibs illumination code ok3ref 1 6 7 8 relating procedures listed irradiation initedp1 focus fdis divider kbunch pointcpointf pointalpha beamcenterrot beamletrot rotationstoppingpower1cpp procedure stoppingpower1cpp contains function stop1 function serves heart ok1 code6 describes energy deposition model calculates stopping power projectile ions solid target oneionstopping power considered sum deposition energytarget nuclei target bound free electrons targetions1216 pelletsurfacehfile sets initial target surface numerically17 rmscppprocedure file calculates rootmeansquare rms deviation target non uniformity18 resultimpcppfile contains procedure calculate implosion velocity19 slccppfile contains procedure output time historyphysical quantity obtained cutting directionspositions changed input lch20 accelerationcppprocedure calculating target acceleration21 artv lccppfile contains procedure calculate artificial viscositydealing shock waves propagating compressive fluid supersonic speed fluid dynamics simulations impossible employsufficient number multiple meshes real shockstructure thickness method introduce following artificial viscosity devised von neumannrichtmyer13threedimensional artificial viscosity writtenqac21qbc21qcc21minminminri uirj ujrk ukri rj rk normal vectors j k directions respectively qa qb qc artificial viscosities directionsri rj rk respectively equations 6 7 8 discretizedfollowsqa ni 1 j 1 k 12 2 2qa1 ni 1 j 1 k 1 qa2 ni 1 j 1 k 1 qa3 ni 1 j 1 k 1 qa4 ni 1 j 1 k 1qb ni 1 j 1 k 12 2 2qb1 1 j 1 k 1 qb2 1 j 1 k 1 qb3 1 j 1 k 1 qa4 1 j 1 k 1qc ni 1 j 1 k 1qc1 ni 1 j 1 k 1 qc2 ni 1 j 1 k 1 qc3 ni 1 j 1 k 1 qa4 ni 1 j 1 k 1expression appeared summarizeddiviqa1 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddivij 1 k 1j 1 k 1qa2 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddividivij 1 k 1j 1 k 1qa3 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddividivij 1 k 1j 1 k 1qa4 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddividivij 1 k 1j 1 k 1djviqb1 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddjvij 1 k 1j 1 k 1djviqb2 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddjvij 1 k 1j 1 k 1qb3 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddjvidjvij 1 k 1j 1 k 1qb4 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddjvidjvij 1 k 1j 1 k 1qc1 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddkvidkvij 1 k 1j 1 k 1qc2 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddkvidkvij 1 k 1j 1 k 1qc3 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddkvidkvij 1 k 1j 1 k 1qc4 ni 1 j 1 k 1 ni 1 j 1 k 1 c21 ddkvidkvij 1 k 1j 1 k 1rii 12j 1 k 1rii 12j 1 k 1rii 12j 1 k 1rii 12j 1 k 1rj 12j 1 k 1rj 12j 1 k 1rj 12j 1 k 1rj 12j 1 k 1diviminj 1 k 1mindivij 1 k 1mindivij 1 k 1diviminj 1 k 1mindjvij 1 k 1mindjvij 1 k 1mindjvij 1 k 1mindjvij 1 k 1n 1u n 21 j1kn 1rii 1 j 1 k 1u n 21 j1k1rii 1 j 1 k 1n 1u n 21 jk1rii 1 j 1 k 1n 1u n 2j ij 1 krj 1 j 1 k 1n 1n 1u n 2j i1j 1 k1n 1u n 2j ij 1 k1rj 1 j 1 k 1n12 1 1j kn12 1 1j ku n 2k ijk 1n 1 1 12 j 2 k 2u n 2k i1jk 1n 1 1 1j krj 1 j 1 k 1u n 2j i1j 1 krj 1 j 1 k 1dkviminj 1 k 1u n 21 jkrii 1 j 1 k 1mindkvij 1 k 1n 1n12 1 1j kn12 1 1j kdkviminj 1 k 1mindkvij 1 k 1ddivijk 21ddjvijk 21u n 2k i1j1k 1n 1 1 12 j 2 k 2u n 2k ij1k 1n 1 1 1j kdivij 21 k 21divij 21 k 21ddivij 1 k 1ddivij1 ddivk 2i1j 2 k 2djvidjvij 21 k 21j 21 k 21ddjvddjviddjvj 21 k 2112 j1k 2112 jk 21ddkvidkvidkvij 21 kj 21 k 21j 21 k 21ddkvddkvddkvi2 j 2 kj 2 k 22 2 jk1normal vectors j k directions outer productsshown fig 4 averaged valuesobtainedriij 1 k 1rj 1 jk 1n 1 1j kr a1 ij 1 k 1 r a2 ij 1 k 1 r a3 ij 1 k 1 r a4 ij 1 k 1r b1 1 jk 1 r b2 1 jk 1r b3 1 jk 1 r b4 1 jk 1rc1 1 j 1 k rc2 1 j 1 k r c3 1 j 1 k r c4 1 j 1 kfigure 4 nomal vector direction22 coc lccppfile calculates lagrangian mesh dynamics lagrangianmeshes fluid motion new position coordinates mesh point renewed n 123 cotc3d ecpp cotc3d rcppcalculation heat conduction following basic equationused14k tkk e re 183 1010 te52 log 1 z 1 wmkr lr tr3 wmkcvkheatconductivitytk ion electron radiation temperatureklog coulomb logarithmm massz ionization degreestef boltzmann constantlr rosseland mean free paths area vector surface mesh basicequation transformed followszzzmcvtzzzt dvt si1 xsidirdjrdkrmcvequation 25 discretized followstij 1 k 1j 1 k 1n 21m cva2 ti1 t2 j 2 k 2j 2 k 2a1 ti1 t2 j 2 k 2j 2 k 2b2 ti1 t2 j 2 k 2j 2 k 2b1 ti12 j 21 k 21j 21 k 21c2 ti12 j 21 k 21j 21 k 23c1 ti 1 j 1 k 1 ti 1 j 1 k 1coefficients eq 26 listeda2dir ni1j 1 k 1ni1j 1 k 1sini1j 1 k 1ji1jk 1a1 dir nij 1 k 1 sinij 1 k 1ji1jk 1ni 1 j1k 1b2 djr ni 1 j1k 1 sjij1k 1nij 1 k 1j1k 1b1 djr ni 1 jk 1 sjijk 1jk 1ni 1 j 1 k1c2 dkr ni 1 j 1 k1 skij 1 k1c1 dkr ni 1 j 1 k skij 1 kj 1 k1ni 1 jk 1ni 1 j 1 kj 1 k24 define lchcontains procedure declarations lagrangian codeok325 dif lccppfollowing lagrangian equation motionp qequation 27 expressed followsp qdir p qa dir p qb dir p qcmijkijkijkequation 28 discretized followsn 1uijk2n 1uijk2dtndir p qa dir p qb dir p qcmijkijkterm showndir p qadir p qa1ijkij 21 k 21dir p qa2ij 1 k 12 2dir p qa3ij 1 k 12 2dir p qa4ij 1 k 1djr p qbdjr p qb1ijk1 jk 21djr p qb21 jk 21djr p qb31 jk 21djr p qb41 jk 1dkr p qcdkr p qc1ijk1 j 1 k2 2dkr p qc21 j 1 k2 2dkr p qc31 j 1 k2 2dkr p qc41 j 1 k26 dt lccppprocedure calculates controls time step satisfynumerical stability condition time step t calculationsatisfy following conditionscs vmaxtime step lagrangian method dtn 2 representedfollowing expressiondtn 2drmincs vmaxdrmincsvmaxnumerical coefficient constant 1minimum grid spacingsound speedmaximum flow speed27 eoenergy lccppfile contains procedure calculation energy equationfollowing lagrangian energy equation heatconductions termspi q djdticvim dtdtdtpe djdtedtr kb bt d pr djcvrm dtequation 35 discretized followsj 1 k 1tij 1 k 1n 21cv 1 j 1 k 1ni 1 j 1 k 1bt n11 j 1 k 1 1 j 1 k 1n 1n 1pi 12j 1 k 1 qi 12j 1 k 1mi 1 j 1 k 1jij 1 k 1j 1 k 128 eoscppfile contains procedures calculate equation stateequation state ions ideal equation stateelectrons ionization use equation state basedthomasfermi model shown ref 15 users selectthomasfermi model ideal equation state header fileinput lch equation state radiation useequilibrium blackbody equations 1129 init lchcontains initial conditions initial target temperature30 init matrix lccpp file matrix31 input lchinput data lagrangian code contains radius direction mush number layers mesh numberhib number beam pulseparameters fuel target structure output date step32 jacobian lccppvolume mesh calculated jacobian j expressedfollowing formulax y zj kx y z x y z x y z x y z x y z x y zj k j kk jk jj kk jeq 36 jacobian expressed followsjk 1 l 1 m 11 j 1 k 1 j 1 j 1 k 1 k 1 j 1 k 1n 2 2 2 n 2 2 2 n 2 2 2j 1 j 1 k 1 k 1 j 1 k 1 1 j 1 k 1n 2 2 2 n 2 2 2 n 2 2 2k 1 j 1 k 1 1 j 1 k 1 j 1 j 1 k 1n 2 2 2 n 2 2 2 n 2 2 2k 1 j 1 k 1 j 1 j 1 k 1 1 j 1 k 1n 2 2 2 n 2 2 2 n 2 2 2j 1 j 1 k 1 1 j 1 k 1 k 1 j 1 k 1n 2 2 2 n 2 2 2 n 2 2 21 j 1 k 1 k 1 j 1 k 1 j 1 j 1 k 1term obtainedxn 1xn 1xn 1xn 12 jk12 j1k12 jk2 j1kxijk n1 j 1 k 1j xn1 k j xij 1 k1 j xi1j 1 k1 j xij 1 ki1j 2xijk nj 1 j 1 k 1k xk xk x1 k xijk 1ij1k 1i1j1k 2i1jk 1xijk n2 j 2 k 2y 1y 1y 1y 12 jk12 j1k12 jk2 j1kyijk n2 j 2 k 2j yyijk n1 j 1 k 1yijk n1 j 1 k 1zijk n1 j 1 k 1zijk n1 j 1 k 1zijk n1 j 1 k 11 ki1j 2j y1 k1ij 2j yi1j 12 k1j y1 kij 21 k y1 k yz nz nk z nj z nj z nj z nj z nk z nk z nk z nk y ni1jk 2z n1 j1k2i1l 12 ki1jk 2ij1k 212 jk11 k1ij 2ijk 1i1j1k 212 j1k1ij1k 21 k yi1j 12 k11 lmk 2i1j1k 11 kij 2k z nijk 233 main lccppmain procedure lagrangian fluid code want artificially add nonuniformity directionsok3 code change34 outputrmscppcontains procedure output results rms nonuniformity35 output lccppresult data stored procedure time intervaldata output 01 ns lagrangian code user adjustoutput step input lch physical quantity examplevelocity defined grid points mesh output outputs1physical quantity defined center mesh exampletemperature density output outputs236 output eulercodecppfile contains procedure outputting data eulercode beam irradiation completed file output01ns37 relaxcppfollowing equation basic equation temperaturerelaxation10dticvi dt kiekie krecve dtdtrcvr dt krekie energy exchange rate ions electrons kre energy exchange rate radiationelectronskie cvi ti tekre cvr te trcollision frequencies ions electrons radiation electrons respectivelyobtained following formulae compton effectradiation electrons included expressionsolution method refs 10 132 conversion codeeuler meshes constructed based size small lagrangemesh conversion code 3d conversion process performedsetting upper limit euler total mesh number order meetresource limitation prescription employed osukin3d code1 boundary setcpp function makes boundary point data dt al layer2 check quantitiescpp function outputs data transformed euler mesh text csv file3 define converth define variables necessary conversioncode4 generateeulermeshcpp procedure determines numbereuler meshes secure necessary memorydata conversion5 interpolationcpp function interpolates data lagrangianmesh euler meshes figure 5 shows interpolation method lagrange data euler data meshsearchcpp provides relation lagrangian mesh location euler mesh location following interpolation equationobtain physical quantity euler meshesexample u shows velocitysumr1 21 2uijkui1jkui1j1krijkri1jkri1j1k1 21 2uij1kuijk1ui1jkrij1krijk1ri1jk1ui1j1kuij1k1ri1j1krij1k1ri1jkri1j1krij1krijk1ri1jk1ri1j1k1rij1k1sumrrijkfigure 5 interpolation velocityusually euler mesh size small compared size lagrange mesh interpolation physical quantitiesvelocity physical quantity corresponding lagrange meshacquired meshsearchcpp interpolated 0th ordermethod hand corresponding lagrange meshsmaller euler mesh way shown fig5 eq 40 example velocity interpolationspecial treatment 3d optimize required memory size6 main convertcpp main procedure conversion codeprocedure selects output lagrangian data transferredeuler code lagrangian data sets obtained lagrangiancode lagrangian meshes deformed fluid motionlagrangian code stops mesh crushed conversionrange dt layer aluminum regionvolume al region 25 times larger thicknessdt layer required number euler meshes calculatedlagrange data sets examined data set time2ns earlier output data set function selectsconversion date smallest number euler meshrequired number euler meshes exceeds number eulermeshes set input lch euler mesh total number forcedset upper limit defined7 meshsearchcpp procedure examines location eulermesh lagrangian meshes meshsearch function divideslagrange mesh 12 triangular tetrahedra shown fig 6examines definition point euler mesh containedspecific lagrange meshfigure 6 lagrange mesh 12 triangular tetrahedrafig 7 p represents coordinate vector specific euler meshrepresents coordinate vector lagrangian mesh point1point2 point3 point4 vp positions specified fig 7vectors composed position vectors followsv11 rpoint2 rpoint1v21 rpoint3 rpoint1point3 rpoint1point4 rpoint1v12 rv22 rpoint1point1vp 1 p rvp 2 p rv31 rpoint4 rpoint1v41 rpoint4 rpoint2point1 rpoint1point3 rpoint2v32 rv42 rpoint1point2vp 3 p rvp 4 p rfigure 7 euler mesh point p tetrahedron lagrange meshpoint p triangular pyramid following conditionsmet12 vp 1v21 v22 vp 231 v32 vp 3v41 v42 vp 48 outputcpp procedure converted data output9 read variablecpp procedure reads file data outputlagrange code lagrangian data set selection33 eulerian code1 boundarytrackingcppfunction track material boundary surfaces boundarypoint specified coordinates variables boundarymeshboundarymesh j boundarymesh k function interpolatesvelocities u v w coordinates volume interpolationtracks position boundary point fig 8 dotted linesrepresent material boundaries boundary point existsposition shown fig 9 boundary point velocity ub vb wbcalculated volume interpolation method obtainedfollowing equationsubvbwbvu1 ui1j1k1 vu2 uij1k1 vu3 uijk1 vu4 ui1jk142vu5 ui1j1k vu6 uij1k vu7 uijk vu8 ui1jkvv1 vi1j1k1 vv2 vij1k1 vv3 vijk1 vv4 vi1jk1 43vv5 vi1j1k vv6 vij1k vv7 vijk vv8 vi1jkvw1wi1j1k1 vw2 wij1k1 vw3 wijk1vw4wi1jk1 vw5 wi1j1k vw6 wij1k vw7 wijkvw8wi1jkfigure 8 material boundary pointsfigure 9 velocity interpolation volume interpolation2 generatematrixcppmesh total numbers im jm loaded converteddata generatematrix variables required euler codedefined based number im jm3 ms tdmacppfunction solve matrixes tdma tridiagonalmatrix algorithm4 materialrecognationcppfunction discriminate material material boundarylines5 paintmaterialcppmaterial specified material boundary linesprocedure6 rmfp ecshcppprocedure calculate rosseland mean free path ref 117 scanlinecppprocedure specifies material euler mesh8 artv ecshcppfile contains procedure calculate artificial viscositythreedimensional artificial viscosity written followsqx cqcl cscl csqy cq2qz cq2cl csdiscretized artificial viscosities shownqx ni 1 j 1 k 1ni 1 j 1 k 1 cquni1j 1 k 1 unij 1 k 1 2ni 1 j 1 k 1 cl cs uni1j 1 k 1 unij 1 k 1qy ni 1 j 1 k 1ni 1 j 1 k 1 cquni 1 j1k 1 uni 1 jk 1 2ni 1 j 1 k 1 cl cs uni 1 j1k 1 uni 1 jk 1qz ni 1 j 1 k 1ni 1 j 1 k 1 cquni 1 j 1 k1uni 1 j 1 k 2ni 1 j 1 k 1 cl cs uni 1 j 1 k1 uni 1 j 1 k9 define ecshhcontains constant values normalization factors procedure declarations required10 dif ecshcppfollowing equations motion1 p qx1 p q1 p qequations 52 discretized followsn 21uij 1 k 1n 12n 12uij 1 k 1 dtx ij 1 k 1y ij 1 k 12 2n 21ffn 211 p qz ij 1 k 1ij 1 k 1n 21n 21ij 21 k 21n 1uij2 1 k 1 02 j 2 k 2n 1n 21 ui1j 1 k 1n 21i1j 12 k 2n 2ij 21 k 21dx 11 k 12 j 2n 21n 1uij2 1 k 1 0ij 21 k 21n 1n 1u 2 1u 21ij 2 k 2i1j 2 k 1uij2 1 k 1dx 1n 1n 1u 21u 21n 12ij 2 k 1ij 2 k 2vij 1 k 1dy 12 12 j 2 k 2n 1n 13 k 1 uij 1 k 1n 12ij 2n 1ij 21 k 21dy 12 12 j 2 k 1n 21n 1vij21 k 1 0n 12vij 1 k 1 0ij 21 k 21n 2n 1u 211 uij 1 k 1w 2n 1ij 21 k 21dz 12 12 j 2 k 2n 2n 11 k 3 uij 1 k 1n 21ij 2ij 21 k 21dz n 212 j 12 k 2n 21wij 1 k 1 0n 21wij 1 k 1 0n 11 p qn 1n 1ij 21 k 2112j 1 k 1 12j 1 k 1n 12n 21n 21n 1pi 1 j 1 k 1 qi 1 j 1 k 1 pi 1 j 1 k 1 qi 12j 1 k 1n 12dxij 1 k 111 eod ecshcppfollowing continuity equationu v wx yequation 56 discretized follows12 j 21 k 21dtx 1 j 1 k 12 2 2y 1 j 1 k 1z 1 j 1 k 1x 1 j 1 k 1y 1 j 1 k 1z 1 j 1 k 1ni 1 j 1 k 1ni 1 j 1 k 1wij 1 k1j 1 kdzij 1 k 121 j 21 k 21n 11 k 1 1 j 1 k 12 j 2ui 1 j 1 k 1dxn 1ij 2 k 2n 31 k 1 1 j 1 k 1dxn12 j 21 k 21i1j 1uni 1 j 1 k 1uni 1 j 1 k 112 j 21 k 21n 11 1 j 1 k 12 j 12 k 2vidy 1j 1 k 1vij 1 k 121 j 21 k 21dyij 1 k 1vij1k 1jk 121 j 21 k 21dxni 1 j 1 k 121 j 21 k 21uni1j 1 k 1 unij 1 k 12 jk 2n 11 k 12 j 22 j 2 k 1dy n 12 j1k 2j 21 k 21j 1 k 121 j 21 k 21n 11 k 1 1 j 1 k 12 j 2wi 1 j 1 k 1dz n1 j 1 k2n 11 k 3 1 j 1 k 12 j 2dz n 121 j 21 k 212 j 112 eoenergy ecshj 21 k 21j 1 k 1following basic energy equationspi qbtiuu ticviuu tebtecveuu trbtrcvrbti 0 hif discretized energy equation iontemperature example followsti 1 j 1 k 1 ti 1 j 1 k 1 dtx 1 j 1 k 1y 1 j 1 k 1z 1 j 1 k 12 n1 j 1 k 112 j 21 k 21cvi 1 j 1 k 1ni 1 j 1 k 1x 1 j 1 k 1 y 1 j 1 k 1z 1 j 1 k 11 j 21 k 2112 j 21 k 21uni 1 j 1 k 1uni 1 j 1 k 1 0uni 1 j 1 k 1 01 j 21 k 21vn1 ti 1 j 1 k 112 j 2 k 2dy n12 jk 2ti n 13 k 1 ti 1 j 1 k 12 j 2dy n 12 j1k 1ti n21 j 21 k 21vij 1 k 11 0j 2 k 21 0j k1 j 1 k 12 2 2ti n 11 ti 1 j 1 k 12 j 12 k 21 j 1 k 1dz n12 j 2 kti 13 ti 1 j 1 k 12 j 12 k 2wij k1 j 1 k 1 ti 1 j 1 k 12dxn 1ij 2 k 2ti n 31 ti 1 j 1 k 12 j 1dxn1 k 1i1j 2ti n2 j 2 k1uni1j 1 k 1 unij 1 k 1dxij 1 k 121 j 21 k 21vi 1 j1k 1 vijk 21dyi21 j 21 k 21jk 21wi 1 j 1 k1 wij 21 kdzi21 j 21 k 21j 21 kj 21 k 21j 1 k 113 eos ecshcppequation equation state lagrangiancode14 fusioncppfusion reactions calculated procedure detailsshown ref 1 fusion reaction formulae deuteriumtritium shownd d t101mev p302mevhe3 082mev n245mevd t he4 35mev n141mevd decreases dd dt reactions expression 62number density nd change given bellowndd ndthvidd nd nd hvidt nd ntconsidering diffusion term particles term particleabsorption n described followshvidt nd nt f ndiscretized particle reaction writtenn ni 1 j 1 k 1 tnd ni 1 j 1 k 1 nt ni 1 j 1 k 1 hvidt ni 1 j 1 k 1n n11 j 1 k 1dd dt reaction rates shown refs 1 16flux particle shown ff d nd diffusion coefficient expressed followingequation334 nv speed particle mean free pathsecond term denominator eq 67 expresses fluxlimiting effect limits excess flux steep gradientdensity flux f particles x y z directionsexpressed following equationsfxn v3n 34 nn v3fyfz3 yn v3n 34 nenergy increases particle energy deposition showne n ficvie n fetecvetif represents distribution factor particle energyions electrons 17fite kevfe 1 fidiscretized energy increases ions electrons describedfollowsti n121 j 21 k 21ti ni 1 j 1 k 1e n ni 1 j 1 k 1 fi ni 1 j 1 k 1te n1te ni 1 j 1 k 1 t1 j 1 k 1e n ni 1 j 1 k 1 fe ni 1 j 1 k 1ni 1 j 1 k 1 cve ni 1 j 1 k 115 init ecshcppfile initializes eulerian code16 load convertcppprocedure read converted datani 1 j 1 k 1 cvi ni 1 j 1 k 117 main ecshcppmain function eulerian code18 output ecshcppresults stored procedure4 shell script files setup postprocessingshell file prepared integrated run lagrange conversion euler codes code runmanually finishing simulation process usersneed visualize simulation data data computed visualized following shell scripts shell files require gnuplot 46later41 calculation set shell1 setup fusionh shell file remove calculation output datemakes output file42 visualization lagrange code datavisualized data images stored pic la directory1 adiabatshvisualized graph time history adiabat calculatedinsulationcpp lagrangian code2 animation ti modeshshell file visualizes mode analysis results ion temperaturecalculated legendrecpp lagrangian code3 implosionvelocityshshell plots time histories implosion speed averagedazimuthal direction dt inner surface dt outer surfaceaveraged dt speed4 rmsoutputshshell file plots time histories rootmeansquare rmsion temperature mass density dt layer allayer rms data calculated rmscpp lagrangiancode5 slc t rshshell file outputs images r t diagrams representingtime history lagrangian meshes 30 60 120 150degrees 10 100 190 280 degrees execute shellfile users need specify boundary mesh number materiallagrangian code43 visualization euler code datavisualized data files stored pic eu directory1 animation atomic xyshshell file visualizes distributions atomic numberxy plane output data euler code2 animation atomic yzshshell file visualizes distributions atomic numberyz plane output data euler code3 animation rho xyshshell file visualizes distributions mass density xyplane output data euler code4 animation rho yzshshell file visualizes distributions mass density yzplane output data euler code5 animation ti xyshshell file visualizes distributions ion temperaturexy plane output data euler code6 animation ti yzshshell file visualizes distributions ion temperatureyz plane output data euler code7 fusiongainshshell file plots history fusion energy gain8 rhorshshell file plots history r5 instructions userrunning osuki code user set target pellethib parameters accordingly followsaok3 code calculation type 3d osukin code select ok3 illumination code calculation type ok swich 1 calculationok3 ok swich 5 1d uniform energy distribution typehibs energy distribution changes radius direction ok swich10 1d energy distribution illumination nonuniformitydirections add artificially nonuniformity directionsmain lccppbprojectile ion type projectile ion types included ok3pb u csc p users choose add species expanding arraysazb aab input lchcion beam parameters user specify hib radii target surfacechanging parameter tdbrc input lch design beam inputpulse file pulse rise start time rise time beampower set variables t beamj del t beamj p owerjj 1 5 respectively users input total input beam energy input energydefine ecshh manually users want run euler code independetly parameter value wobbling beam maximum radiusbeam axis trajectory rotation oscillating frequencyspecified users set desirable values maximum beam trajectoryradius rrot inputok3h rotational number rotationnumberinput lchdthe beam irradiation position file hifschemeh contains 1 2 3 6 12 2032 60 120beam irradiation schemes users choose addhib irradiation schemes supplementing fileethe reactor chamber users specify chamber radius changing parameter rch parameter dz fixes pellet displacement reactorchamber center cartesian ps coordinates fig 10 ok3 targetalignment errors dx dy dz specified change settinginput lchfthe target pellet structure mesh number parameter values target set input lch init lch input lch users changeboundary radius layer total mesh number mesh number layer present osukin 3d includes example dtalpbstructure target defined target layerthickness parameters rin rbc1 rbc2rout users add target materials expanding arraysazt0 aztm aat au aro sc inputok3hgthe maximal euler mesh number maximal euler mesh number setinput lch upper limit mesh number defined dependingresource limitation workstationfigure 10 schematic diagram target misalignmentusers want employ new substance target structure usera needadd solid density atomic mass constanth users controllagrangian radial mesh number layer changing value m w cinput lch m w c 0 radial mesh width dr1 dr2layers equal mwc large radial mesh numberlayer num k1 num k2 close numberusers run codeosukinfusionstartsh start running osukin 3d code simulations shell script executed lagrange fluid code data conversion code euler fluid codesequentially activated results lagrangian simulation savedoutput directory results eulerian simulation savedoutput euler6 testing program osukin 3dtests shown present target fuel implosiondynamics example cases hibs target fuelfollowing common parameters values employed ref1 beam radius entrance reactor chamber ren 35 mmbeam particle density distribution gaussian profile projectilepb ions 8 gev target multilayered pellet pelletouter radius 4 mm pb layer thickness 0029 mm al thickness0460 mm dt thickness 0083 mm pb al dt layersradial mesh numbers 4 46 30 example cases respectivelytotal mesh number theta direction 90 input beam pulseshown fig 12 ref 1 beam radius 38mm targetsurface rb 38mm changes wb 37mm wobblingbeam irradiation wb rotational period beam axisrotational frequency 424mhz rotaionnumber 113d langrange code run ok3 illumination codecase ok switch 10 added artificial nonuniformity y32 spherical harmonics amplitude 300fig 11 ion temperature distribution shown t35ns fig12 mass density distribution presented t35ns target shapelargely distorted nonuniformity hibs deposition energydistributionfigure 11 ion temperature 3d lagrange code ok3 code t35nsnonuniformity distiribution y32 amplitude 30figure 12 mass density 3d lagrange code ok3 code t35nsnonuniformity distriution y32 amplitude 30performed runthrough simulation tests example casesok3 code coupled runthrough simulations implosiondata obtained lagrange code data voidclosure time transferred euler code data conversioncode cases computed target fuel implosion dynamicsspiral wobbling oscillating hibs examplesrunthrough simulations ok3 illumination code ok switch 1input beam pulse employed runthrough tests shown fig13 beam input energy 54mj r t diagramcase hibs wobbling fig 14 lagrangecode test resultsstored output directory visualized figs 15 target iontemperature ti distributions t 00 150 200 225 nscase hibs wobbling behavior rms nonuniformity resultsshown figs 16 dt layers ion temperatureti b dtlayers mass density c al layers ion temperatureti d allayers mass density hibs wobbling motionimplosion wobbling frequency 424mhz radius accelerationdistributions shown figs 17 direction bdirection t 625tw 112ns solid lines t 675tw 122nsdotted lines tw shows rotation time figures 17 presentnonuniformity phase implosion acceleration controlledexternally hibs wobbling behavior 1 18figure 13 input beam pulse shape example runthrough testsfigure 14 r t diagram implosion hibs wobbling illuminationblack line area shows pb layer blue line area al red line area dtfigure 15 ion temperature distributions example runthrough test hibswobbling illumination t00ns b 150ns c 200ns d 225nsfigure 16 rms nonuniformity histories dt ion temperature b dt massdensity c al ion temperature d al mass density caseswobbling hibs solid lines wobbling hibs dotted linesfigure 17 radial acceleration distributions b solid linesacceleration ditributions t 625tw 113ns dotted lines t 675tw122nslagrange code computation implosion data convertedtransferred euler code figures 18 ion temperaturedistributions euler code figures 18 dt fuel ignitedgain obtained 175 example case realistichif reactor design implosion parameters optimizedobtain sufficient gain larger 3040 hif 1 4 5 18figure 18 ion temperature distributions t 2488ns b 2844ns 2921nsorder check accuracy 3d euler code performedeuler code tests initial conditions 2d euler code initialconditions euler code output lagrangian codeend 2d euler initial conditions converted 3dphysical values uniform direction lagrangian test 2d resultstarget ion temperature ti mass density distributiont 29 ns shown figs 14 15 ref 1 caseswobbling hibs 2d eulerian test results fusionenergy gain shown fig 16 ref 1 fig 19 iontemperature distributions 3d euler code wobbling hibssimulation case fuel ignited t 301nshistories fusion gain g 2d code 3d code shownfig 20 fusion gain 525 2d code 576 3d codeaddition test wobbling hibs figs 1516 ref 1 fusion gain 761 2d 1 674 3dresults confirm 3d euler code reproduces 2d resultssuccessfully ignition time fusion gain obtainedfigure 19 ion temperature distributions 3d euler code hibs wobblingt3042ns b 3053ns c 3235ns d 3258nsfigure 20 fusion energy gain curves cases 3d code solid line2d code dotted linesimulated doublecone ignition scheme19 3d eulercode doublecone ignition scheme proposed prof jie zhang19 compressed dt clouds created gold conesdt spherical clouds collide like impact fusion 20example case compressed dt maximum density dt fuelset 10 105 kgm3 gaussian spatial distribution dtignition attained additional heating takenconsideration example ion electron radiation temperatures10ev initially euler code radius fuel 92mmass 01mg set colliding speed w dt fuel clouds30 105 ms ion temperature distributions shown fig 21figure 21 ion temperature distributions doublecone ignition scheme 19t00ns b 1506ns c 2980ns d 4678ns7 conclusionsdeveloped presented osukin 3d code usefulsimulate 3d spherical dt fuel target implosion hif osukin code upgraded implosion simulation 2d osukicode consists lagrangian fluid code data conversionlagrangian code data euler code data euler code nearvoid closure phase dt fuel implosion dt fuel spatial deformationstagnation phase dt fuel compressedthousand times solid density osukin 3d code provideuseful tool integrated dt fuel target implosion simulation hifdeclaration competingauthors declare known competing financial interests personal relationships appeared influence workreported papercredit author statementhiroki nakamura software euler code conversion code validation visualization ken uchibori software lagrange code conversion code validation visualization writing draft shigeo kawata basic idea conceptualization methodology investigation supervision writingpaper takahiro karino methodology supervision ryo sato methodologyvalidation alexander ogoyski software ok3 code validationacknowledgmentswork partly supported jsps japanu s exchange programmext core center optical research education utsunomiyauniversity shanghai jiao tong university ileosaka universitywork partly collaborations xian jia tonguniversity inst modern physics lanzhou inst physics beijingfudan university shanghai renmin university china beijing elibeamlines praguereferences1 r sato s kawata t karino k uchibori t iinuma h katohai ogoyski comput phys commun 240 2019 831002 s atzeni j meyertervehn physics inertial fusion oxforduniversity press 20093 s kawata k niu j phys soc jpn 53 1984 341634264 s kawata t karino ogoyski matter radiation extremes 12 2016 891135 s kawata advances physics x 61 2021 18738606 ogoyski t someya s kawata comput phys commun 1572004 1601727 ogoyski s kawata t someya compt phys commun 1612004 1431508 ogoyski s kawata p h popov compt phys commun 1812010 133213339 w d schulz twodimensional lagrangian hydrodynamic differenceequations university california lawrence radiation laboratorylivermore california ucrl6776 196310 n tahir k long e w laing j appl phys 60 1986 89811 ya b zeldovich yu p raizer physics shock waves hightemperature hydrodynamic phenomena dover books physics newyork 200212 ta mehlhorn j appl phys 52 1981 6522653213 j von neumann r d richtmyer j appl phys 21 1950 23223714 j p christianen d e t f ashby k v robertsphysics communications 7 1974 27128715 r bell rutherford laboratory report rl80091 198116 s richardson 2019 nrl plasma formulary 201917 g s fraley e j linnebur r j mason r l morse phys fluids 171974 47448918 r sato s kawata t karino k uchibori ogoysk scientificreports 6659 2019 httpsdoiorg101038s4159801943221719 j zhang w m wang x h yang d wu y y ma j l jiao zzhang f y wu x h yuan y t li j q zhu rhilosophicaltran royal soc 2020 httpsdoiorg101098rsta2020001520 f winterberg z naturforschg 19a 1964 231239