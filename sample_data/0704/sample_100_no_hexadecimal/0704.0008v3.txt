Numerical solution of shock and ramp compression
for general material properties
Damian C. Swift∗

arXiv:0704.0008v3 [cond-mat.mtrl-sci] 1 Jul 2008

Materials Science and Technology Division,
Lawrence Livermore National Laboratory,
7000, East Avenue, Livermore, CA 94550, U.S.A.
(Dated: March 7, 2007; revised April 8, 2008 and July 1, 2008 – LA-UR-07-2051)

Abstract
A general formulation was developed to represent material models for applications in dynamic
loading. Numerical methods were devised to calculate response to shock and ramp compression, and
ramp decompression, generalizing previous solutions for scalar equations of state. The numerical
methods were found to be flexible and robust, and matched analytic results to a high accuracy.
The basic ramp and shock solution methods were coupled to solve for composite deformation
paths, such as shock-induced impacts, and shock interactions with a planar interface between
different materials. These calculations capture much of the physics of typical material dynamics
experiments, without requiring spatially-resolving simulations. Example calculations were made of
loading histories in metals, illustrating the effects of plastic work on the temperatures induced in
quasi-isentropic and shock-release experiments, and the effect of a phase transition.
PACS numbers: 62.50.+p, 47.40.-x, 62.20.-x, 46.35.+z
Keywords: material dynamics, shock, isentrope, adiabat, numerical solution, constitutive behavior

∗

Electronic address: damian.swift@physics.org

1

I.

INTRODUCTION

The continuum representation of matter is widely used for material dynamics in science and engineering. Spatially-resolved continuum dynamics simulations are the most
widespread and familiar, solving the initial value problem by discretizing the spatial domain
and integrating the dynamical equations forward in time to predict the motion and deformation of components of the system. This type of simulation is used, for instance, to study
hypervelocity impact problems such as the vulnerability of armor to projectiles [1, 2], the
performance of satellite debris shields [3], and the impact of meteorites with planets, notably
the formation of the moon [4]. The problem can be divided into the dynamical equations
of the continuum, the state field of the components s(~r), and the inherent properties of
the materials. Given the local material state s, the material properties allow the stress τ
to be determined. Given the stress field τ (~r) and mass density field ρ(~r), the dynamical
equations describe the fields of acceleration, compression, and thermodynamic work done
on the materials.
The equations of continuum dynamics describe the behavior of a dynamically deforming
system of arbitrary complexity. Particular, simpler deformation paths can be described more
compactly by different sets of equations, and solved by different techniques than those used
for continuum dynamics in general. Simpler deformation paths occur often in experiments
designed to develop and calibrate models of material properties. These paths can be regarded
as different ways of interrogating the material properties. The principal examples in material
dynamics are shock and ramp compression [5, 6]. Typical experiments are designed to induce
such loading histories and measure or infer the properties of the material in these states
before they are destroyed by release from the edges or by reflected waves.
The development of the field of material dynamics was driven by applications in the
physics of hypervelocity impact and high explosive systems, including nuclear weapons [7].
In the regimes of interest, typically components with dimensions ranging from millimeters to meters and pressures from 1 GPa to 1 TPa, material behavior is dominated by the
scalar equation of state (EOS): the relationship between pressure, compression (or mass
density), and internal energy. Other components of stress (specifically shear stresses) are
much smaller, and chemical explosives react promptly so can be treated by simple models of complete detonation. EOS were developed as fits to experimental data, particularly
2

to series of shock states and to isothermal compression measurements [8]. It is relatively
straightforward to construct shock and ramp compression states from an EOS algebraically
or numerically depending on the EOS, and to fit an EOS to these measurements. More
recently, applications and scientific interest have grown to include a wider range of pressures
and time scales, such as laser-driven inertial confinement fusion [9], and experiments are
designed to measure other aspects than the EOS, such as the kinetics of phase changes, constitutive behavior describing shear stresses, incomplete chemical reactions, and the effects of
microstructure, including grain orientation and porosity. Theoretical techniques have also
evolved to predict the EOS with ∼1% accuracy [10] and elastic contributions to shear stress
with slightly poorer accuracy [11].
A general convention for representing material states is described, and numerical methods
are reported for calculating shock and ramp compression states from general representations
of material properties.

II.

CONCEPTUAL STRUCTURE FOR MATERIAL PROPERTIES

The desired structure for the description of the material state and properties under dynamic loading was developed to be as general as possible with respect to the types of material
or models to be represented in the same framework, and designed to give the greatest amount
of commonality between spatially-resolved simulations and calculations of shock and ramp
compressions.
In condensed matter on sub-microsecond time scales, heat conduction is often too slow to
have a significant effect on the response of the material, and is ignored here. The equations
of non-relativistic continuum dynamics are, in Lagrangian form, i.e. along characteristics
moving with the local material velocity ~u(~r),
Dρ(~r, t)
= −ρ(~r, t)div ~u(~r, t)
Dt
D~u(~r, t)
1
=
div τ (~r, t)
Dt
ρ(~r, t)
De(~r, t)
= ||τ (~r, t)grad ~u(~r, t)||
Dt

(1)
(2)
(3)

where ρ is the mass density and e the specific internal energy. Changes in e can be related
to changes in the temperature T through the heat capacity. The inherent properties of
3

each material in the problem are described by its constitutive relation or equation of state
τ (s). As well as experiencing compression and work from mechanical deformation, the local
material state s(~r, t) can evolve through internal processes such as plastic flow. In general,
Ds(~r, t)
≡ ṡ[s(~r, t), U(~r, t)]
Dt

:

U ≡ grad ~u(~r, t)

(4)

which can also include the equations for ∂ρ/∂t and ∂e/∂t. Thus the material properties must
describe at a minimum τ (s) and ṡ[s(~r, t), U(~r, t)] for each material. If they also describe T (s),
the conductivity, and ṡ(ė), then heat conduction can be treated. Other functions may be
needed for particular numerical methods in continuum dynamics, such as the need for wave
speeds (e.g. the longitudinal sound speed), which are needed for time step control in explicit
time integration. Internally, within the material properties models, it is desirable to re-use
software as much as possible, and other functions of the state are therefore desirable to allow
models to be constructed in a modular and hierarchical way. Arithmetic manipulations must
be performed on the state during numerical integration, and these can be encoded neatly
using operator overloading, so the operator of the appropriate type is invoked automatically
without having to include 'if-then-else' structures for each operator as is the case in nonobject-oriented programming languages such as Fortran-77. For instance, if ṡ is calculated
in a forward-time numerical method then changes of state are calculated using numerical
evolution equations such as
s(t + δt) = s(t) + δtṡ.

(5)

Thus for a general state s and its time derivative ṡ, which has an equivalent set of components, it is necessary to multiply a state by a real number and to add two states together.
For a specific software implementation, other operations may be needed, for example to
create, copy, or destroy a new instance of a state.
The attraction of this approach is that, by choosing a reasonably general form for the
constitutive relation and associated operations, it is possible to separate the continuum
dynamics part of the problem from the inherent behavior of the material. The relations
describing the properties of different types of material can be encapsulated in a library form
where the continuum dynamics program need know nothing about the relations for any specific type of material, and vice versa. The continuum dynamics programs and the material
properties relations can be developed and maintained independently of each other, provided
that the interface remains the same (Table I). This is an efficient way to make complicated
4

material models available for simulations of different types, including Lagrangian and Eulerian hydrocodes operating on different numbers of dimensions, and calculations of specific
loading or heating histories such as shock and ramp loading discussed below. Software interfaces have been developed in the past for scalar EOS with a single structure for the state
[12], but object-oriented techniques make it practical to extend the concept to much more
complicated states, to combinations of models, and to alternative types of model selected
when the program is run, without having to find a single super-set state encompassing all
possible states as special cases.
A very wide range of types of material behavior can be represented with this formalism.
At the highest level, different types of behavior are characterized by different structures for
the state s (Table II). For each type of state, different specific models can be defined, such
as perfect gas, polytropic and Grüneisen EOS. For each specific model, different materials
are represented by choosing different values for the parameters in the model, and different
local material states are represented through different values for the components of s. In the
jargon of object-oriented programming, the ability to define an object whose precise type
is undetermined until the program is run is known as polymorphism. For our application,
polymorphism is used at several levels in the hierarchy of objects, from the overall type of a
material (such as 'one represented by a pressure-density-energy EOS' or 'one represented by
a deviatoric stress model') through the type of relation used to describe the properties of that
material type (such as perfect gas, polytropic, or Grüneisen for a pressure-density-energy
EOS, or Steinberg-Guinan [13] or Preston-Tonks-Wallace [14] for a deviatoric stress model),
to the type of general mathematical function used to represent some of these relations (such
as a polynomial or a tabular representation of γ(ρ) in a polytropic EOS) (Table III). States
or models may be defined by extending or combining other states or models – this can be
implemented using the object-oriented programming concept of inheritance. Thus deviatoric
stress models can be defined as an extension to any pressure-density-energy EOS (they are
usually written assuming a specific type, such as Steinberg's cubic Grüneisen form), homogeneous mixtures can be defined as combinations of any pressure-density-temperature EOS,
and heterogeneous mixtures can be defined as combinations of materials each represented
by any type of material model.
Trial implementations have been made as libraries in the C++ and Java programming
languages [15]. The external interface to the material properties was general at the level
5

of representing a generic material type and state. The type of state and model were then
selected when programs using the material properties library were run. In C++, objects
which were polymorphic at run time had to be represented as pointers, requiring additional
software constructions to allocate and free up physical memory associated with each object.
It was possible to include general re-usable functions as polymorphic objects when defining
models: real functions of one real parameter could be polynomials, transcendentals, tabular
with different interpolation schemes, piecewise definitions over different regions of the one
dimensional line, sums, products, etc; again defined specifically at run time. Object-oriented
polymorphism and inheritance were thus very powerful techniques for increasing software
re-use, making the software more compact and more reliable through the greater use of
functions which had already been tested.
Given conceptual and software structures designed to represent general material properties suitable for use in spatially-resolved continuum dynamics simulations, we now consider
the use of these generic material models for calculating idealized loading paths.

III.

IDEALIZED ONE-DIMENSIONAL LOADING

Experiments to investigate the response of materials to dynamic loading, and to calibrate
parameters in models of their behavior, are usually designed to apply as simple a loading
history as is consistent with the transient state of interest. The simplest canonical types of
loading history are shock and ramp [5, 6]. Methods of solution are presented for calculating
the result of shock and ramp loading for materials described by generalized material models
discussed in the previous section. Such direct solution removes the need to use a timeand space-resolved continuum dynamics simulation, allowing states to be calculated with
far greater efficiency and without the need to consider and make allowance for attributes of
resolved simulations such as the finite numerical resolution and the effect of numerical and
artificial viscosities.

A.

Ramp compression

Ramp compression is taken here to mean compression or decompression. If the material
is represented by an inviscid scalar EOS, i.e. ignoring dissipative processes and non-scalar

6

effects from elastic strain, ramp compression follows an isentrope. This is no longer true
when dissipative processes such as plastic heating occur. The term 'quasi-isentropic' is
sometimes used in this context, particularly for shockless compression; here we prefer to
refer to the thermodynamic trajectories as adiabats since this is a more appropriate term:
no heat is exchanged with the surroundings on the time scales of interest.
For adiabatic compression, the state evolves according to the second law of thermodynamics,
de = T dS − p dv

(6)

where T is the temperature and S the specific entropy. Thus
ė = T Ṡ − p v̇ = T Ṡ −

pdiv~u
,
ρ

(7)

or for a more general material whose stress tensor is more complicated than a scalar pressure,
de = T dS + τn dv

⇒

ė = T Ṡ +

τn div~u
ρ

(8)

where τn is the component of stress normal to the direction of deformation. The velocity
gradient was expressed through a compression factor η ≡ ρ′ /ρ and a strain rate ǫ̇. In all
ramp experiments used in the development and calibration of accurate material models,
the strain has been applied uniaxially. More general strain paths, for instance isotropic or
including a shear component, can be treated by the same formalism, and that the working
rate is then a full inner product of the stress and strain tensors.
The acceleration or deceleration of the material normal to the wave as it is compressed
or expanded adiabatically is
r
∂τn
Du
=− −
,
Dv
∂v

(9)

cl
Du
=
Dρ
ρ

(10)

from which it can be deduced that

where cl is the longitudinal wave speed.
As with continuum dynamics, internal evolution of the material state can be calculated
simultaneously with the continuum equations, or operator split and calculated periodically
at constant compression [16]. The results are the same to second order in the compression
increment. Operator-splitting allows calculations to be performed without an explicit entropy, if the continuum equations are integrated isentropically and dissipative processes are
captured by internal evolution at constant compression.
7

Operator-splitting is desirable when internal evolution can produce highly nonlinear
changes, such as reaction from solid to gas: rapid changes in state and properties can
make numerical schemes unstable. Operator-splitting is also desirable when the integration
time step for internal evolution is much shorter than the continuum dynamics time step.
Neither of these considerations is very important for ramp compression without spatial resolution, but operator-splitting was used as an option in the ramp compression calculations
for consistency with continuum dynamics simulations.
The ramp compression equations were integrated using forward-time Runge-Kutta numerical schemes of second order. The fourth order scheme is a trivial extension. The
sequence of operations to calculate an increment of ramp compression is as follows:
1. Time increment:
δt = −

| ln η|
ǫ̇

(11)

2. Predictor:
δt
ṡm (s(t), ǫ̇)
2

s(t + δt/2) = s(t) +

(12)

3. Corrector:
s(t + δt) = s(t) + δtṡm (s(t + δt/2), ǫ̇)

(13)

4. Internal evolution:
s(t + δt) → s(t + δt) +

Z

t+δt

ṡi (s(t′ ), ǫ̇) dt′

(14)

t

where ṡm is the model-dependent state evolution from applied strain, and ṡi is internal
evolution at constant compression.
The independent variable for integration is specific volume v or mass density ρ; for
numerical integration finite steps are taken in ρ and v. The step size ∆ρ can be controlled so
that the numerical error during integration remains within chosen limits. A tabular adiabat
can be calculated by integrating over a range of v or ρ, but when simulating experimental
scenarios the upper limit for integration is usually that one of the other thermodynamic
quantities reaches a certain value, for example that the normal component of stress reaches
zero, which is the case on release from a high pressure state at a free surface. Specific
end conditions were found by monitoring the quantity of interest until bracketed by a finite
integration step, then bisecting until the stop condition was satisfied to a chosen accuracy.
8

During bisection, each trial calculation was performed as an integration from the first side
of the bracket by the trial compression.

B.

Shock compression

Shock compression is the solution of a Riemann problem for the dynamics of a jump
in compression moving with constant speed and with a constant thickness. The RankineHugoniot (RH) equations [5] describing the shock compression of matter are derived in
the continuum approximation, where the shock is a formal discontinuity in the continuum
fields. In reality, matter is composed of atoms, and shocks have a finite width governed by
the kinetics of dissipative processes – at a fundamental level, matter does not distinguish
between shock compression and ramp compression with a high strain rate – but the RH
equations apply as long as the width of the region of matter where unresolved processes
occur is constant. Compared with the isentropic states induced by ramp compression in
a material represented by an EOS, a shock always increases the entropy and hence the
temperature. With dissipative processes included, the distinction between a ramp and a
shock may become blurred.
The RH equations express the conservation of mass, momentum, and energy across a
moving discontinuity in state. They are usually expressed in terms of the pressure, but are
readily generalized for materials supporting shear stresses by using the component of stress
normal to the shock (i.e., parallel with the direction of propagation of the shock), τn :
τn − τn0
u2s = −v02
,
v0 − v
p
−(τn − τn0 )(v0 − v),
∆up =
1
e = e0 − (τn + τn0 )(v0 − v),
2

(15)
(16)
(17)

where us is the speed of the shock wave with respect to the material, ∆up is the change in
material speed normal to the shock wave (i.e., parallel to its direction of propagation), and
subscript 0 refers to the initial state.
The RH relations can be applied to general material models if a time scale or strain rate
is imposed, and an orientation chosen for the material with respect to the shock. Shock
compression in continuum dynamics is almost always uniaxial.
The RH equations involve only the initial and final states in the material. If a material
9

has properties that depend on the deformation path – such as plastic flow or viscosity –
then physically the detailed shock structure may make a difference [17]. This is a limitation
of discontinuous shocks in continuum dynamics: it may be addressed as discussed above
by including dissipative processes and considering ramp compression, if the dissipative processes can be represented adequately in the continuum approximation. Spatially-resolved
simulations with numerical differentiation to obtain spatial derivatives and forward time
differencing are usually not capable of representing shock discontinuities directly, and an
artificial viscosity is used to smear shock compression over a few spatial cells [18]. The
trajectory followed by the material in thermodynamic space is a smooth adiabat with dissipative heating supplied by the artificial viscosity. If plastic work is also included during this
adiabatic compression, the overall heating for a given compression is greater than from the
RH equations. To be consistent, plastic flow should be neglected while the artificial viscosity
is non-zero. This localized disabling of physical processes, particularly time-dependent ones,
during the passage of the unphysically smeared shock was previously found necessary for
numerically stable simulations of detonation waves by reactive flow [19].
Detonation waves are reactive shock waves. Steady planar detonation (the ChapmanJouguet state [20]) may be calculated using the RH relations, by imposing the condition
that the material state behind the shock is fully reacted.
Several numerical methods have been used to solve the RH equations for materials represented by an EOS only [21, 22]. The general RH equations may be solved numerically for a
given shock compression ∆ρ by varying the specific internal energy e until the normal stress
from the material model equals that from the RH energy equation, Eq. 17. The shock and
particle speeds are then calculated from Eqs 15 and 16. This numerical method is particularly convenient for EOS of the form p(ρ, e), as e may be varied directly. Solutions may still
be found for general material models using ṡ(ė), by which the energy may be varied until
the solution is found.
Numerically, the solution was found by bracketing and bisection:
1. For given compression ∆ρ, take the low-energy end for bracketing as a nearby state
s− (e.g. the previous state, of lower compression, on the Hugoniot), compressed adiabatically (to state s̃), and cooled so the specific internal energy is e(s− ).
2. Bracket the desired state: apply successively larger heating increments ∆e to s̃, evolv10

ing each trial state internally, until τn (s) from the material model exceeds τn (e − e0 )
from Eq. 17.
3. Bisect in ∆e, evolving each trial state internally, until τn (s) equals τn (e − e0 ) to the
desired accuracy.
As with ramp compression, the independent variable for solution was mass density ρ,
and finite steps ∆ρ were taken. Each shock state was calculated independently of the rest,
so numerical errors did not accumulate along the shock Hugoniot. The accuracy of the
solution was independent of ∆ρ. A tabular Hugoniot can be calculated by solving over a
range of ρ, but again when simulating experimental scenarios it is usually more useful to
calculate the shock state where one of the other thermodynamic quantities reaches a certain
value, often that up and τn match the values from another, simultaneous shock calculation
for another material – the situation in impact and shock transmission problems, discussed
below. Specific stop conditions were found by monitoring the quantity of interest until
bracketed by a finite solution step, then bisecting until the stop condition was satisfied to a
chosen accuracy. During bisection, each trial calculation was performed as a shock from the
initial conditions to the trial shock compression.

C.

Accuracy: application to air

The accuracy of these numerical schemes was tested by comparing with shock and ramp
compression of a material represented by a perfect gas EOS,
p = (γ − 1)ρe.

(18)

The numerical solution requires a value to be chosen for every parameter in the material
model, here γ. Air was chosen as an example material, with γ = 1.4. Air at standard temperature and pressure has approximately ρ = 10−3 g/cm3 and e = 0.25 MJ/kg. Isentropes
for the perfect gas EOS have the form
pρ−γ =

constant,

(19)

and shock Hugoniots have the form
p = (γ − 1)

2e0 ρ0 ρ + p0 (ρ − ρ0 )
.
(γ + 1)ρ0 − (γ − 1)ρ
11

(20)

The numerical solutions reproduced the principal isentrope and Hugoniot to 10−3% and 0.1%
respectively, for a compression increment of 1% along the isentrope and a solution tolerance
of 10−6 GPa for each shock state (Fig. 1). Over most of the range, the error in the Hugoniot
was 0.02% or less, only approaching 0.1% near the maximum shock compression.

IV.

COMPLEX BEHAVIOR OF CONDENSED MATTER

The ability to calculate shock and ramp loci in state space, i.e. as a function of varying loading conditions, is particularly convenient for investigating complex aspects of the
response of condensed matter to dynamic loading. Each locus can be obtained by a single
series of shock or ramp solutions, rather than having to perform a series of time- and spaceresolved continuum dynamics simulations, varying the initial or boundary conditions and
reducing the solution. We consider the calculation of temperature in the scalar EOS, the
effect of material strength and the effect of phase changes.

A.

Temperature

The continuum dynamics equations can be closed using a mechanical EOS relating stress
to mass density, strain, and internal energy. For a scalar EOS, the ideal form to close the
continuum equations is p(ρ, e), with s = {ρ, e} the natural choice for the primitive state
fields. However, the temperature is needed as a parameter in physical descriptions of many
contributions to the constitutive response, including plastic flow, phase transitions, and
chemical reactions. Here, we discuss the calculation of temperature in different forms of the
scalar EOS.

1.

Density-temperature equations of state

If the scalar EOS is constructed from its underlying physical contributions for continuum
dynamics, it may take the form e(ρ, T ), from which p(ρ, T ) can be calculated using the
second law of thermodynamics [10]. An example is the 'SESAME' form of EOS, based on
interpolated tabular relations for {p, e}(ρ, T ) [23]. A pair of relations {p, e}(ρ, T ) can be
used as a mechanical EOS by eliminating T , which is equivalent to inverting e(ρ, T ) to find

12

T (ρ, e), then substituting in p(ρ, T ). For a general e(ρ, T ) relation, for example for the
SESAME EOS, the inverse can be calculated numerically as required, along an isochore. In
this way, a {p, e}(ρ, T ) can be used as a p(ρ, e) EOS.
Alternatively, the same p(ρ, T ) relation can be used directly with a primitive state field
including temperature instead of energy: s = {ρ, T }. The evolution of the state under
mechanical work then involves the calculation of Ṫ (ė), i.e. the reciprocal of the specific heat
capacity, which is a derivative of e(ρ, T ). As this calculation does not require e(ρ, T ) to be
inverted, it is computationally more efficient to use {p, e}(ρ, T ) EOS with a temperaturebased, rather than energy-based, state. The main disadvantage is that it is more difficult
to ensure exact energy conservation as the continuum dynamics equations are integrated in
time, but any departure from exact conservation is at the level of accuracy of the algorithm
used to integrate the heat capacity.
Both structures of EOS have been implemented for material property calculations. Taking
a SESAME type EOS, thermodynamic loci were calculated with {ρ, e} or {ρ, T } primitive
states, for comparison (Fig. 2). For a monotonic EOS, the results were indistinguishable
within differences from forward or reverse interpolation of the tabular relations. When
the EOS, or the effective surface using a given order of interpolating function, was nonmonotonic, the results varied greatly because of non-uniqueness when eliminating T for the
{ρ, e} primitive state.

2.

Temperature model for mechanical equations of state

Mechanical EOS are often available as empirical, algebraic relations p(ρ, e), derived from
shock data. Temperature can be calculated without altering the mechanical EOS by adding
a relation T (ρ, e). While this relation could take any form in principle, one can also follow
the logic of the Grüneisen EOS, in which the pressure is defined in terms of its deviation
∆p(ρ, e − er ) from a reference curve {pr , er }(ρ). Thus temperatures can be calculated by
reference to a compression curve along which the temperature and specific internal energy
are known, {Tr , er }(ρ), and a specific heat capacity defined as a function of density cv (ρ).
In the calculations, this augmented EOS was represented as a 'mechanical-thermal' form
comprising any p(ρ, e) EOS plus the reference curves – an example of software inheritance
and polymorphism.
13

One natural reference curve for temperature is the cold curve, Tr = 0 K. The cold curve
can be estimated from the principal isentrope e(ρ)|s0 using the estimated density variation
of the Grüneisen parameter:
a(1−ρ0 /ρ)

er (ρ) = e(ρ)|s0 − T0 cp e



ρ
ρ0

γ0 −a

(21)

[24]. In this work, the principal isentrope was calculated in tabular form from the mechanical
EOS, using the ramp compression algorithm described above.
Empirical EOS are calibrated using experimental data. Shock and adiabatic compression
measurements on strong materials inevitably include elastic-plastic contributions as well as
the scalar EOS itself. If the elastic-plastic contributions are not taken into account selfconsistently, the EOS may implicitly include contributions from the strength. A unique
scalar EOS can be constructed to reproduce the normal stress as a function of compression
for any unique loading path: shock or adiabat, for a constant or smoothly-varying strain
rate. Such an EOS would not generally predict the response to other loading histories. The
EOS and constitutive properties for the materials considered here were constructed selfconsistently from shock data – this does not mean the models are accurate for other loading
paths, as neither the EOS nor the strength model includes all the physical terms that real
materials exhibit. This does not in any case matter for the purposes of demonstrating the
properties of the numerical schemes.
This mechanical-thermal procedure was applied to Al using a Grüneisen EOS fitted to the
same shock data used to calculate the {p, e}(ρ, T ) EOS discussed above [24]. Temperatures
were in good agreement (Fig. 2). The mechanical-thermal calculations required a similar
computational effort to the tabular {p, e}(ρ, T ) EOS with a {ρ, T } primitive states (and
were thus much more efficient than the tabular EOS with {ρ, e} states), and described the
EOS far more compactly.

B.

Strength

For dynamic compressions to o(10 GPa) and above, on microsecond time scales, the flow
stress of solids is often treated as a correction or small perturbation to the scalar EOS.
However, the flow stress has been observed to be much higher on nanosecond time scales
[25], and interactions between elastic and plastic waves may have a significant effect on
14

the compression and wave propagation. The Rankine-Hugoniot equations should be solved
self-consistently with strength included.

1.

Preferred representation of isotropic strength

There is an inconsistency in the standard continuum dynamics treatment of scalar (pressure) and tensor (stress) response. The scalar EOS expresses the pressure p(ρ, e) as the
dependent quantity, which is the most convenient form for use in the continuum equations.
Standard practice is to use sub-Hookean elasticity (hypoelastic form) [16] (Table II), in
which the state parameters include the stress deviator σ, evolved by integration
σ̇ = G(s)ǫ̇

(22)

where G is the shear modulus and ǫ̇ the strain rate deviator. Thus the isotropic and deviatoric contributions to stress are not treated in an equivalent way: the pressure is calculated
from a local state involving a strain-like parameter (mass density), whereas the stress deviator evolves with the time-derivative of strain. This inconsistency causes problems along
complicated loading paths because G varies strongly with compression: if a material is subjected to a shear strain ǫ, then isotropic compression (increasing the shear modulus from
G to G′ , leaving ǫ unchanged), then shear unloading to isotropic stress, the true unloading
strain is −ǫ, whereas the hypoelastic calculation would require a strain of −ǫG/G′ . Using
Be and the Steinberg-Guinan strength model as an example of the difference between hypoelastic and hyperelastic calculations, consider an initial strain to a flow stress of 0.3 GPa
followed by isothermal, isotropic compression to 100 GPa,. the strain to unload to a state
of isotropic stress is 0.20% (hyperelastic) and 0.09% (hypoelastic). The discrepancy arises
because the hypoelastic model does not increase the deviatoric stress under compression at
constant deviatoric strain.
The stress can be considered as a direct response of the material to the instantaneous state
of elastic strain: σ(ǫ, T ). This relation can be predicted directly with electronic structure
calculations of the stress tensor in a solid for a given compression and elastic strain state [11],
and is a direct generalization of the scalar equation of state. A more consistent representation
of the state parameters is to use the strain deviator ǫ rather than σ, and to calculate σ from

15

scratch when required using
σ = G(s)ǫ

(23)

– a hyperelastic formulation. The state parameters are then {ρ, e, ǫ, ǫ̃p }.
The different formulations give different answers when deviatoric strain is accumulated
at different compressions, in which case the hyperelastic formulation is correct. If the shear
modulus varies with strain deviator – i.e., for nonlinear elasticity – then the definition of
G(ǫ) must be adjusted to give the same stress for a given strain.
Many isotropic strength models use scalar measures of the strain and stress to parameterize work hardening and to apply a yield model of flow stress:
ǫ̃ =

p

fǫ ||ǫ2 ||,

σ̃ =

p

fσ ||σ 2 ||.

(24)

Inconsistent conventions for equivalent scalar measures have been used by different workers.
In the present work, the common shock physics convention was used that the flow stress
component of τn is 23 Y where Y is the flow stress. For consistency with published speeds
and amplitudes for elastic waves, fǫ = fσ = 32 , in contrast to other values previously used
for lower-rate deformation [26]. In principle, the values of fǫ and fσ do not matter as long as
the strength parameters were calibrated using the same values then used in any simulations.

2.

Beryllium

The flow stress measured from laser-driven shock experiments on Be crystals a few tens
of micrometers thick is, at around 5-9 GPa [25], much greater than the 0.3-1.3 GPa measured on microsecond time scales. A time-dependent crystal plasticity model for Be is being
developed, and the behavior under dynamic loading depends on the detailed time dependence of plasticity. Calculations were performed with the Steinberg-Guinan strength model
developed for microsecond scale data [24], and, for the purposes of rough comparison, with
elastic-perfectly plastic response with a flow stress of 10 GPa. The elastic-perfectly plastic
model neglected pressure- and work- hardening.
Calculations were made of the principal adiabat and shock Hugoniot, and of a release
adiabat from a state on the principal Hugoniot. Calculations were made with and without
strength. Considering the state trajectories in stress-volume space, it is interesting to note
that heating from plastic flow may push the adiabat above the Hugoniot, because of the
16

greater heating obtained by integrating along the adiabat compared with jumping from
the initial to the final state on the Hugoniot (Fig. 3). Even with an elastic-perfectly plastic
strength model, the with-strength curves do not lie exactly 23 Y above the strengthless curves,
because heating from plastic flow contributes an increasing amount of internal energy to the
EOS as compression increases.
An important characteristic for the seeding of instabilities by microstructural variations
in shock response is the shock stress at which an elastic wave does not run ahead of the
shock. In Be with the high flow stress of nanosecond response, the relation between shock
and particle speeds is significantly different from the relation for low flow stress (Fig. 4). For
low flow stress, the elastic wave travels at 13.2 km/s. A plastic shock travels faster than this
for pressures greater than 110 GPa, independent of the constitutive model. The speed of a
plastic shock following the initial elastic wave is similar to the low strength case, because the
material is already at its flow stress, but the speed of a single plastic shock is appreciably
higher.
For compression to a given normal stress, the temperature is significantly higher with
plastic flow included. The additional heating is particularly striking on the principal adiabat: the temperature departs significantly from the principal isentrope. Thus ramp-wave
compression of strong materials may lead to significant levels of heating, contrary to common assumptions of small temperature increases [27]. Plastic flow is largely irreversible, so
heating occurs on unloading as well as loading. Thus, on adiabatic release from a shockcompressed state, additional heating occurs compared with the no-strength case. These
levels of heating are important as shock or release melting may occur at a significantly lower
shock pressure than would be expected ignoring the effect of strength. (Fig. 5.)

C.

Phase changes

An important property of condensed matter is phase changes, including solid-solid polymorphism and solid-liquid. An equilibrium phase diagram can be represented as a single
overall EOS surface as before. Multiple, competing phases with kinetics for each phase transformation can be represented conveniently using the structure described above for general
material properties, for example by describing the local state as a set of volume fractions
fi of each possible simple-EOS phase, with transition rates and equilibration among them.
17

This model is described in more detail elsewhere [19]. However, it is interesting to investigate the robustness of the numerical scheme for calculating shock Hugoniots when the EOS
has the discontinuities in value and gradient associated with phase changes.
The EOS of molten metal, and the solid-liquid phase transition, can be represented to a
reasonable approximation as an adjustment to the EOS of the solid:
ptwo-phase (ρ, e) = psolid (ρ, ẽ)
where
ẽ =




e



e − ∆h̃m



 e − ∆hm

:

T (ρ, e) < Tm (ρ)

:

∆h̃m ≡ cv (ρ, e) [T (ρ, e) − Tm (ρ)] < ∆hm

:

otherwise

(25)

(26)

and ∆hm is the specific latent heat of fusion. Taking the EOS and a modified Lindemann
melting curve for Al [24], and using ∆hm = 0.397 MJ/kg, the shock Hugoniot algorithm was
found to operate stably across the phase transition (Fig. 6).

V.

COMPOSITE LOADING PATHS

Given methods to calculate shock and adiabatic loading paths from arbitrary initial
states, a considerable variety of experimental scenarios can be treated from the interaction
of loading or unloading waves with interfaces between different materials, in planar geometry
for uniaxial compression. The key physical constraint is that, if two dissimilar materials are
to remain in contact after an interaction such as an impact or the passage of a shock, the
normal stress τn and particle speed up in both materials must be equal on either side of the
interface. The change in particle speed and stress normal to the waves were calculated above
for compression waves running in the direction of increasing spatial ordinate (left to right).
Across an interface, the sense is reversed for the material at the left. Thus a projectile
impacting a stationary target to the right is decelerated from its initial speed by the shock
induced by impact.
The general problem at an interface can be analyzed by considering the states at the
instant of first contact – on impact, or when a shock traveling through a sandwich of materials first reaches the interface. The initial states are {ul , sl ; ur , sr }. The final states are
{uj , s′l ; uj , rr′ } where uj is the joint particle speed, τn (s′l ) = τn (s′r ), and s′i is connected to si
18

by either a shock or an adiabat, starting at the appropriate initial velocity and stress, and
with orientation given by the side of the system each material occurs on. Each type of wave
is considered in turn, looking for an intersection in the up − τn plane. Examples of these
wave interactions are the impact of a projectile with a stationary target (Fig. 7), release of a
shock state at a free surface or a material (e.g. a window) of lower shock impedance (hence
reflecting a release wave into the shocked material – Fig. 8), reshocking at a surface with a
material of higher shock impedance (Fig. 8), or tension induced as materials try to separate
in opposite directions when joined by a bonded interface (Fig. 9). Each of these scenarios
may occur in turn following the impact of a projectile with a target: if the target is layered
then a shock is transmitted across each interface with a release or a reshock reflected back,
depending on the materials; release ultimately occurs at the rear of the projectile and the
far end of the target, and the oppositely-moving release waves subject the projectile and
target to tensile stresses when they interact (Fig. 10).
As an illustration of combining shock and ramp loading calculations, consider the problem
of an Al projectile, initially traveling at 3.6 km/s, impacting a stationary, composite target
comprising a Mo sample and a LiF release window [28, 29]. The shock and release states were
calculated using published material properties [24]. The initial shock state was calculated to
have a normal stress of 63.9 GPa. On reaching the LiF, the shock was calculated to transmit
at 27.1 GPa, reflecting as a release in the Mo. These stresses match the continuum dynamics
simulation to within 0.1 GPa in the Mo and 0.3 GPa in the LiF, using the same material
properties (Fig. 11). The associated wave and particle speeds match to a similar accuracy;
wave speeds are much more difficult to extract from the continuum dynamics simulation.
An extension of this analysis can be used to calculate the interaction of oblique shocks
with an interface [30].

VI.

CONCLUSIONS

A general formulation was developed to represent material models for applications in
dynamic loading, suitable for software implementation in object-oriented programming languages. Numerical methods were devised to calculate the response of matter represented
by the general material models to shock and ramp compression, and ramp decompression,
by direct evaluation of the thermodynamic pathways for these compressions rather than
19

spatially-resolved simulations. This approach is a generalization of earlier work on solutions
for materials represented by a scalar equation of state. The numerical methods were found
to be flexible and robust: capable of application to materials with very different properties.
The numerical solutions matched analytic results to a high accuracy.
Care was needed with the interpretation of some types of physical response, such as plastic flow, when applied to deformation at high strain rates. The underlying time-dependence
of processes occurring during deformation should be taken into account. The actual history
of loading and heating experienced by material during the passage of a shock may influence
the final state – this history is not captured in the continuum approximation to material
dynamics, where shocks are treated as discontinuities. Thus care is also needed in spatially resolved simulations when shocks are modeled using artificial viscosity to smear them
unphysically over a finite thickness.
Calculations were shown to demonstrate the operation of the algorithms for shock and
ramp compression with material models representative of complex solids including strength
and phase transformations.
The basic ramp and shock solution methods were coupled to solve for composite deformation paths, such as shock-induced impacts, and shock interactions with a planar interface
between different materials. Such calculations capture much of the physics of typical material dynamics experiments, without requiring spatially-resolving simulations. The results
of direct solution of the relevant shock and ramp loading conditions were compared with
hydrocode simulations, showing complete consistency.

Acknowledgments

Ian Gray introduced the author to the concept of multi-model material properties software. Lee Markland developed a prototype Hugoniot-calculating computer program for
equations of state while working for the author as an undergraduate summer student.
Evolutionary work on material properties libraries was supported by the U.K. Atomic
Weapons Establishment, Fluid Gravity Engineering Ltd, and Wessex Scientific and Technical
Services Ltd. Refinements to the technique and applications to the problems described were
undertaken at Los Alamos National Laboratory (LANL) and Lawrence Livermore National
Laboratory (LLNL).
20

The work was performed partially in support of, and funded by, the National Nuclear Security Agency's Inertial Confinement Fusion program at LANL (managed by Steven Batha),
and LLNL's Laboratory-Directed Research and Development project 06-SI-004 (Principal
Investigator: Hector Lorenzana). The work was performed under the auspices of the U.S.
Department of Energy under contracts W-7405-ENG-36, DE-AC52-06NA25396, and DEAC52-07NA27344.

21

References

[1] J.K. Dienes, J.M. Walsh, in R. Kinslow (Ed), "High-Velocity Impact Phenomena" (Academic
Press, New York, 1970).
[2] D.J. Benson, Comp. Mech. 15, 6, pp 558-571 (1995).
[3] J.W. Gehring, Jr, in R. Kinslow (Ed), "High-Velocity Impact Phenomena" (Academic Press,
New York, 1970).
[4] R.M. Canup, E. Asphaug, Nature 412, pp 708-712 (2001).
[5] For a recent review and introduction, see e.g. M.R. Boslough and J.R. Asay, in J.R. Asay,
M. Shahinpoor (Eds), "High-Pressure Shock Compression of Solids" (Springer-Verlag, New
York, 1992).
[6] For example, C.A. Hall, J.R. Asay, M.D. Knudson, W.A. Stygar, R.B. Spielman, T.D. Pointon,
D.B. Reisman, A. Toor, and R.C. Cauble, Rev. Sci. Instrum. 72, 3587 (2001).
[7] M.A. Meyers, "Dynamic Behavior of Materials" (Wiley, New York, 1994).
[8] G. McQueen, S.P. March, J.W. Taylor, J.N. Fritz, W.J. Carter, in R. Kinslow (Ed), "HighVelocity Impact Phenomena" (Academic Press, New York, 1970).
[9] J.D. Lindl, "Inertial Confinement Fusion" (Springer-Verlag, New York, 1998).
[10] D.C. Swift, G.J. Ackland, A. Hauer, G.A. Kyrala, Phys. Rev. B 64, 214107 (2001).
[11] J.P. Poirier, G.D. Price, Phys. of the Earth and Planetary Interiors 110, pp 147-56 (1999).
[12] I.N. Gray, P.C. Thompson, B.J. Parker, D.C. Swift, J.R. Maw, A. Giles and others (AWE
Aldermaston), unpublished.
[13] D.J. Steinberg, S.G. Cochran, M.W. Guinan, J. Appl. Phys. 51, 1498 (1980).
[14] D.L. Preston, D.L. Tonks, and D.C. Wallace, J. Appl. Phys. 93, 211 (2003).
[15] A version of the software, including representative parts of the material model library and the
algorithms for calculating the ramp adiabat and shock Hugoniot, is available as a supplementary file provided with the preprint of this manuscript, arXiv:0704.0008. Software support,
and versions with additional models, are available commercially from Wessex Scientific and
Technical Services Ltd (http://wxres.com).
[16] D. Benson, Computer Methods in Appl. Mechanics and Eng. 99, 235 (1992).

22

[17] J.L. Ding, J. Mech. and Phys. of Solids 54, pp 237-265 (2006).
[18] J. von Neumann, R.D. Richtmyer, J. Appl. Phys. 21, 3, pp 232-237 (1950).
[19] R.M. Mulford, D.C. Swift, in preparation.
[20] W. Fickett, W.C. Davis, "Detonation" (University of California Press, Berkeley, 1979).
[21] R. Menikoff, B.J. Plohr, Rev. Mod. Phys. 61, pp 75-130 (1989).
[22] A. Majda, Mem. Amer. Math. Soc., 41, 275 (1983).
[23] K.S. Holian (Ed.), T-4 Handbook of Material Property Data Bases, Vol 1c: Equations of State,
Los Alamos National Laboratory report LA-10160-MS (1984).
[24] D.J. Steinberg, Equation of State and Strength Properties of Selected Materials, Lawrence
Livermore National Laboratory report UCRL-MA-106439 change 1 (1996).
[25] D.C. Swift, T.E. Tierney, S.-N. Luo, D.L. Paisley, G.A. Kyrala, A. Hauer, S.R. Greenfield,
A.C. Koskelo, K.J. McClellan, H.E. Lorenzana, D. Kalantar, B.A. Remington, P. Peralta,
E. Loomis, Phys.Plasmas 12, 056308 (2005).
[26] R. Hill, "The Mathematical Theory of Plasticity" (Clarendon Press, Oxford, 1950).
[27] C.A. Hall, Phys. Plasmas 7, 5, pp 2069-2075 (2000).
[28] D.C. Swift, A. Seifter, D.B. Holtkamp, and D.A. Clark, Phys. Rev. B 76, 054122 (2007).
[29] A. Seifter and D.C. Swift, Phys. Rev. B 77, 134104 (2008).
[30] E. Loomis, D.C. Swift, J. Appl. Phys. 103, 023518 (2008).

23

TABLE I: Interface to material models required for explicit forward-time continuum dynamics
simulations.
purpose

interface calls

program set-up

read/write material data

continuum dynamics equations stress(state)
time step control

sound speed(state)

evolution of state (deformation) d(state)/dt(state,grad ~u)
evolution of state (heating)

d(state)/dt(state,ė)

internal evolution of state

d(state)/dt

manipulation of states

create and delete
add states
multiply state by a scalar
check for self-consistency

Parentheses in the interface calls denote functions, e.g. "stress(state)" for "stress as a function of
the instantaneous, local state." The evolution functions are shown in the operator-split structure
that is most robust for explicit, forward-time numerical solutions and can also be used for
calculations of the shock Hugoniot and ramp compression. Checks for self-consistency include
that mass density is positive, volume or mass fractions of components of a mixture add up to one,
etc.

24

TABLE II: Examples of types of material model, distinguished by different structures in the state
vector.
model

state vector effect of mechanical strain
s

ṡm (s, gradu)

mechanical equation of state

ρ, e

−ρdiv~u, −pdiv~u/ρ

thermal equation of state

ρ, T

−ρdiv~u, −pdiv~u/ρcv

heterogeneous mixture

{ρ, e, fv }i

{−ρdiv~u, −pdiv~u/ρ, 0}i

homogeneous mixture

ρ, T, {fm }i

{−ρdiv~u, −pdiv~u/ρcv , 0i
−pdivu
~ +fp ||σǫ̇p ||
−ρdiv~u,
, Gǫ̇e ,
ρ
q
fǫ ||ǫ̇2p ||

traditional deviatoric strength ρ, e, σ, ǫ̃p

The symbols are ρ: mass density; e: specific internal energy, T : temperature, fv : volume fraction,
fm : mass fraction, σ: stress deviator, fp : fraction of plastic work converted to heat, gradup :
plastic part of velocity gradient, G: shear modulus, ǫ̇e,p : elastic and plastic parts of strain rate
deviator, ǫ̃p : scalar equivalent plastic strain, fǫ : factor in effective strain magnitude. Reacting
solid explosives can be represented as heterogeneous mixtures, one component being the reacted
products; reaction, a process of internal evolution, transfers material from unreacted to reacted
components. Gas-phase reaction can be represented as a homogeneous mixture, reactions
transferring mass between components representing different types of molecule. Symmetric
tensors such as the stress deviator are represented more compactly by their 6 unique upper
triangular components, e.g. using Voigt notation.

25

TABLE III: Outline hierarchy of material models, illustrating the use of polymorphism (in the
object-oriented programming sense).
material (or state) type model type
mechanical equation of state polytropic, Grüneisen, energy-based
Jones-Wilkins-Lee, (ρ, T ) table, etc
thermal equation of state

temperature-based
Lee,

Jones-Wilkins-

quasiharmonic,

(ρ, T ) table,

etc
reactive equation of state

modified polytropic, reactive JonesWilkins-Lee

spall

Cochran-Banner

deviatoric stress

elastic-plastic,
Steinberg-Lund,

Steinberg-Guinan,
Preston-Tonks-

Wallace, etc
homogeneous mixture

mixing and reaction models

heterogeneous mixture

equilibration and reaction models

Continuum dynamics programs can refer to material properties as an abstract 'material type'
with an abstract material state. The actual type of a material (e.g. mechanical equation of
state), the specific model type (e.g. polytropic), and the state of material of that type are all
handled transparently by the object-oriented software structure.
The reactive equation of state has an additional state parameter λ, and the software operations
are defined by extending those of the mechanical equation of state. Spalling materials can be
represented by a solid state plus a void fraction fv , with operations defined by extending those of
the solid material. Homogeneous mixtures are defined as a set of thermal equations of state, and
the state is the set of states and mass fractions for each. Heterogeneous mixtures are defined as a
set of 'pure' material properties of any type, and the state is the set of states for each component
plus its volume fraction.

26

0.01

1

0.001

pressure difference (%)

pressure (GPa)

Hugoniot

isentrope

0.0001
0.001

0.01

Hugoniot
0.1

0.01

0.001

isentrope

0.0001
0.001

3

0.01
3

mass density (g/cm )

mass density (g/cm )

FIG. 1: Principal isentrope and shock Hugoniot for air (perfect gas): numerical calculations for
general material models, compared with analytic solutions.

27

120

normal stress (GPa)

100

solid: Grueneisen
dashed: SESAME 3716

80
60
40
20
0
0

1000

2000
3000
temperature (K)

4000

5000

FIG. 2: Shock Hugoniot for Al in pressure-temperature space, for different representations of the
equation of state.

28

normal stress (GPa)

90
80

each pair of lines:

70

upper is Hugoniot,

60

lower is adiabat

50
40
30
20
10
0
0.7

0.75

0.8
0.85
0.9
volume compression

0.95

1

FIG. 3: Principal adiabat and shock Hugoniot for Be in normal stress-compression space, neglecting
strength (dashed), for Steinberg-Guinan strength (solid), and for elastic-perfectly plastic with
Y = 10 GPa (dotted).

29

15

shock speed (km/s)

14
13

elastic wave

12

plastic shock

11
10
9
8
0

20

40

60
80
100
normal stress (GPa)

120

140

FIG. 4: Principal adiabat and shock Hugoniot for Be in shock speed-normal stress space, neglecting
strength (dashed), for Steinberg-Guinan strength (solid), and for elastic-perfectly plastic with
Y = 10 GPa (dotted).

30

200

normal stress (GPa)

principal
adiabat
150

principal
Hugoniot

100

50
release
adiabat

0
0

1000

2000
3000
temperature (K)

4000

5000

FIG. 5: Principal adiabat, shock Hugoniot, and release adiabat for Be in normal stress-temperature
space, neglecting strength (dashed), for Steinberg-Guinan strength (solid), and for elastic-perfectly
plastic with Y = 10 GPa (dotted).

31

140

normal stress (GPa)

120
100
solid Hugoniot

80

10%
20%

60
40

30%
20
melt locus
0
0

1000

2000
3000
temperature (K)

4000

5000

FIG. 6: Demonstration of shock Hugoniot solution across a phase boundary: shock-melting of Al,
for different initial porosities.

32

principal
Hugoniot
of projectile

principal Hugoniot
of target

normal stress

shock state:
intersection
initial state
of projectile
initial state
of target

0

particle speed

FIG. 7: Wave interactions for the impact of a flat projectile moving from left to right with a
stationary target. Dashed arrows are a guide to the sequence of states. For a projectile moving
from right to left, the construction is the mirror image reflected in the normal stress axis.

33

normal stress

secondary
Hugoniot
of target

0

principal Hugoniot:
high impedance window
initial shock state
in target

low impedance
window

window
release
states

target release isentrope

particle speed
target release at free surface

FIG. 8: Wave interactions for the release of a shocked state (shock moving from left to right) into
a stationary 'window' material to its right. The release state depends whether the window has
a higher or lower shock impedance than the shocked material. Dashed arrows are a guide to the
sequence of states. For a shock moving from right to left, the construction is the mirror image
reflected in the normal stress axis.

34

normal stress

initial shock state
in projectile and target

target release

projectile release
0

particle speed

projectile release

target release

final tensile state
in projectile and target

FIG. 9: Wave interactions for the release of a shocked state by tension induced as materials try
to separate in opposite directions when joined by a bonded interface. Material damage, spall, and
separation are neglected: the construction shows the maximum tensile stress possible. For general
material properties, e.g. if plastic flow is included, the state of maximum tensile stress is not just
the negative of the initial shock state. Dashed arrows are a guide to the sequence of states. The
graph shows the initial state after an impact by a projectile moving from right to left; for a shock
moving from right to left, the construction is the mirror image reflected in the normal stress axis.

35

target

time

projectile

window

1111
0000
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111
0000
1111
00000
11111

impact shocks
transmitted shock;
reflected wave
free surface
release
release interactions:
tension

FIG. 10: Schematic of uniaxial wave interactions induced by the impact of a flat projectile with a
composite target.

36

70

Al

Mo

LiF

normal stress (GPa)

60
original
shock state

50

reflected
release

40
30

transmitted
shock

20
10
0
0

5

10
position (mm)

15

20

FIG. 11: Hydrocode simulation of Al projectile at 3.6 km/s impacting a Mo target with a LiF
release window, 1.1 μs after impact. Structures on the waves are elastic precursors.

37

List of figures

1. Principal isentrope and shock Hugoniot for air (perfect gas): numerical calculations
for general material models, compared with analytic solutions.
2. Shock Hugoniot for Al in pressure-temperature space, for different representations of
the equation of state.
3. Principal adiabat and shock Hugoniot for Be in normal stress-compression space,
neglecting strength (dashed), for Steinberg-Guinan strength (solid), and for elasticperfectly plastic with Y = 10 GPa (dotted).
4. Principal adiabat and shock Hugoniot for Be in shock speed-normal stress space,
neglecting strength (dashed), for Steinberg-Guinan strength (solid), and for elasticperfectly plastic with Y = 10 GPa (dotted).
5. Principal adiabat, shock Hugoniot, and release adiabat for Be in normal stresstemperature space, neglecting strength (dashed), for Steinberg-Guinan strength
(solid), and for elastic-perfectly plastic with Y = 10 GPa (dotted).
6. Demonstration of shock Hugoniot solution across a phase boundary: shock-melting of
Al, for different initial porosities.
7. Wave interactions for the impact of a flat projectile moving from left to right with a
stationary target. Dashed arrows are a guide to the sequence of states. For a projectile
moving from right to left, the construction is the mirror image reflected in the normal
stress axis.
8. Wave interactions for the release of a shocked state (shock moving from left to right)
into a stationary 'window' material to its right. The release state depends whether
the window has a higher or lower shock impedance than the shocked material. Dashed
arrows are a guide to the sequence of states. For a shock moving from right to left,
the construction is the mirror image reflected in the normal stress axis.
9. Wave interactions for the release of a shocked state by tension induced as materials
try to separate in opposite directions when joined by a bonded interface. Material
damage, spall, and separation are neglected: the construction shows the maximum
38

tensile stress possible. For general material properties, e.g. if plastic flow is included,
the state of maximum tensile stress is not just the negative of the initial shock state.
Dashed arrows are a guide to the sequence of states. The graph shows the initial state
after an impact by a projectile moving from right to left; for a shock moving from
right to left, the construction is the mirror image reflected in the normal stress axis.
10. Schematic of uniaxial wave interactions induced by the impact of a flat projectile with
a composite target.
11. Hydrocode simulation of Al projectile at 3.6 km/s impacting a Mo target with a LiF
release window, 1.1 μs after impact. Structures on the waves are elastic precursors.

39

