a determinant of stirling cycle numbers counts unlabeled

arxiv07040004v1 mathco 31 mar 2007

acyclic singlesource automata
david callan
department of statistics
university of wisconsinmadison
1300 university ave
madison wi 537061532
callanstatwiscedu
march 30 2007
abstract
we show that a determinant of stirling cycle numbers counts unlabeled acyclic
singlesource automata the proof involves a bijection from these automata to
certain marked lattice paths and a signreversing involution to evaluate the determinant

1

introduction

the chief purpose of this paper is to show bijectively that

a determinant of stirling cycle numbers counts unlabeled acyclic singlesource automata
  i1 2 
k
specifically let ak n denote the kn  kn matrix with i j entry  i1 1ij
 where
k
i
is the stirling cycle number the number of permutations on i with j cycles for
j
example













a2 5  











1 0 0 0 0

0

0

0

0

0




0 


0 1 3 2 0 0 0 0 0 0 

0 0 1 3 2 0 0 0 0 0 


0 0 0 1 6 11 6 0 0 0 


0 0 0 0 1 6 11 6 0 0 

0 0 0 0 0 1 10 35 50 24 


0 0 0 0 0 0 1 10 35 50 

0 0 0 0 0 0 0 1 15 85 

0 0 0 0 0 0 0 0 1 15
1 1 0 0 0

1

0

0

0

0

as evident in the example ak n is formed from k copies of each of rows 2 through n  1
of the stirling cycle triangle arranged so that the first nonzero entry in each row is a 1
and after the first row this 1 occurs just before the main diagonal in other words ak n
is a hessenberg matrix with 1s on the infradiagonal we will show
main theorem the determinant of ak n is the number of unlabeled acyclic singlesource automata with n transient states on a k  1letter input alphabet
section 2 reviews basic terminology for automata and recurrence relations to count
finite acyclic automata section 3 introduces columnmarked subdiagonal paths which
play an intermediate role and a way to code them section 4 presents a bijection from
these columnmarked subdiagonal paths to unlabeled acyclic singlesource automata finally section 5 evaluates det ak n using a signreversing involution and shows that the
determinant counts the codes for columnmarked subdiagonal paths

2

automata

a complete deterministic automaton consists of a set of states and an input alphabet
whose letters transform the states among themselves a letter and a state produce another
state possibly the same one a finite automaton finite set of states finite input alphabet
of say k letters can be represented as a kregular directed multigraph with ordered edges
the vertices represent the states and the first second    edge from a vertex give the effect
of the first second    alphabet letter on that state a finite automaton cannot be acyclic
in the usual sense of no cycles pick a vertex and follow any path from it this path must
ultimately hit a previously encountered vertex thereby creating a cycle so the term
acyclic is used in the looser sense that only one vertex called the sink is involved in
cycles this means that all edges from the sink loop back to itself and may safely be
omitted and all other paths feed into the sink
a nonsink state is called transient the size of an acyclic automaton is the number of
transient states an acyclic automaton of size n thus has transient states which we label
1 2     n and a sink labeled n  1 liskovets 1 uses the inclusionexclusion principle
more about this below to obtain the following recurrence relation for the number ak n
2

of acyclic automata of size n on a kletter input alphabet k  1
ak 0  1

ak n 

n1
x

nj1

1

j0

 
n
j  1knjak j
j

n  1

a source is a vertex with no incoming edges a finite acyclic automaton has at least
one source because a path traversed backward v1  v2  v3     must have distinct
vertices and so cannot continue indefinitely an automaton is singlesource or initially
connected if it has only one source let bk n denote the set of singlesource acyclic
finite saf automata on a kletter input alphabet with vertices 1 2     n  1 where 1
is the source and n  1 is the sink and set bk n   bk n  the twoline representation
of an automaton in bk n is the 2  kn matrix whose columns list the edges in order for
example
b

1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
2 4 6 6 6 6 6 6 6 3 5 3 2 2 6
a

a

b


c

a

b

is in b3 5 and the sourcetosink paths in b include 1  2  6 1  4  3  6 1 
b

b

b

4  5  2  6 where the alphabet is a b c
proposition 1 the number bk n of saf automata of size n on a kletter input alphabet
n k  1 is given by
bk n 

n
x

ni

1

i1



n1
i  1kni ak i
i1

remark this formula is a bit more succinct than the the recurrence in 1 theorem
32
proof

consider the set a of acyclic automata with transient vertices n  1 2     n

in which 1 is a source call 2 3     n the interior vertices for x  2 n let
f x   automata in a whose set of interior vertices includes x
gx   automata in a whose set of interior vertices is precisely x
then f x 
2 n gx 

p

y  xy 2n gy

p

 and by mbius inversion 2 on the lattice of subsets of

y  xy 2n x y

f y  where x y  is the mbius function for this
3

lattice since x y   1y x if x  y  we have in particular that
g 

x

1 y  f y 

1

y 2n

let  y   n  i so that 1  i  n when y consists entirely of sources the vertices
in n  1y and their incident edges form a subautomaton with i transient states there
are ak i such also all edges from the n  i vertices comprising y go directly into
n  1y  i  1kni choices thus f y   i  1kni ak i by definition g is
the number of automata in a for which 1 is the only source that is g  bk n and the
proposition now follows from 1
an unlabeled saf automaton is an equivalence class of saf automata under relabeling
of the interior vertices liskovets notes 1 and we prove below that bk n has no
nontrivial automorphisms that is each of the n  1 relabelings of the interior vertices
of b  bk n produces a different automaton so unlabeled saf automata of size n on
a kletter alphabet are counted by

1
b n
n1 k

the next result establishes a canonical

representative in each relabeling class
proposition 2 each equivalence class in bk n under relabeling of interior vertices has
size n  1 and contains exactly one saf automaton with the last occurrences increasing property the last occurrences of the interior vertices2 3     nin the bottom row
of its twoline representation occur in that order
proof

the first assertion follows from the fact that the interior vertices of an au

tomaton b  bk n can be distinguished intrinsically that is independent of their labeling
to see this first mark the source namely 1 with a mark new label v1 and observe that
there exists at least one interior vertex whose only incoming edges are from the source
the only currently marked vertex for otherwise a cycle would be present for each such
interior vertex v choose the last edge from the marked vertex to v using the builtin
ordering of these edges this determines an order on these vertices mark them in order
v2  v3      vj j  2 if there still remain unmarked interior vertices at least one of them
has incoming edges only from a marked vertex or again a cycle would be present for
each such vertex use the last incoming edge from a marked vertex where now edges are
arranged in order of initial vertex vi with the builtin order breaking ties to order and
4

mark these vertices vj1  vj2    proceed similarly until all interior vertices are marked
for example for
b

1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
2 4 6 6 6 6 6 6 6 3 5 3 2 2 6





v1  1 and there is just one interior vertex namely 4 whose only incoming edge is from
the source and so v2  4 and 4 becomes a marked vertex now all incoming edges to
both 3 and 5 are from marked vertices and the last such edges builtin order comes into
b

c

play are 4  5 and 4  3 putting vertices 3 5 in the order 5 3 so v3  5 and v4  3
finally v5  2 this proves the first assertion by construction of the vs relabeling each
interior vertex i with the subscript of its corresponding v produces an automaton in bk n
with the last occurrences increasing property and is the only relabeling that does so
the example yields
1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
5 2 6 4 3 4 5 5 6 6 6 6 6 6 6





now let ck n denote the set of canonical saf automata in bk n representing unlabeled automata thus  ck n  

1
b n
n1 k

henceforth we identify an unlabeled au

tomaton with its canonical representative

3

columnmarked subdiagonal paths

a subdiagonal k n ppath is a lattice path of steps e  1 0 and n  0 1 e for
east and n for north from 0 0 to kn p that never rise above the line y  k1 x let
ck n p denote the set of such pathsfor k  1 it is clear that ck n p is nonempty only
for 0  p  n and it is known generalized ballot theorem that


kn  kp  1 kn  p  1

 ck n p  
p
kn  p  1
a path p in ck n n can be coded by the heights of its e steps above the line y  1
this gives a a sequence bi kn
i1 subject to the restrictions 1  b1  b2      bkn and
bi  ik for all i
5

a columnmarked subdiagonal k n ppath is one in which for each i  1 kn one of
the lattice squares below the ith e step and above the horizontal line y  1 is marked


say with a    let ck n p denote the set of such marked paths
b 84

b

y  12 x

b

b

b

b

b

b

b

b

b


b

00


b

b





b









y  1


a path in c2 4 3


a marked path p  in ck n n can be coded by a sequence of pairs ai  bi 
bi kn
i1

kn

i1

where

is the code for the underlying path p and ai  1 bi  gives the position of the  in the

ith column the example is coded by 1 1 1 1 1 2 2 2 1 2 3 3 1 3 2 3


an explicit sum for  ck n n  is


 ck n n  

x

b1 b2    bkn 

1b1 b2 bkn 
bi  ik for all i

because the summand b1 b2    bkn is the number of ways to insert the   s in the underlying
path coded by bi kn
i1 


it is also possible to obtain a recurrence for  ck n p  and then using prop 1 to


show analytically that  ck n n    ck1 n  however it is much more pleasant to
give a bijection and in the next section we will do so in particular the number of saf
automata on a 2letter alphabet is


 c2 n    c1 n n  

x

b1 b2    bn  1 3 16 127 1363   n1 

1b1 b2 bn
bi  i for all i

6

sequence a082161 in 3

4

bijection from paths to automata


in this section we exhibit a bijection from ck n n to ck1 n using the illustrated
path as a working example with k  2 and n  4
b 84

b

y  12 x

b

b

b

b

b

b

b

b

b


b

00


b

b



b











y  1

first construct the top row of a twoline representation consisting of k  1 each 1s 2s
    n s and number them left to right


1 2 3 4 5 6 7 8 9 10 11 12
 1 1 1 2 2 2 3 3 3 4 4 4 

the last step in the path is necessarily an n step for the second last third last   n steps

in the path count the number of steps following it this gives a sequence i1  i2      in1
satisfying 1  i1  i2      in1 and ij  k  1j for all j circle the positions
i1  i2      in1 in the twoline representation and then insert in boldface 2 3     n in
the second row in the circled positions

1

2

3

4

5

6

7

8

9

10

 1 1 1 2 2 2 3 3 3 4
2
3
4

11

4

12



4 

these will be the last occurrences of 2 3     n in the second row working from the last
column in the path back to the first fill in the blanks in the second row left to right as
follows count the number of squares from the  up to the path including the  square
7

and add this number to the nearest boldface number to the left of the current blank entry
if there are no boldface numbers to the left add this number to 1 and insert the result
in the current blank square in the example the numbers of squares are 23121211
yielding


1

2

3

4

5

6

7

8

9

10

 1 1 1 2 2 2 3 3 3 4
2 4 5 3 3 5 4 5 4 5

11

4

5

12



4 

this will fill all blank entries except the last note that  s in the bottom row correspond
to sink that is n1 labels in the second row finally insert n1 into the last remaining
blank space to give the image automaton
1 1 1 2 2 2 3 3 3 4 4 4
2 4 5 3 3 5 4 5 4 5 5 5





this process is fully reversible and the map is a bijection

5

evaluation of det akn

for simplicity we treat the case k  1 leaving the generalization to arbitrary k
as a nottoodifficult
exercise for the interested reader write an for a1 n thus



i1
an  2ij
 from the definition of det an as a sum of signed products we
1ijn

show that det an is the total weight of certain lists of permutations each list carrying

weight 1 then a weightreversing involution cancels all 1 weights and reduces the
problem to counting the surviving lists these surviving lists are essentially the codes for


paths in c1 n p and the main theorem follows from 4
to describe the permutations giving a nonzero contribution to det an 
qn

p

 sgn  
ci ni1 with

aii  define the code of a permutation  on n to be the list c 
 i1 
 is 0 unless j  i  1 we must have
ci  i  i  1 since the i j entry of an 2ij
i1

i  i1 for all i it is well known that there are 2n1 such permutations corresponding

to compositions of n with codes characterized by the following four conditions i ci  0
for all i ii c1  1 iii each ci  1 is immediately followed by ci  1 zeros in the list
p
iv ni1 ci  n let us call such a list a padded composition of n deleting the zeros
is a bijection to ordinary compositions of n for example 3 0 0 1 2 0 is a padded
8

composition of 6 for a permutation  with padded composition code c the nonzero
entries in c give the cycle lengths of  hence sgn  which is the parity of n   cycles
in  is given by 1 0s in c 
we have det an 

p

 sgn 

qn

det an 

i1 aii 

x

p

 sgn 

 0s in c

1

c

qn 

i1
i1 2ii


n 
y
i1
i  1  ci
i1


 and so
2

where the sum is restricted to padded compositions c of n with ci  i for all i a002083
 i1 
because i1c
 0 unless ci  i
i
henceforth let us write all permutations in standard cycle form whereby the smallest

entry occurs first in each cycle and these smallest entries increase left to right thus
with dashes separating cycles 154236 is the standard cycle form of the permutation
 15 22 36 41 54 63  we define a nonfirst entry to be one that does not start a cycle thus the
preceding permutation has 3 nonfirst entries 546 note that the number of nonfirst
entries is 0 only for the identity permutation we denote an identity permutation of any
size by 
by definition of stirling cycle number the product in 2 counts lists i ni1 of permutations where i is a permutation on i  1 with i  1  ci cycles equivalently with ci  i
nonfirst entries so define ln to be the set all lists of permutations   i ni1 where i
is a permutation on i  1  nonfirst entries in i is  i 1 is the transposition 12
each nonidentity permutation i is immediately followed by ci  1 s where ci  1 is the
number of nonfirst entries in i so the total number of nonfirst entries is n assign a
weight to   ln by wt  1 s in   then
det an 

x

wt

ln

we now define a weightreversing involution on most of ln  given   ln  scan the
list of its component permutations 1  1 2 2 3     left to right stop at the first
one that either i has more than one nonfirst entry or ii has only one nonfirst entry b
say and b  maximum nonfirst entry m of the next permutation in the list say k is the
permutation where we stop
9

in case i decrement ie decrease by 1 the number of s in the list by splitting k
into two nonidentity permutations as follows let m be the largest nonfirst entry of k
and let l be its predecessor replace k and its successor in the list necessarily an  by
the following two permutations first the transposition l m and second the permutation
obtained from k by erasing m from its cycle and turning it into a singleton here are
two examples of this case recall permutations are in standard cycle form and for clarity
singleton cycles are not shown
i

1

2

3

4

5 6

i

12 13 23 14253  



i

1

2

3

4

5

6

i

12 13 23 25 1423 

and
i

1

2

3

4

5

6

i

12 23 14 1324  23



i

1

2

3

4

5

6

i

12 23 14 24 13 23

the reader may readily check that this sends case i to case ii
in case ii k is a transposition a b with b  maximum nonfirst entry m of k1  in
this case increment the number of s in the list by combining k and k1 into a single
permutation followed by an  in k1  b is a singleton delete this singleton and insert b
immediately after a in k1 in the same cycle the reader may check that this reverses
the result in the two examples above and in general sends case ii to case i since the
map alters the number of s in the list by 1 it is clearly weightreversing the map fails
only for lists that both consist entirely of transpositions and have the form
a1  b1  a2  b2      an  bn  with b1  b2      bn 
such lists have weight 1 hence det an is the number of lists ai  bi 

n

i1

satisfying

1  ai  bi  i  1 for 1  i  n and b1  b2      bn  after subtracting 1 from each




bi  these lists code the paths in c1 n n and using 4 det an   c1 n n    c2 n 

references
1 valery
tomata

a

liskovets

exact

disc appl math

enumeration
in press

of

deterministic

au

2006 earlier version available at

httpwwwi3sunicefrfpsacfpsac03articleshtml
10

acyclic

2 j h van lint and r m wilson a course in combinatorics 2nd ed cambridge
university press ny 2001
3 neil j sloane founder and maintainer the online encyclopedia of integer sequences httpwwwresearchattcom80 njassequencesindexhtmlblank1

11

