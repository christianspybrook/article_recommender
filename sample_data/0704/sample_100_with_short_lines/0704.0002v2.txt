sparsitycertifying graph decompositions
ileana streinu1  louis theran2

arxiv07040002v2 mathco 13 dec 2008

1

department of computer science smith college northampton ma email streinucssmithedu
department of computer science university of massachusetts amherst email therancsumassedu

2

abstract we describe a new algorithm the k pebble game with colors and use it to obtain a characterization of the family of k sparse graphs and algorithmic solutions to a family of problems concerning tree decompositions of graphs special instances of sparse graphs appear in rigidity theory and have
received increased attention in recent years in particular our colored pebbles generalize and strengthen
the previous results of lee and streinu 12 and give a new proof of the tuttenashwilliams characterization of arboricity we also present a new decomposition that certifies sparsity based on the k pebble
game with colors our work also exposes connections between pebble game algorithms and previous
sparse graph algorithms by gabow 5 gabow and westermann 6 and hendrickson 9

1 introduction and preliminaries
the focus of this paper is decompositions of k sparse graphs into edgedisjoint subgraphs
that certify sparsity we use graph to mean a multigraph possibly with loops we say that a
graph is k sparse if no subset of n0 vertices spans more than kn0   edges in the graph a
k sparse graph with kn0   edges is k tight we call the range k    2k  1 the upper
range of sparse graphs and 0    k the lower range
in this paper we present efficient algorithms for finding decompositions that certify sparsity
in the upper range of  our algorithms also apply in the lower range which was already addressed by 3 4 5 6 19 a decomposition certifies the sparsity of a graph if the sparse graphs
and graphs admitting the decomposition coincide
our algorithms are based on a new characterization of sparse graphs which we call the
pebble game with colors the pebble game with colors is a simple graph construction rule that
produces a sparse graph along with a sparsitycertifying decomposition
we define and study a canonical class of pebble game constructions which correspond to
previously studied decompositions of sparse graphs into edge disjoint trees our results provide
a unifying framework for all the previously known special cases including nashwilliamstutte and 7 24 indeed in the lower range canonical pebble game constructions capture the
properties of the augmenting paths used in matroid union and intersection algorithms5 6
since the sparse graphs in the upper range are not known to be unions or intersections of the
matroids for which there are efficient augmenting path algorithms these do not easily apply in


research of both authors funded by the nsf under grants nsf ccf0430990 and nsfdarpa cargo
ccr0310661 to the first author

2

ileana streinu louis theran

term
meaning
sparse graph g
every nonempty subgraph on n0 vertices has  kn0   edges
tight graph g
g  v e is sparse and v   n e  kn  
block h in g
g is sparse and h is a tight subgraph
component h of g
g is sparse and h is a maximal block
mapgraph
graph that admits an outdegreeexactlyone orientation
k mapsandtrees
edgedisjoint union of  trees and k   mapgrpahs
tk
union of  trees each vertex is in exactly k of them
set of treepieces of an tk induced on v 0  v pieces of trees in the tk spanned by ev 0 
proper tk
every v 0  v contains   pieces of trees from the tk
table 1 sparse graph and decomposition terminology used in this paper

the upper range pebble game with colors constructions may thus be considered a strengthening
of augmenting paths to the upper range of matroidal sparse graphs
11 sparse graphs
a graph is k sparse if for any nonempty subgraph with m0 edges and n0 vertices m0 
kn0   we observe that this condition implies that 0    2k  1 and from now on in this
paper we will make this assumption a sparse graph that has n vertices and exactly kn   edges
is called tight
for a graph g  v e and v 0  v  we use the notation spanv 0  for the number of edges
in the subgraph induced by v 0  in a directed graph outv 0  is the number of edges with the tail
in v 0 and the head in v v 0  for a subgraph induced by v 0  we call such an edge an outedge
there are two important types of subgraphs of sparse graphs a block is a tight subgraph of
a sparse graph a component is a maximal block
table 1 summarizes the sparse graph terminology used in this paper
12 sparsitycertifying decompositions
a karborescence is a graph that admits a decomposition into k edgedisjoint spanning trees
figure 1a shows an example of a 3arborescence the karborescent graphs are described
by the wellknown theorems of tutte 23 and nashwilliams 17 as exactly the k ktight
graphs
a mapgraph is a graph that admits an orientation such that the outdegree of each vertex is
exactly one a kmapgraph is a graph that admits a decomposition into k edgedisjoint mapgraphs figure 1b shows an example of a 2mapgraphs the edges are oriented in one possible
configuration certifying that each color forms a mapgraph mapgraphs may be equivalently
defined see eg 18 as having exactly one cycle per connected component1
a k mapsandtrees is a graph that admits a decomposition into k   edgedisjoint
mapgraphs and  spanning trees
another characterization of mapgraphs which we will use extensively in this paper is as
the 1 0tight graphs 8 24 the kmapgraphs are evidently k 0tight and 8 24 show that
the converse holds as well
1

our terminology follows lovsz in 16 in the matroid literature mapgraphs are sometimes known as bases
of the bicycle matroid or spanning pseudoforests

sparsitycertifying graph decompositions

3

c

2

b
e
a
d

4

1

a

3

b

c

fig 1 examples of sparsitycertifying decompositions a a 3arborescence b a 2mapgraph c a
2 1mapsandtrees edges with the same line style belong to the same subgraph the 2mapgraph is
shown with a certifying orientation

a tk is a decomposition into  edgedisjoint not necessarily spanning trees such that each
vertex is in exactly k of them figure 2a shows an example of a 3t2
given a subgraph g0 of a tk graph g the set of treepieces in g0 is the collection of the
components of the trees in g induced by g0 since g0 is a subgraph each tree may contribute
multiple pieces to the set of treepieces in g0  we observe that these treepieces may come
from the same tree or be singlevertex empty trees it is also helpful to note that the definition
of a treepiece is relative to a specific subgraph an tk decomposition is proper if the set of
treepieces in any subgraph g0 has size at least 
figure 2a shows a graph with a 3t2 decomposition we note that one of the trees is an
isolated vertex in the bottomright corner the subgraph in figure 2b has three black treepieces and one gray treepiece an isolated vertex at the topright corner and two single edges
these count as three treepieces even though they come from the same back tree when the
whole graph in considered figure 2c shows another subgraph in this case there are three
gray treepieces and one black one
table 1 contains the decomposition terminology used in this paper
the decomposition problem we define the decomposition problem for sparse graphs as taking a graph as its input and producing as output a decomposition that can be used to certify sparsity in this paper we will study three kinds of outputs mapsandtrees proper tk decompositions
and the pebblegamewithcolors decomposition which is defined in the next section
2 historical background
the wellknown theorems of tutte 23 and nashwilliams 17 relate the k ktight graphs to
the existence of decompositions into edgedisjoint spanning trees taking a matroidal viewpoint

4

ileana streinu louis theran
4

1

4

1

3

3

0

0

5

2

5

2

a

b
4

1
3
0

5

2

c

fig 2 a a graph with a 3t2 decomposition one of the three trees is a single vertex in the bottom right
corner b the highlighted subgraph inside the dashed countour has three black treepieces and one gray
treepiece c the highlighted subgraph inside the dashed countour has three gray treepieces one is a
single vertex and one black treepiece

edmonds 3 4 gave another proof of this result using matroid unions the equivalence of mapsandtrees graphs and tight graphs in the lower range is shown using matroid unions in 24 and
matroid augmenting paths are the basis of the algorithms for the lower range of 5 6 19
in rigidity theory a foundational theorem of laman 11 shows that 2 3tight laman
graphs correspond to generically minimally rigid barandjoint frameworks in the plane tay
21 proved an analogous result for bodybar frameworks in any dimension using k ktight
graphs rigidity by counts motivated interest in the upper range and crapo 2 proved the
equivalence of laman graphs and proper 3t2 graphs tay 22 used this condition to give a
direct proof of lamans theorem and generalized the 3t2 condition to all tk for k    2k 1
haas 7 studied tk decompositions in detail and proved the equivalence of tight graphs and
proper tk graphs for the general upper range we observe that aside from our new pebblegamewithcolors decomposition all the combinatorial characterizations of the upper range of
sparse graphs including the counts have a geometric interpretation 11 21 22 24
a pebble game algorithm was first proposed in 10 as an elegant alternative to hendricksons laman graph algorithms 9 berg and jordan 1 provided the formal analysis of the
pebble game of 10 and introduced the idea of playing the game on a directed graph lee and
streinu 12 generalized the pebble game to the entire range of parameters 0    2k  1 and
left as an open problem using the pebble game to find sparsity certifying decompositions
3 the pebble game with colors
our pebble game with colors is a set of rules for constructing graphs indexed by nonnegative
integers k and  we will use the pebble game with colors as the basis of an efficient algorithm
for the decomposition problem later in this paper since the phrase with colors is necessary
only for comparison to 12 we will omit it in the rest of the paper when the context is clear

sparsitycertifying graph decompositions

5

we now present the pebble game with colors the game is played by a single player on a
fixed finite set of vertices the player makes a finite sequence of moves a move consists in the
addition andor orientation of an edge at any moment of time the state of the game is captured
by a directed graph h with colored pebbles on vertices and edges the edges of h are colored
by the pebbles on them while playing the pebble game all edges are directed and we use the
notation vw to indicate a directed edge from v to w
we describe the pebble game with colors in terms of its initial configuration and the allowed
moves

a

b

fig 3 examples of pebble game with colors moves a addedge b pebbleslide pebbles on vertices
are shown as black or gray dots edges are colored with the color of the pebble on them

initialization in the beginning of the pebble game h has n vertices and no edges we start
by placing k pebbles on each vertex of h one of each color ci  for i  1 2     k
addedgewithcolors let v and w be vertices with at least   1 pebbles on them assume
wlog that v has at least one pebble on it pick up a pebble from v add the oriented edge vw
to eh and put the pebble picked up from v on the new edge
figure 3a shows examples of the addedge move
pebbleslide let w be a vertex with a pebble p on it and let vw be an edge in h replace
vw with wv in eh put the pebble that was on vw on v and put p on wv
note that the color of an edge can change with a pebbleslide move figure 3b shows
examples the convention in these figures and throughout this paper is that pebbles on vertices
are represented as colored dots and that edges are shown in the color of the pebble on them
from the definition of the pebbleslide move it is easy to see that a particular pebble is
always either on the vertex where it started or on an edge that has this vertex as the tail however
when making a sequence of pebbleslide moves that reverse the orientation of a path in h it is
sometimes convenient to think of this path reversal sequence as bringing a pebble from the end
of the path to the beginning
the output of playing the pebble game is its complete configuration
output at the end of the game we obtain the directed graph h along with the location
and colors of the pebbles observe that since each edge has exactly one pebble on it the pebble
game configuration colors the edges
we say that the underlying undirected graph g of h is constructed by the k pebble game
or that h is a pebblegame graph
since each edge of h has exactly one pebble on it the pebble games configuration partitions
the edges of h and thus g into k different colors we call this decomposition of h a pebblegamewithcolors decomposition figure 4a shows an example of a 2 2tight graph with a
pebblegame decomposition
let g  v e be pebblegame graph with the coloring induced by the pebbles on the edges
and let g0 be a subgraph of g then the coloring of g induces a set of monochromatic con

6

ileana streinu louis theran

a

b

c

fig 4 a 2 2tight graph with one possible pebblegame decomposition the edges are oriented to
show 1 0sparsity for each color a the graph k4 with a pebblegame decomposition there is an
empty black tree at the center vertex and a gray spanning tree b the highlighted subgraph has two
black trees and a gray tree the black edges are part of a larger cycle but contribute a tree to the subgraph
c the highlighted subgraph with a light gray background has three empty gray trees the black edges
contain a cycle and do not contribute a piece of tree to the subgraph
notation meaning
spanv 0  number of edges spanned in h by v 0  v  ie eh v 0 
pebv 0 
number of pebbles on v 0  v
outv 0 
number of edges vw in h with v  v 0 and w  v v 0
pebi v
number of pebbles of color ci on v  v
outi v
number of edges vw colored ci for v  v
table 2 pebble game notation used in this paper

nected subgraphs of g0 there may be more than one of the same color such a monochromatic
subgraph is called a mapgraphpiece of g0 if it contains a cycle in g0  and a treepiece of g0
otherwise the set of treepieces of g0 is the collection of treepieces induced by g0  as with
the corresponding definition for tk s the set of treepieces is defined relative to a specific subgraph in particular a treepiece may be part of a larger cycle that includes edges not spanned
by g0 
the properties of pebblegame decompositions are studied in section 6 and theorem 2
shows that each color must be 1 0sparse the orientation of the edges in figure 4a shows
this
for example figure 4a shows a 2 2tight graph with one possible pebblegame decomposition the whole graph contains a gray treepiece and a black treepiece that is an isolated
vertex the subgraph in figure 4b has a black tree and a gray tree with the edges of the black
tree coming from a cycle in the larger graph in figure 4c however the black cycle does not
contribute a treepiece all three treepieces in this subgraph are singlevertex gray trees
in the following discussion we use the notation pebv for the number of pebbles on v and
pebi v to indicate the number of pebbles of colors i on v
table 2 lists the pebble game notation used in this paper

4 our results
we describe our results in this section the rest of the paper provides the proofs

sparsitycertifying graph decompositions

7

our first result is a strengthening of the pebble games of 12 to include colors it says
that sparse graphs are exactly pebble game graphs recall that from now on all pebble games
discussed in this paper are our pebble game with colors unless noted explicitly
theorem 1 sparse graphs and pebblegame graphs coincide a graph g is k sparse
with 0    2k  1 if and only if g is a pebblegame graph
next we consider pebblegame decompositions showing that they are a generalization of
proper tk decompositions that extend to the entire matroidal range of sparse graphs
theorem 2 the pebblegamewithcolors decomposition a graph g is a pebblegame
graph if and only if it admits a decomposition into k edgedisjoint subgraphs such that each
is 1 0sparse and every subgraph of g contains at least  treepieces of the 1 0sparse
graphs in the decomposition
the 1 0sparse subgraphs in the statement of theorem 2 are the colors of the pebbles thus
theorem 2 gives a characterization of the pebblegamewithcolors decompositions obtained
by playing the pebble game defined in the previous section notice the similarity between the
requirement that the set of treepieces have size at least  in theorem 2 and the definition of a
proper tk 
our next results show that for any pebblegame graph we can specialize its pebble game
construction to generate a decomposition that is a mapsandtrees or proper tk  we call these
specialized pebble game constructions canonical and using canonical pebble game constructions we obtain new direct proofs of existing arboricity results
we observe theorem 2 that mapsandtrees are special cases of the pebblegame decomposition both spanning trees and spanning mapgraphs are 1 0sparse and each of the spanning
trees contributes at least one piece of tree to every subgraph
the case of proper tk graphs is more subtle if each color in a pebblegame decomposition
is a forest then we have found a proper tk  but this class is a subset of all possible proper
tk decompositions of a tight graph we show that this class of proper tk decompositions is
sufficient to certify sparsity
we now state the main theorem for the upper and lower range
theorem 3 main theorem lower range mapsandtrees coincide with pebblegame
graphs let 0    k a graph g is a tight pebblegame graph if and only if g is a k mapsandtrees
theorem 4 main theorem upper range proper tk graphs coincide with pebblegame
graphs let k    2k  1 a graph g is a tight pebblegame graph if and only if it is a proper
tk with kn   edges
as corollaries we obtain the existing decomposition results for sparse graphs
corollary 5 nashwilliams 17 tutte 23 white and whiteley 24 let   k a graph
g is tight if and only if has a k mapsandtrees decomposition
corollary 6 crapo 2 haas 7 let k    2k  1 a graph g is tight if and only if it is a
proper tk 
efficiently finding canonical pebble game constructions the proofs of theorem 3 and theorem 4 lead to an obvious algorithm with on3  running time for the decomposition problem
our last result improves on this showing that a canonical pebble game construction and thus

8

ileana streinu louis theran

a mapsandtrees or proper tk decomposition can be found using a pebble game algorithm in
on2  time and space
these time and space bounds mean that our algorithm can be combined with those of 12
without any change in complexity
5 pebble game graphs
in this section we prove theorem 1 a strengthening of results from 12 to the pebble game
with colors since many of the relevant properties of the pebble game with colors carry over
directly from the pebble games of 12 we refer the reader there for the proofs
we begin by establishing some invariants that hold during the execution of the pebble game
lemma 7 pebble game invariants during the execution of the pebble game the following
invariants are maintained in h
i1
i2
i3
i4
i5

there are at least  pebbles on v  12
for each vertex v spanv  outv  pebv  k 12
for each v 0  v  spanv 0   outv 0   pebv 0   kn0  12
for every vertex v  v  outi v  pebi v  1
every maximal path consisting only of edges with color ci ends in either the first vertex with
a pebble of color ci or a cycle

proof i1 i2 and i3 come directly from 12
i4 this invariant clearly holds at the initialization phase of the pebble game with colors
that addedge and pebbleslide moves preserve i4 is clear from inspection
i5 by i4 a monochromatic path of edges is forced to end only at a vertex with a pebble of
the same color on it if there is no pebble of that color reachable then the path must eventually
visit some vertex twice
from these invariants we can show that the pebble game constructible graphs are sparse
lemma 8 pebblegame graphs are sparse 12 let h be a graph constructed with the
pebble game then h is sparse if there are exactly  pebbles on v h then h is tight
the main step in proving that every sparse graph is a pebblegame graph is the following
recall that by bringing a pebble to v we mean reorienting h with pebbleslide moves to reduce
the out degree of v by one
lemma 9 the   1 pebble condition 12 let vw be an edge such that h  vw is sparse if
pebv w    1 then a pebble not on v w can be brought to either v or w
it follows that any sparse graph has a pebble game construction
theorem 1 sparse graphs and pebblegame graphs coincide a graph g is k sparse
with 0    2k  1 if and only if g is a pebblegame graph
6 the pebblegamewithcolors decomposition
in this section we prove theorem 2 which characterizes all pebblegame decompositions we
start with the following lemmas about the structure of monochromatic connected components
in h the directed graph maintained during the pebble game

sparsitycertifying graph decompositions

9

lemma 10 monochromatic pebble game subgraphs are 1 0sparse let hi be the subgraph of h induced by edges with pebbles of color ci on them then hi is 1 0sparse for
i  1     k
proof by i4 hi is a set of edges with out degree at most one for every vertex
lemma 11 treepieces in a pebblegame graph every subgraph of the directed graph h
in a pebble game construction contains at least  monochromatic treepieces and each of these
is rooted at either a vertex with a pebble on it or a vertex that is the tail of an outedge
recall that an outedge from a subgraph h 0  v 0  e 0  is an edge vw with v  v 0 and vw 
 e 0
proof let h 0  v 0  e 0  be a nonempty subgraph of h and assume without loss of generality
that h 0 is induced by v 0  by i3 outv 0   pebv 0    we will show that each pebble and
outedge tail is the root of a treepiece
consider a vertex v  v 0 and a color ci  by i4 there is a unique monochromatic directed
path of color ci starting at v by i5 if this path ends at a pebble it does not have a cycle
similarly if this path reaches a vertex that is the tail of an outedge also in color ci ie if the
monochromatic path from v leaves v 0  then the path cannot have a cycle in h 0 
since this argument works for any vertex in any color for each color there is a partitioning
of the vertices into those that can reach each pebble outedge tail or cycle it follows that each
pebble and outedge tail is the root of a monochromatic tree as desired
applied to the whole graph lemma 11 gives us the following
lemma 12 pebbles are the roots of trees in any pebble game configuration each pebble of
color ci is the root of a possibly empty monochromatic treepiece of color ci 
remark haas showed in 7 that in a tk  a subgraph induced by n0  2 vertices with m0
edges has exactly kn0  m0 treepieces in it lemma 11 strengthens haas result by extending it
to the lower range and giving a construction that finds the treepieces showing the connection
between the   1 pebble condition and the hereditary condition on proper tk 
we conclude our investigation of arbitrary pebble game constructions with a description of
the decomposition induced by the pebble game with colors
theorem 2 the pebblegamewithcolors decomposition a graph g is a pebblegame
graph if and only if it admits a decomposition into k edgedisjoint subgraphs such that each
is 1 0sparse and every subgraph of g contains at least  treepieces of the 1 0sparse
graphs in the decomposition
proof let g be a pebblegame graph the existence of the k edgedisjoint 1 0sparse subgraphs was shown in lemma 10 and lemma 11 proves the condition on subgraphs
for the other direction we observe that a color ci with ti treepieces in a given subgraph can
span at most n  ti edges summing over all the colors shows that a graph with a pebblegame
decomposition must be sparse apply theorem 1 to complete the proof
remark we observe that a pebblegame decomposition for a laman graph may be read out
of the bipartite matching used in hendricksons laman graph extraction algorithm 9 indeed
pebble game orientations have a natural correspondence with the bipartite matchings used in
9

10

ileana streinu louis theran

mapsandtrees are a special case of pebblegame decompositions for tight graphs if there
are no cycles in  of the colors then the trees rooted at the corresponding  pebbles must be
spanning since they have n  1 edges also if each color forms a forest in an upper range
pebblegame decomposition then the treepieces condition ensures that the pebblegame decomposition is a proper tk 
in the next section we show that the pebble game can be specialized to correspond to mapsandtrees and proper tk decompositions
7 canonical pebble game constructions
in this section we prove the main theorems theorem 3 and theorem 4 continuing the investigation of decompositions induced by pebble game constructions by studying the case where a
minimum number of monochromatic cycles are created the main idea captured in lemma 15
and illustrated in figure 6 is to avoid creating cycles while collecting pebbles we show that
this is always possible implying that monochromatic mapgraphs are created only when we
add more than kn0  1 edges to some set of n0 vertices for the lower range this implies that
every color is a forest every decomposition characterization of tight graphs discussed above
follows immediately from the main theorem giving new proofs of the previous results in a
unified framework
in the proof we will use two specializations of the pebble game moves the first is a modification of the addedge move
canonical addedge when performing an addedge move cover the new edge with a color
that is on both vertices if possible if not then take the highest numbered color present
the second is a restriction on which pebbleslide moves we allow
canonical pebbleslide a pebbleslide move is allowed only when it does not create a
monochromatic cycle
we call a pebble game construction that uses only these moves canonical in this section
we will show that every pebblegame graph has a canonical pebble game construction lemma
14 and lemma 15 and that canonical pebble game constructions correspond to proper tk and
mapsandtrees decompositions theorem 3 and theorem 4
we begin with a technical lemma that motivates the definition of canonical pebble game
constructions it shows that the situations disallowed by the canonical moves are all the ways
for cycles to form in the lowest  colors
lemma 13 monochromatic cycle creation let v  v have a pebble p of color ci on it and
let w be a vertex in the same tree of color ci as v a monochromatic cycle colored ci is created
in exactly one of the following ways
m1 the edge vw is added with an addedge move
m2 the edge wv is reversed by a pebbleslide move and the pebble p is used to cover the reverse
edge vw
proof observe that the preconditions in the statement of the lemma are implied by lemma 7
by lemma 12 monochromatic cycles form when the last pebble of color ci is removed from a
connected monochromatic subgraph m1 and m2 are the only ways to do this in a pebble
game construction since the color of an edge only changes when it is inserted the first time or
a new pebble is put on it by a pebbleslide move

sparsitycertifying graph decompositions

w

11

w

v

v

a

w

w

v

v

b

fig 5 creating monochromatic cycles in a 2 0pebble game a a type m1 move creates a cycle by
adding a black edge b a type m2 move creates a cycle with a pebbleslide move the vertices are
labeled according to their role in the definition of the moves

figure 5a and figure 5b show examples of m1 and m2 mapgraph creation moves
respectively in a 2 0pebble game construction
we next show that if a graph has a pebble game construction then it has a canonical pebble game construction this is done in two steps considering the cases m1 and m2 separately the proof gives two constructions that implement the canonical addedge and canonical
pebbleslide moves
lemma 14 the canonical addedge move let g be a graph with a pebble game construction cycle creation steps of type m1 can be eliminated in colors ci for 1  i  0  where
0  mink 
proof for addedge moves cover the edge with a color present on both v and w if possible if
this is not possible then there are   1 distinct colors present use the highest numbered color
to cover the new edge
remark we note that in the upper range there is always a repeated color so no canonical
addedge moves create cycles in the upper range
the canonical pebbleslide move is defined by a global condition to prove that we obtain
the same class of graphs using only canonical pebbleslide moves we need to extend lemma
9 to only canonical moves the main step is to show that if there is any sequence of moves that
reorients a path from v to w then there is a sequence of canonical moves that does the same
thing
lemma 15 the canonical pebbleslide move any sequence of pebbleslide moves leading
to an addedge move can be replaced with one that has no m2 steps and allows the same
addedge move
in other words if it is possible to collect   1 pebbles on the ends of an edge to be added
then it is possible to do this without creating any monochromatic cycles

12

ileana streinu louis theran

figure 7 and figure 8 illustrate the construction used in the proof of lemma 15 we call this
the shortcut construction by analogy to matroid union and intersection augmenting paths used
in previous work on the lower range
figure 6 shows the structure of the proof the shortcut construction removes an m2 step
at the beginning of a sequence that reorients a path from v to w with pebbleslides since one
application of the shortcut construction reorients a simple path from a vertex w0 to w and a
path from v to w0 is preserved the shortcut construction can be applied inductively to find the
sequence of moves we want

w
w

v

v
a

b

w

w
v
c

fig 6 outline of the shortcut construction a an arbitrary simple path from v to w with curved lines
indicating simple paths b an m2 step the black edge about to be flipped would create a cycle
shown in dashed and solid gray of the unique gray tree rooted at w the solid gray edges were part
of the original path from a c the shortened path to the gray pebble the new path follows the gray
tree all the way from the first time the original path touched the gray tree at w0  the path from v to w0 is
simple and the shortcut construction can be applied inductively to it

proof without loss of generality we can assume that our sequence of moves reorients a simple
path in h and that the first move the end of the path is m2 the m2 step moves a pebble
of color ci from a vertex w onto the edge vw which is reversed because the move is m2 v
and w are contained in a maximal monochromatic tree of color ci  call this tree hi0  and observe
that it is rooted at w
now consider the edges reversed in our sequence of moves as noted above before we make
any of the moves these sketch out a simple path in h ending at w let z be the first vertex on
this path in hi0  we modify our sequence of moves as follows delete from the beginning every
move before the one that reverses some edge yz prepend onto what is left a sequence of moves
that moves the pebble on w to z in hi0 

sparsitycertifying graph decompositions

13

a

b

fig 7 eliminating m2 moves a an m2 move b avoiding the m2 by moving along another path
the path where the pebbles move is indicated by doubled lines

a

b

fig 8 eliminating m2 moves a the first step to move the black pebble along the doubled path is
m2 b avoiding the m2 and simplifying the path

since no edges change color in the beginning of the new sequence we have eliminated
the m2 move because our construction does not change any of the edges involved in the
remaining tail of the original sequence the part of the original path that is left in the new
sequence will still be a simple path in h meeting our initial hypothesis
the rest of the lemma follows by induction
together lemma 14 and lemma 15 prove the following
lemma 16 if g is a pebblegame graph then g has a canonical pebble game construction
using canonical pebble game constructions we can identify the tight pebblegame graphs
with mapsandtrees and tk graphs

14

ileana streinu louis theran

theorem 3 main theorem lower range mapsandtrees coincide with pebblegame
graphs let 0    k a graph g is a tight pebblegame graph if and only if g is a k mapsandtrees
proof as observed above a mapsandtrees decomposition is a special case of the pebble game
decomposition applying theorem 2 we see that any mapsandtrees must be a pebblegame
graph
for the reverse direction consider a canonical pebble game construction of a tight graph
from lemma 8 we see that there are  pebbles left on g at the end of the construction the
definition of the canonical addedge move implies that there must be at least one pebble of
each ci for i  1 2      it follows that there is exactly one of each of these colors by lemma
12 each of these pebbles is the root of a monochromatic treepiece with n  1 edges yielding
the required  edgedisjoint spanning trees
corollary 5 nashwilliams 17 tutte 23 white and whiteley 24 let   k a graph
g is tight if and only if has a k mapsandtrees decomposition
we next consider the decompositions induced by canonical pebble game constructions when
  k  1
theorem 4 main theorem upper range proper treesandtrees coincide with pebblegame graphs let k    2k  1 a graph g is a tight pebblegame graph if and only if it
is a proper tk with kn   edges
proof as observed above a proper tk decomposition must be sparse what we need to show
is that a canonical pebble game construction of a tight graph produces a proper tk 
by theorem 2 and lemma 16 we already have the condition on treepieces and the decomposition into  edgedisjoint trees finally an application of i4 shows that every vertex must
in in exactly k of the trees as required
corollary 6 crapo 2 haas 7 let k    2k  1 a graph g is tight if and only if it is a
proper tk 
8 pebble game algorithms for finding decompositions
a nave implementation of the constructions in the previous section leads to an algorithm requiring  n2  time to collect each pebble in a canonical construction in the worst case  n
applications of the construction in lemma 15 requiring  n time each giving a total running
time of  n3  for the decomposition problem
in this section we describe algorithms for the decomposition problem that run in time
on2  we begin with the overall structure of the algorithm
algorithm 17 the canonical pebble game with colors
input a graph g
output a pebblegame graph h
method
 set v h  v g and place one pebble of each color on the vertices of h
 for each edge vw  eg try to collect at least   1 pebbles on v and w using pebbleslide
moves as described by lemma 15

sparsitycertifying graph decompositions

15

 if at least   1 pebbles can be collected add vw to h using an addedge move as in lemma
14 otherwise discard vw
 finally return h and the locations of the pebbles
correctness theorem 1 and the result from 24 that the sparse graphs are the independent
sets of a matroid show that h is a maximum sized sparse subgraph of g since the construction
found is canonical the main theorem shows that the coloring of the edges in h gives a mapsandtrees or proper tk decomposition
complexity we start by observing that the running time of algorithm 17 is the time taken to
process on edges added to h and om edges not added to h we first consider the cost of an
edge of g that is added to h
each of the pebble game moves can be implemented in constant time what remains is to
describe an efficient way to find and move the pebbles we use the following algorithm as a
subroutine of algorithm 17 to do this
algorithm 18 finding a canonical path to a pebble
input vertices v and w and a pebble game configuration on a directed graph h
output if a pebble was found yes and no otherwise the configuration of h is updated
method
 start by doing a depthfirst search from from v in h if no pebble not on w is found stop and
return no
 otherwise a pebble was found we now have a path v  v1  e1      e p1  v p  u where the vi
are vertices and ei is the edge vi vi1  let cei  be the color of the pebble on ei  we will use
the array c to keep track of the colors of pebbles on vertices and edges after we move them
and the array s to sketch out a canonical path from v to u by finding a successor for each
edge
 set su  end 0 and set cu to the color of an arbitrary pebble on u we walk on the path in
reverse order v p  e p1  e p2      e1  v1  for each i check to see if cvi  is set if so go on to
the next i otherwise check to see if cvi1   cei 
 if it is set svi   ei and set cvi   cei  and go on to the next edge
 otherwise cvi1  6 cei  try to find a monochromatic path in color cvi1  from vi to vi1  if
a vertex x is encountered for which cx is set we have a path vi  x1  f1  x2      fq1  xq  x
that is monochromatic in the color of the edges set cxi   c fi  and sxi   fi for i 
1 2     q1 if cx  c fq1  stop otherwise recursively check that there is not a monochromatic cx path from xq1 to x using this same procedure
 finally slide pebbles along the path from the original endpoints v to u specified by the
successor array sv ssv   
the correctness of algorithm 18 comes from the fact that it is implementing the shortcut
construction efficiency comes from the fact that instead of potentially moving the pebble back
and forth algorithm 18 precomputes a canonical path crossing each edge of h at most three
times once in the initial depthfirst search and twice while converting the initial path to a
canonical one it follows that each accepted edges takes on time for a total of on2  time
spent processing edges in h
although we have not discussed this explicity for the algorithm to be efficient we need to
maintain components as in 12 after each accepted edge the components of h can be updated
in time on finally the results of 12 13 show that the rejected edges take an amortized o1
time each

16

ileana streinu louis theran

summarizing we have shown that the canonical pebble game with colors solves the decomposition problem in time on2 
9 an important special case rigidity in dimension 2 and sliderpinning
in this short section we present a new application for the special case of practical importance
k  2   3 as discussed in the introduction lamans theorem 11 characterizes minimally
rigid graphs as the 2 3tight graphs in recent work on slider pinning developed after the
current paper was submitted we introduced the sliderpinning model of rigidity 15 20 combinatorially we model the barslider frameworks as simple graphs together with some loops
placed on their vertices in such a way that there are no more than 2 loops per vertex one of each
color
we characterize the minimally rigid barslider graphs 20 as graphs that are
1 2 3sparse for subgraphs containing no loops
2 2 0tight when loops are included
we call these graphs 2 0 3gradedtight and they are a special case of the gradedsparse
graphs studied in our paper 14
the connection with the pebble games in this paper is the following
corollary 19 pebble games and sliderpinning in any 2 3pebble game graph if we
replace pebbles by loops we obtain a 2 0 3gradedtight graph
proof follows from invariant i3 of lemma 7
in 15 we study a special case of slider pinning where every slider is either vertical or
horizontal we model the sliders as precolored loops with the color indicating x or y direction
for this axis parallel slider case the minimally rigid graphs are characterized by
1 2 3sparse for subgraphs containing no loops
2 admit a 2coloring of the edges so that each color is a forest ie has no cycles and each
monochromatic tree spans exactly one loop of its color
this also has an interpretation in terms of colored pebble games
corollary 20 the pebble game with colors and sliderpinning in any canonical 2 3pebblegamewithcolors graph if we replace pebbles by loops of the same color we obtain the
graph of a minimally pinned axisparallel barslider framework
proof follows from theorem 4 and lemma 12
10 conclusions and open problems
we presented a new characterization of k sparse graphs the pebble game with colors and
used it to give an efficient algorithm for finding decompositions of sparse graphs into edgedisjoint trees our algorithm finds such sparsitycertifying decompositions in the upper range
and runs in time on2  which is as fast as the algorithms for recognizing sparse graphs in the
upper range from 12
we also used the pebble game with colors to describe a new sparsitycertifying decomposition that applies to the entire matroidal range of sparse graphs

sparsitycertifying graph decompositions

17

we defined and studied a class of canonical pebble game constructions that correspond to
either a mapsandtrees or proper tk decomposition this gives a new proof of the tuttenashwilliams arboricity theorem and a unified proof of the previously studied decomposition certificates of sparsity canonical pebble game constructions also show the relationship between
the   1 pebble condition which applies to the upper range of  to matroid union augmenting
paths which do not apply in the upper range
algorithmic consequences and open problems in 6 gabow and westermann give an on32 
algorithm for recognizing sparse graphs in the lower range and extracting sparse subgraphs from
dense ones their technique is based on efficiently finding matroid union augmenting paths
which extend a mapsandtrees decomposition the on32  algorithm uses two subroutines to
find augmenting paths cyclic scanning which finds augmenting paths one at a time and batch
scanning which finds groups of disjoint augmenting paths
we observe that algorithm 17 can be used to replace cyclic scanning in gabow and westermanns algorithm without changing the running time the data structures used in the implementation of the pebble game detailed in 12 13 are simpler and easier to implement than those
used to support cyclic scanning
the two major open algorithmic problems related to the pebble game are then
problem 1 develop a pebble game algorithm with the properties of batch scanning and obtain
an implementable on32  algorithm for the lower range
problem 2 extend batch scanning to the   1 pebble condition and derive an on32  pebble
game algorithm for the upper range
in particular it would be of practical importance to find an implementable on32  algorithm
for decompositions into edgedisjoint spanning trees
references
1 berg ar jordn t algorithms for graph rigidity and scene analysis in proc 11th
european symposium on algorithms esa 03 lncs vol 2832 pp 7889 2003
2 crapo h on the generic rigidity of plane frameworks tech rep 1278 institut de
recherche dinformatique et dautomatique 1988
3 edmonds j minimum partition of a matroid into independent sets j res nat bur
standards sect b 69b 6772 1965
4 edmonds j submodular functions matroids and certain polyhedra in combinatorial
optimizationeureka you shrink no 2570 in lncs pp 1126 springer 2003
5 gabow hn a matroid approach to finding edge connectivity and packing arborescences
journal of computer and system sciences 50 259273 1995
6 gabow hn westermann hh forests frames and games algorithms for matroid sums
and applications algorithmica 71 465497 1992
7 haas r characterizations of arboricity of graphs ars combinatorica 63 129137 2002
8 haas r lee a streinu i theran l characterizing sparse graphs by map decompositions journal of combinatorial mathematics and combinatorial computing 62 311
2007
9 hendrickson b conditions for unique graph realizations siam journal on computing
211 6584 1992

18

ileana streinu louis theran

10 jacobs dj hendrickson b an algorithm for twodimensional rigidity percolation the
pebble game journal of computational physics 137 346365 1997
11 laman g on graphs and rigidity of plane skeletal structures journal of engineering
mathematics 4 331340 1970
12 lee a streinu i pebble game algorihms and sparse graphs discrete mathematics
3088 14251437 2008
13 lee a streinu i theran l finding and maintaining rigid components in proc canadian conference of computational geometry windsor ontario 2005 httpcccg
csuwindsorcapapers72pdf
14 lee a streinu i theran l graded sparse graphs and matroids journal of universal
computer science 1310 2007
15 lee a streinu i theran l the sliderpinning problem in proceedings of the 19th
canadian conference on computational geometry cccg07 2007
16 lovsz l combinatorial problems and exercises akademiai kiado and northholland
amsterdam 1979
17 nashwilliams csa decomposition of finite graphs into forests journal of the london
mathematical society 39 12 1964
18 oxley jg matroid theory the clarendon press oxford university press new york
1992
19 roskind j tarjan re a note on finding minimum cost edge disjoint spanning trees
mathematics of operations research 104 701708 1985
20 streinu i theran l combinatorial genericity and minimal rigidity in scg 08 proceedings of the twentyfourth annual symposium on computational geometry pp 365
374 acm new york ny usa 2008
21 tay ts rigidity of multigraphs i linking rigid bodies in nspace journal of combinatorial theory series b 26 95112 1984
22 tay ts a new proof of lamans theorem graphs and combinatorics 9 365370 1993
23 tutte wt on the problem of decomposing a graph into n connected factors journal of
the london mathematical society 142 221230 1961
24 whiteley w the union of matroids and the rigidity of frameworks siam journal on
discrete mathematics 12 237255 1988

