sparsitycertifying graph decompositionsileana streinu1 louis theran2arxiv07040002v2 mathco 13 dec 2008department science smith college northampton ma email streinucssmithedudepartment science university massachusetts amherst email therancsumasseduabstract new algorithm k pebble game colors use obtain characterization family k sparse graphs algorithmic solutions family problems concerning tree decompositions graphs special instances sparse graphs appear rigidity theoryreceived increased attention recent years particular colored pebbles generalize strengthenprevious results lee streinu 12 new proof tuttenashwilliams characterization arboricity present new decomposition certifies sparsity based k pebblegame colors work exposes connections pebble game algorithms previoussparse graph algorithms gabow 5 gabow westermann 6 hendrickson 91 introduction preliminariesfocus paper decompositions k sparse graphs edgedisjoint subgraphscertify sparsity use graph mean multigraph possibly loopsgraph k sparse subset n0 vertices spans kn0 edges graphk sparse graph kn0 edges k tight range k 2k 1 upperrange sparse graphs 0 k lower rangepaper present efficient algorithms finding decompositions certify sparsityupper range algorithms apply lower range addressed 3 4 5 6 19 decomposition certifies sparsity graph sparse graphsgraphs admitting decomposition coincidealgorithms based new characterization sparse graphspebble game colors pebble game colors simple graph construction ruleproduces sparse graph sparsitycertifying decompositiondefine study canonical class pebble game constructions correspondpreviously studied decompositions sparse graphs edge disjoint trees results provideunifying framework previously known special cases including nashwilliamstutte 7 24 lower range canonical pebble game constructions captureproperties augmenting paths matroid union intersection algorithms5 6sparse graphs upper range known unions intersectionsmatroids efficient augmenting path algorithms easily applyresearch authors funded nsf grants nsf ccf0430990 nsfdarpa cargoccr0310661 authorileana streinu louis therantermmeaningsparse graph gnonempty subgraph n0 vertices kn0 edgestight graph gg v e sparse v n e knblock h gg sparse h tight subgraphcomponent h gg sparse h maximal blockmapgraphgraph admits outdegreeexactlyone orientationk mapsandtreesedgedisjoint union trees k mapgrpahsunion trees vertex exactly kset treepieces tk induced v 0 v pieces trees tk spanned ev 0proper tkv 0 v contains pieces trees tktable 1 sparse graph decomposition terminology paperupper range pebble game colors constructions considered strengtheningaugmenting paths upper range matroidal sparse graphs11 sparse graphsgraph k sparse nonempty subgraph m0 edges n0 vertices m0kn0 observe condition implies 0 2k 1paper assumption sparse graph n vertices exactly kn edgescalled tightgraph g v e v 0 v use notation spanv 0 number edgessubgraph induced v 0 directed graph outv 0 number edges tailv 0 head v v 0 subgraph induced v 0 edge outedgeimportant types subgraphs sparse graphs block tight subgraphsparse graph component maximal blocktable 1 summarizes sparse graph terminology paper12 sparsitycertifying decompositionskarborescence graph admits decomposition k edgedisjoint spanning treesfigure 1a shows example 3arborescence karborescent graphs describedwellknown theorems tutte 23 nashwilliams 17 exactly k ktightgraphsmapgraph graph admits orientation outdegree vertexexactly kmapgraph graph admits decomposition k edgedisjoint mapgraphs figure 1b shows example 2mapgraphs edges oriented possibleconfiguration certifying color forms mapgraph mapgraphs equivalentlydefined 18 having exactly cycle connected component1k mapsandtrees graph admits decomposition k edgedisjointmapgraphs spanning treescharacterization mapgraphs use extensively paper1 0tight graphs 8 24 kmapgraphs evidently k 0tight 8 24converse holdsterminology follows lovsz 16 matroid literature mapgraphs known basesbicycle matroid spanning pseudoforestssparsitycertifying graph decompositionsfig 1 examples sparsitycertifying decompositions 3arborescence b 2mapgraph c2 1mapsandtrees edges line style belong subgraph 2mapgraphshown certifying orientationtk decomposition edgedisjoint necessarily spanning treesvertex exactly k figure 2a shows example 3t2given subgraph g0 tk graph g set treepieces g0 collectioncomponents trees g induced g0 g0 subgraph tree contributemultiple pieces set treepieces g0 observe treepieces cometree singlevertex trees helpful note definitiontreepiece relative specific subgraph tk decomposition proper settreepieces subgraph g0 sizefigure 2a shows graph 3t2 decomposition note treesisolated vertex bottomright corner subgraph figure 2b black treepieces gray treepiece isolated vertex topright corner single edgescount treepieces come treegraph considered figure 2c shows subgraph casegray treepieces blacktable 1 contains decomposition terminology paperdecomposition problem define decomposition problem sparse graphs taking graph input producing output decomposition certify sparsity paper study kinds outputs mapsandtrees proper tk decompositionspebblegamewithcolors decomposition defined section2 historical backgroundwellknown theorems tutte 23 nashwilliams 17 relate k ktight graphsexistence decompositions edgedisjoint spanning trees taking matroidal viewpointileana streinu louis theranfig 2 graph 3t2 decomposition trees single vertex rightcorner b highlighted subgraph inside dashed countour black treepieces graytreepiece c highlighted subgraph inside dashed countour gray treepiecessingle vertex black treepieceedmonds 3 4 gave proof result matroid unions equivalence mapsandtrees graphs tight graphs lower range shown matroid unions 24matroid augmenting paths basis algorithms lower range 5 6 19rigidity theory foundational theorem laman 11 shows 2 3tight lamangraphs correspond generically minimally rigid barandjoint frameworks plane tay21 proved analogous result bodybar frameworks dimension k ktightgraphs rigidity counts motivated upper range crapo 2 provedequivalence laman graphs proper 3t2 graphs tay 22 conditiondirect proof lamans theorem generalized 3t2 condition tk k 2k 1haas 7 studied tk decompositions proved equivalence tight graphsproper tk graphs general upper range observe aside new pebblegamewithcolors decomposition combinatorial characterizations upper rangesparse graphs including counts geometric interpretation 11 21 22 24pebble game algorithm proposed 10 elegant alternative hendricksons laman graph algorithms 9 berg jordan 1 provided formal analysispebble game 10 introduced idea playing game directed graph leestreinu 12 generalized pebble game entire range parameters 0 2k 1left open problem pebble game sparsity certifying decompositions3 pebble game colorspebble game colors set rules constructing graphs indexed nonnegativeintegers k use pebble game colors basis efficient algorithmdecomposition problem later paper phrase colors necessarycomparison 12 omit rest paper context clearsparsitycertifying graph decompositionspresent pebble game colors game played single playerfixed finite set vertices player makes finite sequence moves consistsaddition andor orientation edge moment time state game captureddirected graph h colored pebbles vertices edges edges h coloredpebbles playing pebble game edges directed usenotation vw indicate directed edge v wpebble game colors terms initial configuration allowedmovesfig 3 examples pebble game colors moves addedge b pebbleslide pebbles verticesshown black gray dots edges colored color pebbleinitialization beginning pebble game h n vertices edges startplacing k pebbles vertex h color ci 1 2 kaddedgewithcolors let v w vertices 1 pebbles assumewlog v pebble pick pebble v add oriented edge vweh pebble picked v new edgefigure 3a shows examples addedgepebbleslide let w vertex pebble p let vw edge h replacevw wv eh pebble vw v p wvnote color edge change pebbleslide figure 3b showsexamples convention figures paper pebbles verticesrepresented colored dots edges shown color pebbledefinition pebbleslide easy particular pebblevertex started edge vertex tailmaking sequence pebbleslide moves reverse orientation path hconvenient think path reversal sequence bringing pebble endpath beginningoutput playing pebble game complete configurationoutput end game obtain directed graph h locationcolors pebbles observe edge exactly pebble pebblegame configuration colors edgesunderlying undirected graph g h constructed k pebble gameh pebblegame graphedge h exactly pebble pebble games configuration partitionsedges h g k different colors decomposition h pebblegamewithcolors decomposition figure 4a shows example 2 2tight graphpebblegame decompositionlet g v e pebblegame graph coloring induced pebbles edgeslet g0 subgraph g coloring g induces set monochromaticileana streinu louis theranfig 4 2 2tight graph possible pebblegame decomposition edges oriented1 0sparsity color graph k4 pebblegame decompositionblack tree center vertex gray spanning tree b highlighted subgraphblack trees gray tree black edges larger cycle contribute tree subgraphc highlighted subgraph light gray background gray trees black edgescontain cycle contribute piece tree subgraphnotation meaningspanv 0 number edges spanned h v 0 v eh v 0pebv 0number pebbles v 0 voutv 0number edges vw h v v 0 w v v 0pebi vnumber pebbles color ci v vouti vnumber edges vw colored ci v vtable 2 pebble game notation papernected subgraphs g0 color monochromaticsubgraph called mapgraphpiece g0 contains cycle g0 treepiece g0set treepieces g0 collection treepieces induced g0corresponding definition tk s set treepieces defined relative specific subgraph particular treepiece larger cycle includes edges spannedg0properties pebblegame decompositions studied section 6 theorem 2shows color 1 0sparse orientation edges figure 4a showsexample figure 4a shows 2 2tight graph possible pebblegame decomposition graph contains gray treepiece black treepiece isolatedvertex subgraph figure 4b black tree gray tree edges blacktree coming cycle larger graph figure 4c black cyclecontribute treepiece treepieces subgraph singlevertex gray treesfollowing discussion use notation pebv number pebbles vpebi v indicate number pebbles colors vtable 2 lists pebble game notation paper4 resultsresults section rest paper provides proofssparsitycertifying graph decompositionsresult strengthening pebble games 12 include colors sayssparse graphs exactly pebble game graphs recall pebble gamesdiscussed paper pebble game colors noted explicitlytheorem 1 sparse graphs pebblegame graphs coincide graph g k sparse0 2k 1 g pebblegame graphconsider pebblegame decompositions showing generalizationproper tk decompositions extend entire matroidal range sparse graphstheorem 2 pebblegamewithcolors decomposition graph g pebblegamegraph admits decomposition k edgedisjoint subgraphs1 0sparse subgraph g contains treepieces 1 0sparsegraphs decomposition1 0sparse subgraphs statement theorem 2 colors pebblestheorem 2 gives characterization pebblegamewithcolors decompositions obtainedplaying pebble game defined previous section notice similarityrequirement set treepieces size theorem 2 definitionproper tkresults pebblegame graph specialize pebble gameconstruction generate decomposition mapsandtrees proper tkspecialized pebble game constructions canonical canonical pebble game constructions obtain new direct proofs existing arboricity resultsobserve theorem 2 mapsandtrees special cases pebblegame decomposition spanning trees spanning mapgraphs 1 0sparse spanningtrees contributes piece tree subgraphcase proper tk graphs subtle color pebblegame decompositionforest proper tk class subset possible propertk decompositions tight graph class proper tk decompositionssufficient certify sparsitystate main theorem upper lower rangetheorem 3 main theorem lower range mapsandtrees coincide pebblegamegraphs let 0 k graph g tight pebblegame graph g k mapsandtreestheorem 4 main theorem upper range proper tk graphs coincide pebblegamegraphs let k 2k 1 graph g tight pebblegame graph propertk kn edgescorollaries obtain existing decomposition results sparse graphscorollary 5 nashwilliams 17 tutte 23 white whiteley 24 let k graphg tight k mapsandtrees decompositioncorollary 6 crapo 2 haas 7 let k 2k 1 graph g tightproper tkefficiently finding canonical pebble game constructions proofs theorem 3 theorem 4 lead obvious algorithm on3 running time decomposition problemresult improves showing canonical pebble game constructionileana streinu louis theranmapsandtrees proper tk decomposition pebble game algorithmon2 time spacetime space bounds mean algorithm combined 12change complexity5 pebble game graphssection prove theorem 1 strengthening results 12 pebble gamecolors relevant properties pebble game colors carrydirectly pebble games 12 refer reader proofsbegin establishing invariants hold execution pebble gamelemma 7 pebble game invariants execution pebble game followinginvariants maintained hpebbles v 12vertex v spanv outv pebv k 12v 0 v spanv 0 outv 0 pebv 0 kn0 12vertex v v outi v pebi v 1maximal path consisting edges color ci ends vertexpebble color ci cycleproof i1 i2 i3 come directly 12i4 invariant clearly holds initialization phase pebble game colorsaddedge pebbleslide moves preserve i4 clear inspectioni5 i4 monochromatic path edges forced end vertex pebblecolor pebble color reachable path eventuallyvisit vertex twiceinvariants pebble game constructible graphs sparselemma 8 pebblegame graphs sparse 12 let h graph constructedpebble game h sparse exactly pebbles v h h tightmain step proving sparse graph pebblegame graph followingrecall bringing pebble v mean reorienting h pebbleslide moves reducedegree vlemma 9 1 pebble condition 12 let vw edge h vw sparsepebv w 1 pebble v w brought v wfollows sparse graph pebble game constructiontheorem 1 sparse graphs pebblegame graphs coincide graph g k sparse0 2k 1 g pebblegame graph6 pebblegamewithcolors decompositionsection prove theorem 2 characterizes pebblegame decompositionsstart following lemmas structure monochromatic connected componentsh directed graph maintained pebble gamesparsitycertifying graph decompositionslemma 10 monochromatic pebble game subgraphs 1 0sparse let hi subgraph h induced edges pebbles color ci hi 1 0sparse1 kproof i4 hi set edges degree vertexlemma 11 treepieces pebblegame graph subgraph directed graph hpebble game construction contains monochromatic treepiecesrooted vertex pebble vertex tail outedgerecall outedge subgraph h 0 v 0 e 0 edge vw v v 0 vwe 0proof let h 0 v 0 e 0 nonempty subgraph h assume loss generalityh 0 induced v 0 i3 outv 0 pebv 0 pebbleoutedge tail root treepiececonsider vertex v v 0 color ci i4 unique monochromatic directedpath color ci starting v i5 path ends pebble cyclesimilarly path reaches vertex tail outedge color cimonochromatic path v leaves v 0 path cycle h 0argument works vertex color color partitioningvertices reach pebble outedge tail cycle followspebble outedge tail root monochromatic tree desiredapplied graph lemma 11 gives followinglemma 12 pebbles roots trees pebble game configuration pebblecolor ci root possibly monochromatic treepiece color ciremark haas showed 7 tk subgraph induced n0 2 vertices m0edges exactly kn0 m0 treepieces lemma 11 strengthens haas result extendinglower range giving construction finds treepieces showing connection1 pebble condition hereditary condition proper tkconclude investigation arbitrary pebble game constructions descriptiondecomposition induced pebble game colorstheorem 2 pebblegamewithcolors decomposition graph g pebblegamegraph admits decomposition k edgedisjoint subgraphs1 0sparse subgraph g contains treepieces 1 0sparsegraphs decompositionproof let g pebblegame graph existence k edgedisjoint 1 0sparse subgraphs shown lemma 10 lemma 11 proves condition subgraphsdirection observe color ci ti treepieces given subgraphspan n ti edges summing colors shows graph pebblegamedecomposition sparse apply theorem 1 complete proofremark observe pebblegame decomposition laman graph readbipartite matching hendricksons laman graph extraction algorithm 9pebble game orientations natural correspondence bipartite matchingsileana streinu louis theranmapsandtrees special case pebblegame decompositions tight graphscycles colors trees rooted corresponding pebblesspanning n 1 edges color forms forest upper rangepebblegame decomposition treepieces condition ensures pebblegame decomposition proper tksection pebble game specialized correspond mapsandtrees proper tk decompositions7 canonical pebble game constructionssection prove main theorems theorem 3 theorem 4 continuing investigation decompositions induced pebble game constructions studying caseminimum number monochromatic cycles created main idea captured lemma 15illustrated figure 6 avoid creating cycles collecting pebblespossible implying monochromatic mapgraphs createdadd kn0 1 edges set n0 vertices lower range impliescolor forest decomposition characterization tight graphs discussedfollows immediately main theorem giving new proofs previous resultsunified frameworkproof use specializations pebble game moves modification addedgecanonical addedge performing addedge cover new edge colorvertices possible highest numbered color presentsecond restriction pebbleslide moves allowcanonical pebbleslide pebbleslide allowed createmonochromatic cyclepebble game construction uses moves canonical sectionpebblegame graph canonical pebble game construction lemma14 lemma 15 canonical pebble game constructions correspond proper tkmapsandtrees decompositions theorem 3 theorem 4begin technical lemma motivates definition canonical pebble gameconstructions shows situations disallowed canonical moves wayscycles form lowest colorslemma 13 monochromatic cycle creation let v v pebble p color cilet w vertex tree color ci v monochromatic cycle colored ci createdexactly following waysm1 edge vw added addedgem2 edge wv reversed pebbleslide pebble p cover reverseedge vwproof observe preconditions statement lemma implied lemma 7lemma 12 monochromatic cycles form pebble color ci removedconnected monochromatic subgraph m1 m2 ways pebblegame construction color edge changes inserted timenew pebble pebbleslidesparsitycertifying graph decompositionsfig 5 creating monochromatic cycles 2 0pebble game type m1 creates cycleadding black edge b type m2 creates cycle pebbleslide verticeslabeled according role definition movesfigure 5a figure 5b examples m1 m2 mapgraph creation movesrespectively 2 0pebble game constructiongraph pebble game construction canonical pebble game construction steps considering cases m1 m2 separately proof gives constructions implement canonical addedge canonicalpebbleslide moveslemma 14 canonical addedge let g graph pebble game construction cycle creation steps type m1 eliminated colors ci 1 00 minkproof addedge moves cover edge color present v w possiblepossible 1 distinct colors present use highest numbered colorcover new edgeremark note upper range repeated color canonicaladdedge moves create cycles upper rangecanonical pebbleslide defined global condition prove obtainclass graphs canonical pebbleslide moves need extend lemma9 canonical moves main step sequence movesreorients path v w sequence canonical movesthinglemma 15 canonical pebbleslide sequence pebbleslide moves leadingaddedge replaced m2 steps allowsaddedgewords possible collect 1 pebbles ends edge addedpossible creating monochromatic cyclesileana streinu louis theranfigure 7 figure 8 illustrate construction proof lemma 15shortcut construction analogy matroid union intersection augmenting pathsprevious work lower rangefigure 6 shows structure proof shortcut construction removes m2 stepbeginning sequence reorients path v w pebbleslidesapplication shortcut construction reorients simple path vertex w0 wpath v w0 preserved shortcut construction applied inductivelysequence moves wantfig 6 outline shortcut construction arbitrary simple path v w curved linesindicating simple paths b m2 step black edge flipped create cycleshown dashed solid gray unique gray tree rooted w solid gray edgesoriginal path c shortened path gray pebble new path follows graytree way time original path touched gray tree w0 path v w0simple shortcut construction applied inductivelyproof loss generality assume sequence moves reorients simplepath h end path m2 m2 step moves pebblecolor ci vertex w edge vw reversed m2 vw contained maximal monochromatic tree color ci tree hi0 observerooted wconsider edges reversed sequence moves notedmoves sketch simple path h ending w let z vertexpath hi0 modify sequence moves follows delete beginningreverses edge yz prepend left sequence movesmoves pebble w z hi0sparsitycertifying graph decompositionsfig 7 eliminating m2 moves m2 b avoiding m2 moving pathpath pebbles indicated doubled linesfig 8 eliminating m2 moves step black pebble doubled pathm2 b avoiding m2 simplifying pathedges change color beginning new sequence eliminatedm2 construction change edges involvedremaining tail original sequence original path left newsequence simple path h meeting initial hypothesisrest lemma follows inductionlemma 14 lemma 15 prove followinglemma 16 g pebblegame graph g canonical pebble game constructioncanonical pebble game constructions identify tight pebblegame graphsmapsandtrees tk graphsileana streinu louis therantheorem 3 main theorem lower range mapsandtrees coincide pebblegamegraphs let 0 k graph g tight pebblegame graph g k mapsandtreesproof observed mapsandtrees decomposition special case pebble gamedecomposition applying theorem 2 mapsandtrees pebblegamegraphreverse direction consider canonical pebble game construction tight graphlemma 8 pebbles left g end constructiondefinition canonical addedge implies pebbleci 1 2 follows exactly colors lemma12 pebbles root monochromatic treepiece n 1 edges yieldingrequired edgedisjoint spanning treescorollary 5 nashwilliams 17 tutte 23 white whiteley 24 let k graphg tight k mapsandtrees decompositionconsider decompositions induced canonical pebble game constructionsk 1theorem 4 main theorem upper range proper treesandtrees coincide pebblegame graphs let k 2k 1 graph g tight pebblegame graphproper tk kn edgesproof observed proper tk decomposition sparse needcanonical pebble game construction tight graph produces proper tktheorem 2 lemma 16 condition treepieces decomposition edgedisjoint trees finally application i4 shows vertexexactly k trees requiredcorollary 6 crapo 2 haas 7 let k 2k 1 graph g tightproper tk8 pebble game algorithms finding decompositionsnave implementation constructions previous section leads algorithm requiring n2 time collect pebble canonical construction worst case napplications construction lemma 15 requiring n time giving total runningtime n3 decomposition problemsection algorithms decomposition problem run timeon2 begin overall structure algorithmalgorithm 17 canonical pebble game colorsinput graph goutput pebblegame graph hmethodset v h v g place pebble color vertices hedge vw try collect 1 pebbles v w pebbleslidemoves described lemma 15sparsitycertifying graph decompositions1 pebbles collected add vw h addedge lemma14 discard vwfinally return h locations pebblescorrectness theorem 1 result 24 sparse graphs independentsets matroid h maximum sized sparse subgraph g constructioncanonical main theorem shows coloring edges h gives mapsandtrees proper tk decompositioncomplexity start observing running time algorithm 17 time takenprocess edges added h om edges added h consider costedge g added hpebble game moves implemented constant time remainsefficient way pebbles use following algorithmsubroutine algorithm 17algorithm 18 finding canonical path pebbleinput vertices v w pebble game configuration directed graph houtput pebble yes configuration h updatedmethodstart depthfirst search v h pebble w stopreturnpebble path v v1 e1 e p1 v p u vivertices ei edge vi vi1 let cei color pebble ei usearray c track colors pebbles vertices edgesarray s sketch canonical path v u finding successoredgeset su end 0 set cu color arbitrary pebble u walk pathreverse order v p e p1 e p2 e1 v1 check cvi setcheck cvi1 ceiset svi ei set cvi cei edgecvi1 6 cei try monochromatic path color cvi1 vi vi1vertex x encountered cx set path vi x1 f1 x2 fq1 xq xmonochromatic color edges set cxi c fi sxi fi1 2 q1 cx c fq1 stop recursively check monochromatic cx path xq1 x procedurefinally slide pebbles path original endpoints v u specifiedsuccessor array sv ssvcorrectness algorithm 18 comes fact implementing shortcutconstruction efficiency comes fact instead potentially moving pebbleforth algorithm 18 precomputes canonical path crossing edge htimes initial depthfirst search twice converting initial pathcanonical follows accepted edges takes time total on2 timespent processing edges hdiscussed explicity algorithm efficient needmaintain components 12 accepted edge components h updatedtime finally results 12 13 rejected edges amortized o1timeileana streinu louis theransummarizing shown canonical pebble game colors solves decomposition problem time on29 important special case rigidity dimension 2 sliderpinningshort section present new application special case practical importancek 2 3 discussed introduction lamans theorem 11 characterizes minimallyrigid graphs 2 3tight graphs recent work slider pinning developedcurrent paper submitted introduced sliderpinning model rigidity 15 20 combinatorially model barslider frameworks simple graphs loopsplaced vertices way 2 loops vertexcolorcharacterize minimally rigid barslider graphs 20 graphs1 2 3sparse subgraphs containing loops2 2 0tight loops includedgraphs 2 0 3gradedtight special case gradedsparsegraphs studied paper 14connection pebble games paper followingcorollary 19 pebble games sliderpinning 2 3pebble game graphreplace pebbles loops obtain 2 0 3gradedtight graphproof follows invariant i3 lemma 715 study special case slider pinning slider verticalhorizontal model sliders precolored loops color indicating x y directionaxis parallel slider case minimally rigid graphs characterized1 2 3sparse subgraphs containing loops2 admit 2coloring edges color forest cyclesmonochromatic tree spans exactly loop colorinterpretation terms colored pebble gamescorollary 20 pebble game colors sliderpinning canonical 2 3pebblegamewithcolors graph replace pebbles loops color obtaingraph minimally pinned axisparallel barslider frameworkproof follows theorem 4 lemma 1210 conclusions open problemspresented new characterization k sparse graphs pebble game colorsefficient algorithm finding decompositions sparse graphs edgedisjoint trees algorithm finds sparsitycertifying decompositions upper rangeruns time on2 fast algorithms recognizing sparse graphsupper range 12pebble game colors new sparsitycertifying decomposition applies entire matroidal range sparse graphssparsitycertifying graph decompositionsdefined studied class canonical pebble game constructions correspondmapsandtrees proper tk decomposition gives new proof tuttenashwilliams arboricity theorem unified proof previously studied decomposition certificates sparsity canonical pebble game constructions relationship1 pebble condition applies upper range matroid union augmentingpaths apply upper rangealgorithmic consequences open problems 6 gabow westermann on32algorithm recognizing sparse graphs lower range extracting sparse subgraphsdense ones technique based efficiently finding matroid union augmenting pathsextend mapsandtrees decomposition on32 algorithm uses subroutinesaugmenting paths cyclic scanning finds augmenting paths time batchscanning finds groups disjoint augmenting pathsobserve algorithm 17 replace cyclic scanning gabow westermanns algorithm changing running time data structures implementation pebble game detailed 12 13 simpler easier implementsupport cyclic scanningmajor open algorithmic problems related pebble gameproblem 1 develop pebble game algorithm properties batch scanning obtainimplementable on32 algorithm lower rangeproblem 2 extend batch scanning 1 pebble condition derive on32 pebblegame algorithm upper rangeparticular practical importance implementable on32 algorithmdecompositions edgedisjoint spanning treesreferences1 berg ar jordn t algorithms graph rigidity scene analysis proc 11theuropean symposium algorithms esa 03 lncs vol 2832 pp 7889 20032 crapo h generic rigidity plane frameworks tech rep 1278 institutrecherche dinformatique et dautomatique 19883 edmonds j minimum partition matroid independent sets j res nat burstandards sect b 69b 6772 19654 edmonds j submodular functions matroids certain polyhedra combinatorialoptimizationeureka shrink 2570 lncs pp 1126 springer 20035 gabow hn matroid approach finding edge connectivity packing arborescencesjournal sciences 50 259273 19956 gabow hn westermann hh forests frames games algorithms matroid sumsapplications algorithmica 71 465497 19927 haas r characterizations arboricity graphs ars combinatorica 63 129137 20028 haas r lee streinu theran l characterizing sparse graphs map decompositions journal combinatorial mathematics combinatorial computing 62 31120079 hendrickson b conditions unique graph realizations siam journal computing211 6584 1992ileana streinu louis theran10 jacobs dj hendrickson b algorithm twodimensional rigidity percolationpebble game journal computational physics 137 346365 199711 laman g graphs rigidity plane skeletal structures journal engineeringmathematics 4 331340 197012 lee streinu pebble game algorihms sparse graphs discrete mathematics3088 14251437 200813 lee streinu theran l finding maintaining rigid components proc canadian conference computational geometry windsor ontario 2005 httpcccgcsuwindsorcapapers72pdf14 lee streinu theran l graded sparse graphs matroids journal universalscience 1310 200715 lee streinu theran l sliderpinning problem proceedings 19thcanadian conference computational geometry cccg07 200716 lovsz l combinatorial problems exercises akademiai kiado northhollandamsterdam 197917 nashwilliams csa decomposition finite graphs forests journal londonmathematical society 39 12 196418 oxley jg matroid theory clarendon press oxford university press new york199219 roskind j tarjan note finding minimum cost edge disjoint spanning treesmathematics operations research 104 701708 198520 streinu theran l combinatorial genericity minimal rigidity scg 08 proceedings twentyfourth annual symposium computational geometry pp 365374 acm new york ny usa 200821 tay ts rigidity multigraphs linking rigid bodies nspace journal combinatorial theory series b 26 95112 198422 tay ts new proof lamans theorem graphs combinatorics 9 365370 199323 tutte wt problem decomposing graph n connected factors journallondon mathematical society 142 221230 196124 whiteley w union matroids rigidity frameworks siam journaldiscrete mathematics 12 237255 1988