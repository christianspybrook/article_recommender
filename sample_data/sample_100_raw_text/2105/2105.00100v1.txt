Data-driven Full-waveform Inversion Surrogate
using Conditional Generative Adversarial Networks
Marcus Saraivaa,c‡ , Avelino Forechib† , Jorcy de Oliveira Netoc‡ , Antônio DelReyc‡ , Thomas Raubera∗

arXiv:2105.00100v1 [cs.LG] 30 Apr 2021

a

Departamento de Informática – Centro Tecnológico
Universidade Federal do Espı́rito Santo
Vitória, Espı́rito Santo, Brazil
∗ thomas.rauber@ufes.br

b

Coordenadoria de Engenharia Mecânica
Instituto Federal do Espı́rito Santo
Aracruz, Espı́rito Santo, Brazil
† avelino.forechi@ifes.edu.br

c

Exploração e Produção
Petróleo Brasileiro S.A.
Vitória, Espı́rito Santo, Brazil
‡ {mvsaraiva, jorcyneto, delrey}@petrobras.com.br
Abstract-In the Oil and Gas industry, estimating a subsurface velocity field is an essential step in seismic processing,
reservoir characterization, and hydrocarbon volume calculation.
Full-waveform inversion (FWI) velocity modeling is an iterative
advanced technique that provides an accurate and detailed
velocity field model, although at a very high computational cost
due to the physics-based numerical simulations required at each
FWI iteration. In this study, we propose a method of generating
velocity field models, as detailed as those obtained through FWI,
using a conditional generative adversarial network (cGAN) with
multiple inputs. The primary motivation of this approach is to
circumvent the extremely high cost of full-waveform inversion
velocity modeling. Real-world data were used to train and test
the proposed network architecture, and three evaluation metrics
(percent error, structural similarity index measure, and visual
analysis) were adopted as quality criteria. Based on these metrics,
the results evaluated upon the test set suggest that the GAN was
able to accurately match real FWI generated outputs, enabling
it to extract from input data the main geological structures and
lateral velocity variations. Experimental results indicate that the
proposed method, when deployed, has the potential to increase
the speed of geophysical reservoir characterization processes,
saving on time and computational resources.
Index Terms-Conditional generative adversarial network
(cGAN), full-waveform inversion (FWI), seismic velocity modeling.

I. I NTRODUCTION
Oil industry applications utilize seismic reflection as a
primary indirect method for investigating the properties of subsurface strata. This method uses a controlled source of acoustic waves and receiver arrays (geophones or hydrophones)
to record the transit time and amplitude of acoustic waves
reflected by contrasting rock type interfaces (Fig. 1).
During seismic acquisition, the same subsurface region is
sampled multiple times from different offsets, resulting in
data redundancy. The vertical projection of this region on the
surface is called the common midpoint (CMP). Sorting the
We thank Petrobras S.A. for providing computational resources and the
data used in this publication.

Fig. 1. Schematic representation of a marine seismic acquisition.

data by CMP, we can then obtain the so-called CMP gathers
(Fig. 2).
To obtain an image of the subsurface area, it is then necessary to process the recorded data (transit time and amplitude
of the reflected acoustic waves). The estimation of an accurate
velocity model is an essential step in seismic processing. This
model is used in several steps of the seismic processing, including seismic migration, normal moveout (NMO) correction,
and time-to-depth conversion.
Seismic migration is a procedure that aims to "migrate"
seismic events to their correct position and collapse reflections
and diffractions, creating a seismic image of the subsurface [1].
NMO correction adjusts all CMP seismic traces to a theoretical
zero offset (source and receiver at the same position) [2].
This procedure enables the use of data redundancy to increase
signal-to-noise ratio through CMP-corrected gather stacking
(Fig. 2). The velocity model is also important for time-to-depth
conversion, a necessary step for reservoir characterization and
oil volume estimation [3].

Fig. 2. a) Schematic representation of normal moveout correction; b) Process
of stacking a synthetic CMP gather after normal moveout correction to
improve the signal-to-noise ratio (Adapted from [4]).

Complex geological settings such as salt domes and folded
or faulted regions require detailed velocity models in order to
form a satisfactory seismic image. Currently, velocity modeling using full-waveform inversion (FWI) is an advanced technique providing an accurate and detailed velocity model [5].
In this paper, we present a method using an image-to-image
translator (pix2pix) [6] based on a conditional generative
adversarial network (cGAN) to translate an input (post-stack
seismic image, average tomographic velocity, and two-way
time grid) into an interval velocity model as detailed as FWI.
A. Seismic data and velocity model
The primary outcome of 3D seismic processing is a seismic image volume. Seismic volume slices in the acquisition
direction are conventionally referred to as inlines, slices perpendicular to the acquisition direction as crosslines, slices
perpendicular to the vertical axis as time slices, and a vertical
sample vector as a seismic trace (Fig. 3).

Fig. 3. 3D representation of seismic image and main slicing directions: inline
(parallel to seismic acquisition direction), crossline (perpendicular to seismic
acquisition direction) and time slice (perpendicular to vertical axis). The red
line shows a seismic trace (vertical sample vector).

Seismic volume is among the most important inputs to characterizing hydrocarbon reservoirs. After the data's correlation
with well logs, it is possible to map the main seismic horizons
and delimit the top and bottom of hydrocarbon reservoirs.
A typical workflow for seismic velocity estimation consists
of three steps, as follows.
1) Normal moveout (NMO) velocity estimation is performed by manually picking velocities that best horizontalize hyperbola reflections on CMP gathers (Fig. 4).
This process returns a very smooth average NMO velocity model that can be approximated by a root mean
square velocity for small offsets.
2) Ray-based or grid tomography is an iterative technique
using seismic reflection's travel time measurements and
associated amplitudes to calculate seismic velocity [7].
Seismic tomography delivers a low-frequency seismic
acoustic velocity model, typically up to 2–3 Hz, and
commonly takes the NMO velocity as the first input.
3) Full-waveform inversion (FWI) is a seismic inversion
technique, initially proposed by [8] and [9], using prestack seismic data (raw data from seismic acquisition)
to output a detailed interval velocity model.
FWI takes an initial low-resolution velocity model as input
to generate synthetic pre-stack seismic data by wave equation
numerical modeling. This synthetic model is then compared
with real data from seismic acquisition. FWI iteratively updates this velocity model in order to minimize the difference
between real and synthetic data (Fig. 5).
As FWI is performed with pre-stack seismic data (up to
three orders of magnitude greater than the traditional seismic
volume), it becomes computationally expensive and timeconsuming. The use of this technique has only become industrially feasible in recent years, with an increase in processing
power, although the theory was established in the 1980s [8],
[9].

Fig. 4. Normal moveout velocity picking. The line passing by the red spots
on the central image was manually selected to define the velocity that best
horizontalize the reflections at the CMP gather (adapted from [10]).

Fig. 5. FWI modeling: a) Real seismogram compared with synthetic seismogram generated from the initial velocity model and b) Real seismogram compared
with synthetic seismogram generated from the final velocity model (From [11]).

Building an FWI velocity model may require from three
months up to a year of construction, depending on the seismic acquisition size and geological subsurface complexity.
Theoretically, FWI can estimate a high-resolution velocity
model using as initial input a very smooth velocity model. In
practice, to support the convergence and reduce the number
of iterations, it is conventional to take a tomographic velocity
model as input.
The FWI velocity model fills the gap between lowfrequency tomographic velocity model and the seismic reflection image volume (Fig. 6), increasing the useful data
bandwidth.
B. Generative Adversarial Networks (GAN)
Convolutional neural networks (CNN) are getting more
and more popular in geophysical applications, typically in
classification and segmentation tasks [12], [13], [14], [15],
and [16]. Moreover, recent studies have demonstrated the
feasibility of geophysical modeling using CNNs [17], [18],
and [19].

Among CNN architectures, generative adversarial networks
(GAN) go beyond traditional classification and segmentation
tasks; GANs stand out for their ability to learn how to mimic
data provided to them by capturing their statistical and spatial
distributions [21].
GANs are generative models that learn to generalize a rule
of how to transform a random noise vector z to output image y
(G : z → y) [21]. The pix2pix GAN architecture, proposed by
[6] and adopted in this paper, is a conditional GAN (cGAN),
which has as its input the sum of the random noise vector z
with an image x, to find a rule of how to translate this input
to image y (G : {x, z} → y).
To accomplish this task, pix2pix uses two networks competing against each other. While one network generates synthesized images (a generator), the other network judges whether
these images are valid (a discriminator). Generator G is trained
to produce output images that are indistinguishable from the
actual images by a discriminator D, which in turn is trained
to improve its performance on detecting the generator's fake
images.
In cGAN, the generator output y is connected directly to the
discriminator input, together with the image x. Through the
backpropagation process, discriminator classification in real or
fake images provides a signal for the generator to update its
weights and bias, thus improving performance. The objective
function of a cGAN can be expressed by (1).


LcGAN (G, D) = Ex,y log D(x, y) +


Ex,z log(1 − D(x, G(x, z)) ,

(1)

where the generator G tries to minimize this objective
function against an adversarial discriminator D that tries to
maximize it (2).
Fig. 6. Simplified representation of the information gap between tomographic
velocity model and seismic reflection image volume. FWI velocity model fills
this gap (Adapted from [20]).

G∗ = arg min max LcGAN (G, D).
G

D

(2)

Previous work [22] shows that L1 regularization is beneficial to this process, helping the generator G to create sharper
images (3).
LL1 (G) = Ex,y,z

h

y − G(x, z)

i
1

.

(3)

Thus, the final objective function for the pix2pix conditional
GAN used in this work is (4).
G∗ = arg min max LcGAN (G, D) + λLL1 (G).
G

D

(4)

Many image processing problems involve transforming one
image into another. These problems are often addressed using
algorithms specific to each situation. Conditional GANs are
a general solution with good performance on a variety of
problems [6]. Fig. 7 shows some generic examples using
pix2pix cGAN.
II. M ATERIALS AND M ETHODS
A. Data
From a marine seismic acquisition of approximately
680 km2 in the Campos Basin, Brazil, we used four seismic
volumes:
• Post stack seismic image
• Average tomographic velocity
• Two-way time (TWT) grid
• FWI interval velocity
We loaded the data, originally in seg-y format, as a 3D
matrix in a Python environment using the Segyio library [23].
The shape of each matrix was 1451 × 3001 × 751, where the
x and y samples were spaced 12.5 m apart and z samples
spaced every 0.004 s.
Preprocessing involved limiting data variability in two
standard deviations to eliminate outliers, partially cropping
regions without reflections (sea water thickness), and later
data normalization using a global maximum and minimum as
parameters (5).
Xnorm =

X − Xmin
.
Xmax − Xmin

We divided the data into training and test sets at a ratio of
70% to 30%, respectively (Fig. 8). For the training set, we
randomly sampled 2000 patches (512 × 512). For the test set,
we randomly sampled 800 patches (512 × 512), both in the x
direction (direction of acquisition).
The post-stack seismic image, average tomographic velocity, and TWT grid were combined to form a three-channel
image. The training pair was composed of this image and the
FWI interval velocity (Fig. 9).
B. Network
We used the pix2pix conditional GAN implemented in
Pytorch with the UNet [24] as a generator and PatchGAN
[6] as the discriminator counterpart.
UNet is an encoder–decoder architecture with skip connections, and PatchGAN is a special type of classifier network
subdividing the image into 70 × 70 patches and classifying
each of them as real or fake (Fig. 10). The GAN loss is
the average loss of all patches. This strategy focuses on the
high frequency of the image data, whereas the low-frequency
content is captured by L1 loss.
C. Experiments
All experiments were performed using an HP Z8 workstation with a 24 GB memory Quadro P6000 GPU. We began
the experiment using only seismic images and associated FWI
velocity as a training pair, but the generator produced artificial
high frequency structure images with artifacts (Fig. 11). We
conclude that seismic images alone did not provide enough
information for the network to converge.
To obtain better results, we added two additional channels,
the average tomographic velocity and the TWT grid, resulting
in a three-channel input image (Fig. 9).
Although the tomographic interval velocity was inaccurate,
it provided a reliable average velocity. Hence, we used average velocity rather than interval velocity. TWT information
supported the network in better estimating spatial positions
after we extracted the patches randomly, once there is a direct
relation between velocity and overburden thickness.

(5)

Fig. 7. Examples using pix2pix GAN: aerial photos to maps, edges to photos,
day to night, and gray scale to color (Adapted from [6]).

Fig. 8. Seismic volume showing the spatial distributions of training and test
sets.

Percent error is a common metric for quality control in
seismic processing; it is defined as (6).
PE =

N
1 X y(i) − y 0 (i)
∗ 100.
N i=1
y(i)

(6)

SSIM is a composite index (7) measuring the similarity
between two signals based on a comparison of their mean
(8), variance (9), and correlation coefficient (10).
SSIM(y, y 0 ) = f (l(y, y 0 ), c(y, y 0 ), s(y, y 0 )),

l(y, y 0 ) =

2μy μy0 + C1
,
μ2y + μ2y0 + C1

(8)

c(y, y 0 ) =

2σy σy0 + C2
,
σy2 + σy20 + C2

(9)

σyy0 + C3
,
σy σy0 + C3

(10)

s(y, y 0 ) =

Fig. 9. Three channels combined input and FWI velocity patches producing
a training pair.

Our assumption was that the tomographic average velocity
and the TWT grid would function as boundary conditions,
helping the network converge to the right interval velocity.
The training time for each experiment was approximately four
hours.
The generator and discriminator were trained using the
same learning rate (lr = 2 × 10−5 ) which was established
empirically, based on the visual quality of the training set
results. We used the stochastic gradient descent method and
the Adam solver with momentum parameters β1 = 0.5 and
β2 = 0.999. The L1 multiplier λ was set to 100.
The results were evaluated based on three criteria: visual
analysis, percent error (PE), and structural similarity index
measure (SSIM) [25].

Fig. 10. Schematic representation of the pix2pix network architecture.

(7)

where C1 , C2 , and C3 are constants to avoid division by
zero. Setting C3 = C22 , we obtain the SSIM equation (11).
SSIM(y, y 0 ) =

(2μy μy0 + C1 ) + (2σyy0 + C2 )
.
(μ2y + μ2y0 + C1 )(σy2 + σy20 + C2 )

(11)

III. R ESULTS
Our pix2pix GAN approach produced an accurate velocity
model using three channels (post-stack seismic image, average
tomographic velocity, and two-way time) as input (Fig. 12).
The chosen metrics show excellent results on the test set.
The average percent error was 1.5%, average SSIM was
0.994, and the generated velocity was visually identical to the
FWI velocity, without artifacts, verifying that the geological
structures were incorporated into the GAN velocity model.
The two distributions are very close, confirming the metric
results (Fig. 13).
The criterion to stop training was set by visual analysis of
the training set results and later confirmed using the percent
error and the SSIM results based on the test set. Both metrics
stabilized between 60 and 80 epochs (Fig. 14 and Fig. 15).

Fig. 11. FWI velocity compared with one channel GAN velocity.

Fig. 12. FWI velocity, GAN velocity, percent error, and SSIM map over three representative patches (shallow, intermediate, and deep regions from top to
bottom, respectively).

Fig. 13. FWI and GAN velocity distributions of test set.

Unexpectedly, the one-channel model experiment showed
satisfactory SSIM and PE results when compared with the
three-channel model, although the visual analysis showed very
poor results.
Shallower regions presented better results than deeper regions on all metrics (Fig. 12).
IV. D ISCUSSION
Previous works [26] demonstrated the feasibility of using
CNNs for one-dimensional (1D) synthetic seismic inversion,

and [27] used CNNs to perform seismic inversion with synthetic pre-stack seismic data. Conditional unpaired CycleGANs [28] were employed to perform forward and inverse
seismic modeling with post-stack seismic data and velocity
models, while also using synthetic data with a single input
channel (post-stack seismic image). They achieved only qualitatively moderate results. GANs were also used to generate
prior models to constrain solutions in the traditional FWI
algorithm [29].
In this study, we apply a conditional pix2pix GAN to
generate highly accurate velocity models using real post-stack
seismic data with multiple inputs.
Neural networks are understood to perform better at interpolation than extrapolation tasks [30], [31]; therefore, it is
challenging for a cGAN to extrapolate to lower frequencies
using only the post-stack seismic image as input. However, it
becomes easier to interpolate the missing frequencies (Fig. 6)
if we combine lower frequency data as input (in this case,
average tomographic velocity and TWT grid). This explains
why adding more information helped to improve the results.
Providing a TWT grid and the average tomographic velocity
enabled a depth estimation for each sample, which is useful
information for estimating the interval velocity as it increases
with depth.
Ordinary physics-based FWI provides better results in shallower regions, where the acquisition cables have sufficient
length to capture diving waves [32] and worse results in

3 channels input
1 channel input

Percent error (%)

7
6
5

V. C ONCLUSIONS
4
3
2

0

10

20

30

40
Epoch

50

60

70

80

Fig. 14. Percent error versus epochs using test set.
1.00
0.994

0.95

0.992
0.90
SSIM

GANs are normally difficult to train, they are prone to
reduce the output variability or a complete mode collapse [35].
Different architectures such as Variational Autoencoders and
Autoencoder with perceptual loss need to be tested in order
to avoid such problems.

0.990
0.988

0.85

0.986
0.80

20

40

0.75

60

80

3 channels input
1 channel input

0.70
0

10

20

30

40
Epoch

50

60

70

80

Fig. 15. SSIM versus epochs using test set.

deeper regions. As expected, the pix2pix GAN captured this
inaccuracy and also produced worse results in deeper regions
(Fig. 12).
The L1 regularization loss acts as a global metric, minimizing the average loss of all pixels, whereas the GAN
loss, provided by the PatchGAN discriminator, focuses on
high-frequency structures. We suspect that the reason the
experiment using one channel presented good PE and SSIM
values was that the generator produced a velocity field that
honors the low frequency associated to average velocity (good
PE) and the high frequency variations (good SSIM), however
producing poorly accurate visual results. This result reveals
the difficulty of finding reliable metrics for evaluating GANs
[33].
The major threat to the method is the usage of poor-quality
training data. Despite the robustness of FWI velocity modeling, examples where FWI could not converge to an acceptable
velocity model because of seismic acquisition limitations and
low signal-to-noise ratio are common [34]. If this data were
used to train the model, the pix2pix cGAN will also produce
a poor-quality velocity model.

We have presented a method, based on a pix2pix conditional
GAN with multiple input, that can be used to surrogate FWI
velocity modeling. The three inputs (post-stack seismic image,
average tomographic velocity, and TWT grid) were vital, as the
experiment using only one channel (post-stack seismic image)
failed.
Further development of new network architectures focused
on seismic data particularities and considering three or more
spatial dimensions may generate an improvement in the quality
of our results.
The test data presented excellent results based on PE,
SSIM, and visual analysis. The main geological structures and
lateral velocity changes were captured by the resulting velocity
model.
Once we train the GAN, it was really fast the generation
of a FWI interval velocity model surrogate, almost real time.
Therefore, our proposed method can replace the FWI modeling
or providing an initial velocity model that will need fewer
iterations to converge during traditional FWI, similar strategy
adopted by [36]
A fair comparison between the FWI and our cGAN surrogate model should consider the implementation of the FWI
algorithm in parallel, using GPU hardware. Although some
papers have proposed GPU implementations of the FWI algorithm [37], [38] and [39], they only used 2D synthetic data,
mainly due to GPU memory constraints. At present, FWI
algorithm processing on GPU hardware has yet to become
industrially feasible.
The proposed method, when deployed, has the potential to
speed up geophysical reservoir characterization processes, saving time and reducing computational resource requirements.
R EFERENCES
[1] J. Gazdag and P. Sguazzero, "Migration of seismic data," Proceedings
of the IEEE, vol. 72, no. 10, pp. 1302–1315, 1984.
[2] O. Yilmaz, Seismic Data Analysis: Processing, Inversion, and
Interpretation of Seismic Data. Society of Exploration Geophysicists,
01 2001. [Online]. Available: https://doi.org/10.1190/1.9781560801580
[3] P. Schultz, The seismic velocity model as an interpretation asset.
Society of Exploration Geophysicists, 1998.
[4] G. Liu, S. Fomel, L. Jin, and X. Chen, "Stacking seismic data using
local correlation," Geophysics, vol. 74, 2009.
[5] S. Kapoor, D. Vigh, H. Li, and D. Derharoutian, "Full waveform inversion for detailed velocity model building," in 74th EAGE Conference
and Exhibition incorporating EUROPEC 2012. European Association
of Geoscientists & Engineers, 2012, pp. cp–293.
[6] P. Isola, J.-Y. Zhu, T. Zhou, and A. A. Efros, "Image-to-image translation
with conditional adversarial networks," 2018.
[7] I. Jones, "Tutorial: Velocity estimation via ray-based tomography," First
Break, vol. 28, 2010.
[8] P. Lailly, "The seismic inverse problem as a sequence of before stack inversions," in Conference on Inverse Scattering–Theory and Application,
vol. 11. Siam, 1983, p. 206.

[9] A. Tarantola, "Inversion of seismic reflection data in the acoustic
approximation," Geophysics, vol. 49, pp. 1259–1266, 1984.
[10] Madagascar Development Team, Madagascar Software, Version 1.4,
http://www.ahay.org/, 2012.
[11] J. Virieux, A. Asnaashari, R. Brossier, L. Métivier, A. Ribodetti, and
W. Zhou, "An introduction to full waveform inversion," in Encyclopedia
of exploration geophysics. Society of Exploration Geophysicists, 2017,
pp. R1–1.
[12] Z. Geng and Y. Wang, "Automated design of a convolutional neural
network with multi-scale filters for cost-efficient seismic data classification," Nature Communications, vol. 11, 2020.
[13] W. Xiong, X. Ji, Y. Ma, Y. Wang, N. M. AlBinHassan, M. N. Ali, and
Y. Luo, "Seismic fault detection with convolutional neural network,"
Geophysics, vol. 83, 2018.
[14] Y. Shi, X. Wu, and S. Fomel, "Saltseg: Automatic 3d salt segmentation
using a deep convolutional neural network," Interpretation, vol. 7, 2019.
[15] X. Wu, L. Liang, Y. Shi, and S. Fomel, "Faultseg3d: Using synthetic
data sets to train an end-to-end convolutional neural network for 3d
seismic fault segmentation," Geophysics, vol. 84, 2019.
[16] A. B. Guazzelli, M. Roisenberg, and B. Rodrigues, "Efficient 3d
semantic segmentation of seismic images using orthogonal planes 2d
convolutional neural networks," 2020 International Joint Conference on
Neural Networks (IJCNN), pp. 1–8, 2020.
[17] Y. Ren, X. Xu, S. Yang, L. Nie, and Y. Chen, "A physics-based neuralnetwork way to perform seismic full waveform inversion," IEEE Access,
vol. 8, pp. 112 266–112 277, 2020.
[18] B. Moseley, A. Markham, and T. Nissen-Meyer, "Solving the wave
equation with physics-informed deep learning," arXiv: Computational
Physics, 2020.
[19] R. Zhang, Y. Liu, and H. Sun, "Physics-guided convolutional neural
network (phycnn) for data-driven seismic response modeling," ArXiv,
vol. abs/1909.08118, 2019.
[20] J. F. Claerbout, Imaging the earth's interior.
Blackwell scientific
publications Oxford, 1985, vol. 1.
[21] I. J. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley,
S. Ozair, A. C. Courville, and Y. Bengio, "Generative adversarial nets,"
in NIPS, 2014.
[22] D. Pathak, P. Krähenbühl, J. Donahue, T. Darrell, and A. A. Efros, "Context encoders: Feature learning by inpainting," 2016 IEEE Conference
on Computer Vision and Pattern Recognition (CVPR), pp. 2536–2544,
2016.
[23] Equinor. segyio documentation. [Online]. Available: https://segyio.
readthedocs.io/en/latest/index.html
[24] O. Ronneberger, P. Fischer, and T. Brox, "U-net: Convolutional networks
for biomedical image segmentation," ArXiv, vol. abs/1505.04597, 2015.
[25] Z. Wang, A. C. Bovik, H. R. Sheikh, S. Member, E. P. Simoncelli, and
S. Member, "Image quality assessment: From error visibility to structural
similarity," IEEE Transactions on Image Processing, vol. 13, pp. 600–
612, 2004.
[26] V. Puzyrev, A. Egorov, A. Pirogova, C. Elders, and C. Otto, "Seismic
inversion with deep neural networks: A feasibility analysis," in 81st
EAGE Conference and Exhibition 2019, vol. 2019, no. 1. European
Association of Geoscientists & Engineers, 2019, pp. 1–5.
[27] Y. Wu, Y. Lin, and Z. Zhou, "Inversionnet: Accurate and efficient seismic
waveform inversion with convolutional neural networks," Seg Technical
Program Expanded Abstracts, 2018.
[28] L. Mosser, W. Kimman, J. Dramsch, S. Purves, A. D. L. Fuente, and
G. Ganssle, "Rapid seismic domain transfer: Seismic velocity inversion
and modeling using deep generative neural networks," ArXiv, vol.
abs/1805.08826, 2018.
[29] L. Mosser, O. Dubrule, and M. J. Blunt, "Stochastic Seismic
Waveform Inversion Using Generative Adversarial Networks as a
Geological Prior," Mathematical Geosciences, vol. 52, no. 1, pp. 53–
79, jan 2020. [Online]. Available: http://arxiv.org/abs/1806.03720http:
//link.springer.com/10.1007/s11004-019-09832-6
[30] E. Barnard and L. Wessels, "Extrapolation and interpolation in neural
network classifiers," IEEE Control Systems, vol. 12, pp. 50–53, 1992.
[31] K. Xu, J. Li, M. Zhang, S. Du, K. Kawarabayashi, and S. Jegelka,
"How neural networks extrapolate: From feedforward to graph neural
networks," ArXiv, vol. abs/2009.11848, 2020.
[32] W. Zhou, R. Brossier, S. Operto, and J. Virieux, "Full waveform
inversion of diving & reflected waves for velocity model building with
impedance inversion based on scale separation," Geophysical Journal
International, vol. 202, pp. 1535–1554, 2015.

[33] A. Borji, "Pros and cons of gan evaluation measures," Comput. Vis.
Image Underst., vol. 179, pp. 41–65, 2019.
[34] G. Yao, D. Wu, and S.-X. Wang, "A review on reflection-waveform
inversion," Petroleum Science, vol. 17, no. 2, pp. 334–351, 2020.
[35] T. Salimans, I. Goodfellow, W. Zaremba, V. Cheung, A. Radford,
and X. Chen, "Improved techniques for training gans," arXiv preprint
arXiv:1606.03498, 2016.
[36] A. W. Senior, R. Evans, J. Jumper, J. Kirkpatrick, L. Sifre, T. Green,
C. Qin, A. Žı́dek, A. W. Nelson, A. Bridgland et al., "Improved protein
structure prediction using potentials from deep learning," Nature, vol.
577, no. 7792, pp. 706–710, 2020.
[37] B. li Wang, J. Gao, H. Zhang, and W. Zhao, "Cuda-based acceleration
of full waveform inversion on gpu," Seg Technical Program Expanded
Abstracts, 2011.
[38] J. Mao, R. shan Wu, and B. Wang, "Multiscale full waveform inversion
using gpu," Seg Technical Program Expanded Abstracts, 2012.
[39] J. Fang, H. Chen, H. Zhou, Y. Rao, P. Sun, and J. Zhang, "Elastic
full-waveform inversion based on gpu accelerated temporal fourth-order
finite-difference approximation," Comput. Geosci., vol. 135, p. 104381,
2020.

