quantum machine learning squidjakub filipek1 shihchieh hsu2 alessandro roggero34 nathan wiebe5621 paulg allen school science engineering university washington seattle wa 98195 usaphysics university washington seattle 98195 usa3 institute nuclear theory university washington seattle wa 98195 usa4 inqubator quantum simulation iqus department physics university washington seattle wa 98195 usa5 university toronto department science toronto m5g 1v7 canadaarxiv210500098v1 quantph 30 apr 20212 department6 pacificnorthwest national laboratory richland wa 99352 usaapril 30 2021classical counterparts hard potential performance benefits main driver quantumenhanced machine learning believe ease comparison classical machine learningpriorities fieldsecond approach classically preprocess datafit limited space defining quantum model 8 approach allowsdirect comparison classical performancedata requires factor impactpreprocessing performance algorithmsrequires scientists carefully prepare experimentsunfair advantages quantum classical algorithms lastly studies usepreprocessing additional overheadcomparing different quantumenhanced approachesperforming metaanalysis fieldcombat issues propose standardizedapproach designing hybrid quantum classicalmodels similarly tensorflow 9 pytorch 10 changed classical machine learning fieldincreased reproducibility efforts propose scaledquantum identifier squid extensibleframework incorporate quantum modelsbased pytorch benefitsmature framework comes purely classical architectures quantum models providestandardized model design user implementforward backpropagation functionspreprocessing algorithmsstandard applications approaches makingdirectly comparable reduces overhead new researchers significantly reducescoding required experiment mixworlds resembles quantuminspired algorithms 1 benefit pointsarticle organized following manner section 2 oultine framework designrelevant internal details section 3 examwork present scaled quantum identifier squid opensource framework exploring hybrid quantumclassical algorithms classification problems classical infrastructure based pytorchprovide standardized design implementvariety quantum models capabilitybackpropagation efficient trainingpresent structure framework provide examples squid standardbinary classification problem popularmnist dataset particular highlightimplications scalability gradient based optimization quantum models choiceoutput variational quantum models1 introductionquantum machine learning qml rapidly growing emerging field diverse set ideas applications significant differencesapplications machine learningquantum computing applied quantumenhancedmachine learning dominant subfields 13 main benefits algorithmspotential quantum speedups 4 5 potentialrecognizing statistical patterns hard learnpurely classical schemes 6machine learning algorithms neartermquantum devices face issue constrained resourcesexist encodings efficiently use qubitsallow load datasets mnistquantum memory additionally introducing overhead encoding decoding informationclassical quantum devices counter issueresearchers approachesuse synthetic small datasetslearned efficiently 7 makes benchmarks artificial comparisonple application model mnist datasetstudy impact including information single vs available output qubits usesquid helpers package possible future extensions sec 4 finally section 5 providesummary perspective2 squid frameworkmain goal designing squid proposeframework classical quantummachine learning work concert solve classification problem properly utilizing classical computingpossible great importance quantumclassical models data differentadvantages disadvantages architecturalperspective key innovation squid allowsclassical neural networks globally trainedconjunction quantum neural network build optimal encoders decoders classical inputsquantum outputs hybrid neural networkability allows effect learn feature mapallows represent large quantum datasetsnear term devices allows incorporateclassical information known prioriquantum modelproceeding detailed descriptionmodel important work like hybridizesquantum classical models discusscorrespondence quantum classical machine learning models implicitly assumecases assume general training dataset contains classical vector quantumstates following formstrain vclass j vquant ji j 0 ntrainfigure 1 squid model architecture shows current implementation simplified version b iin 0nodes thought neurons classical machine learning quantum state vectors edges representtransformations applied states typically involve trainable weights casequantum model perform set transformations definedincoming data inputs quantum model vclassparticular define input state quantumrotations appliedinput state wv quantum model performmeasurement state md return classical amplitudeestimates vout b contains planned future extensionquantum features allowed passedally follows design principles set pytorch 10 currently competing quantum sdks 1113 include python interfacessuccessful qml package allow simple extensible solution adjusted specific sdksquid enables providing general classes similar nnmodule pytorch quantumclassical models satisfy minimal requirements functions backend mainmodelproperly propagate gradient combinationsmodelsassume classical bitencoding meaningassume vclass j rd typicalsetting machine learning possibleenvision actual training vectors distributions d symbols classical values vclassgiven probabilities drawing symboldistribution implicitly assumequantum data vquant ji provided amplitudeencoding mean values training vectors stored amplitudes vquant jistate choice general setting assume subsumescase quantum training vectors corresponddistinct quantum bit strings known bitencodingsquid framework designed extensibility simplicity core principles gener21 framework designmain component squid mainmodelaccepts smaller modelsmodels currently enforced classicalmiddle quantum classical casemodels classical mainmodel equivalentpytorchs nnsequential subcomponentscomplete framework shown graphicallyfig 1 detailed relations modelsensemble described following subsections22 propagating main modelalgorithm 1 backpropagationmain modelinput main model m loss l torch tensorlet m1 m2 m3 refer respectively encoderquantum model decoder mlbackwardm2 quantumlet g23 gradient l respectinput m3 pytorchprovidedlet g12 gradient l respectinput m2 achieved passing g23userprovided backward functionm2 modellet o12 output m1 inputm2 saved forward iterationlet l0 sum elements g12 o12l0 backwardendcalling model calling forward functionexactly pytorchs forward passdifference middle model quantumconversion tensors numpy arrays 14required reason choosing numpy arrayspassed quantum model factqml packages accept input factprefer standard pythonic listsbackward function offers major modification user comparison pytorchrequired called explicitly user classicalmodels standard pytorch backpropagation autogradexact gradients calculated casequantum model middle automaticgradient propagation stops end secondquantum model conversion tofrom numpy forward pass squid usesbackward function provided implementationquantum model updates parameters stored model provides gradientrespect output encoderconversion numpy array pytorch tensorbackward requires create fake lossuse propagate gradients backwardbackpropagation given encoder forward output o12gradient global loss respect output g12provided quantum model describeddefine fake loss l0l0 o12 g12o12ij g12 ijalgorithm 2 quantum modelinput number qubits n vector mdesired numberquantum parametersoutputs q1 1 2construct unitary operation correspondingquantum circuitmeasure q1 output probabilities pk circuituse parametershift rule totalnc min 2n m 2q1 m 1 circuitsestimate q1 m dimensional gradients gkwoutput returns resultp gradgkwl0 o12 g12g12 ijo12ijcomplexity gradient calculation especially relevant gradients propagatedquantum model require statistical samplingquantum technique amplitude estimationevaluate 1517 provide complexity analysis aim bounding scalingnumber quantum operations needed ensuregradients yielded algorithm 2 accuratebounded error ensuring errormean gradient computation detailedalgorithm 2 outputs estimate gradient geg ge2let consider montecarlo estimate gradient algorithm generating estimateinvolves measuring expectation value gradient expectation value evaluatedhadamard tests estimate component gradient appendix empirical frequencymeasurements unbiased estimate probability ge estimate returnscalculation pytorch backwardl0 propagates gradientautograd gradients respectmain models parameters calculated clarityprocess shown algorithm 1worth mentioning pytorch builtinautograd procedure pytorch lossexample section 3 cross entropy losssimilarly optimizer main caveatoptimizers parametersdefined quantum model userabsolute control updating overheadoptimizer implementation falls user23 complexity gradient evaluationcrucial question needs evaluated assesspracticality qml algorithm quantumprotocolg eeg 2 0finally application chernoff bound showswish error probability1 repeat experiment logarithmicnumber times use majority voting estimateupdated parameters resultsq1 m 2 2q1 m 2 2log11n om different parameters q1 outputsyielded quantum modelge22egk2 2g gek gek 2gk 5odenotes asymptotic upper boundpolylogarithmic multiplicative factors suppressedfuture faulttolerant quantum devicepossible obtain quadratic speedup mcost longer circuit depth 15 18variance sum sum variancessample mean estimatesprobability means n samplespointgk24 available classical modelsvgkbuiltin classical models linear convolutional accept arguments specify numbers neurons layer activation functionsclassicalmodel subclassnnmodule pytorch straightforwarduser implement model recommended configuration files squid helpersutilized sec 41mean square error ge2q1 mq1 mmaxnote variances small numbersamples required reducedmarkovs inequality number samples neededestimate gradient error probabilitygreater 23 simply given 3 timesestimate eq 7learning rate gradient ascenterror quantum parameters quantifiedeuclidean distance probability greater23 denote error introduced noisy estimator ge parameterupdateeij1 hjj1 hjeie25 available quantum modelssection provide details implementation quantum models squid approachfollow preliminary study constructgeneral models given set qubits expressing quantum circuits layers structured operations acting nearestneighbors allowsgenerality direct connection realworldimplementations nearterm devices limited connectivity despite choice framework generaleasily extended accommodate quantummodels different structurecommon construction variational quantumclassifier 6 7 19 start consideringencoding input ddimensional feature vectorv 0 1d quantum state register containing n dlog2 qubit introducing encodingunitary operationk k2 induced euclidean norm generatorshj squid sec 25 unit normallows bound errorv v 0ifollows fact errorpk eooutput probabilities p satisfies pkvalue n needed ensure maximumerror pk single step gradient ascentprobability 23 obeysq1 m 2 2n o0i reference state computational basisencoded state modified actingsecond unitary wv defined terms set nvvariational parameters 0 nv final statequantum register right measurementv wv we v 0i 13v wvoutput quantum models considerprobabilites measuring computational basis states stateestimated collecting statistics large numbercircuit executions given number possible outcomes scales exponentially register sizesmall subset probabilities tipically selected orderoverall scheme scalabledecomposition total unitary operationmapping 0i function encoding unitary variational unitary wv artificial necessarily lead efficientscheme especially true squid framework classical network devoted optimallydetermine encoding classical data quantum state approach squid consider instead m dimensional output classical encoder parameters describing global unitary w quantum register artificially distinguishing encoding parameters variational parameters hibridization standardapproach described completely generalglobal network adjust effectively reproducefactorized form w wv measurableadvantage data analysisnote generic unitary operation n qubitsdepend 4n 1 parameters implies need choose m 4n 1output classical encoder practicelimitation unitary operations decomposed efficiently polynomial numberqubit operations depend polynomially large number parametersexploratory study use simplegeneral parametrization w terms qubitunitary uk1 qubit unitary ujkparametrized 3 real parameters taking values0 unitary u1 writtenactly represented following circuit 20 21u01 0 0 0u11 1 1 1u01 2 2 2u11 3 3 3requiring 1 application u014 applications uk1qubit 0 1 total 15 parametersconstruction readily extended larger systemsappliedinterleaving layers uk1 layers ujkalternatively odd partitions instance4 qubits consider circuits following formu01u11u21u31u01u23u01u11u21u12u11u21u31u01u23u01u11u21u31note costruction didnt includesinglequbit operations u 1layer allows remove redundancy parameters replace product u 1 operationssingle u 1 simplification results enhancedstability training3 example applicationsinitial application framework presentresults binary classification mnistdatabase 22 digits 3 7 standard benchmark classification algorithms analysis quantum model possible abilitysquid compress input features dataappropriate dimensionsinput feature vectors dataset real vectors dimension 784 representing grayscale 28 28pixel picture section compare resultsobtained architecture displayed fig 2 composed single layer encoder m0 units blackbox classifier specified single layerdecoder m1 units classical blackbox classifier section consists simple single layernetwork 2 units panel b fig 2m1 2 output following subsectionsconsider different implementations quantumclassifiers general structure displayed panelc figurecalculations classical quantum presented section obtained adam optimizer implemented pytorch hyperparameters reported tab 1 case useuk1 exp iyk exp izk exp iyk 14recognize parameters euler angles y zy decomposition expressionzk yk denote pauli z matrix y matrixqubit k denote xk similarly follow2ing twoqubit unitary ujkactin qubit pairj k instead definedujkeixj xk iyj yk izj zku01usefulness choices comes possibility represent generic unitary applying appropriately layers uk1 uk2 operations instancegeneral su 4 transformation 2 qubits ex5accuracy0995099median accuracy90 boundary val90 boundary train0985210410number parametersepochs100learning rate00001train size9916098809920996accuracyfigure 3 results accuracy achieved mnistclassical model described text panel shows accuracy function number parameters modelgreen solid circles sets points location 90 accuracy percentile validationset red squares training set blue diamonds panelsb c histogram achieved accuraciessmallest m0 3 largest m0 60 models respectivelyfigure 2 pictorial representation hybrid classifier modelmnist classification panel shows completenetwork including encoder m0 units decoderm1 units panel b shows implemented classical classifiercomposed units panel c shows schematicquantum models input parameters coming encoderdetermine unitary w output obtainedmeasurement qubitsbatch sizebootstrap runsbootstrap runsktot order understand point betterleft panels estimated histograms accuracyreached set 48 bootstrap runs smallestclassical model panel b largest model panelc expected results main paneldensity locationlarger models tails importantnote dispersion accuracymedian reported main panel fig 3 relativelysmall order 0002 caused largesimplicity classification problemfig 4 obtained medium sized modelm0 40 accuracy quickly converges narrow interval mean training setvalidation set 80 epochsaccuracy training data set able reach 100inner model replaced quantum subroutine depicted panel c fig 2 output dimension quantum circuit n qubitsbounded m1 2n following sectionsconsider limiting situation maximum possibledimension m1 2n indicatedminimum m1 2 indicated mincorresponding probability measuring singlebasis state choose 0ival size2480table 1 hyperparameters results mnist48 independent optimization runs performedorder estimate variance attained accuracy following refer ensemblebootstrap runspresent results obtained classical network fig 3 data available tab 2appendix b evolution median accuracy green circles classical networkable achieve classification accuracies 99increase number hidden unitslevel input model doesnt provide statistically significant improvement final accuracydisplayed error bars 68 confidence intervalsextracted finite population samplemain panel location90 accuracy percentile boundary value10 bootstrap runs provide higher accuracyvalidation set red squares training setblue diamonds results consistentexpectation number parameters ktot model increases training setdescribed exactly networktime distribution accuraciesvalidation set evolve significantly31 separable quantum modelsclass quantum models considerseparable models single layer u 1 unitariesfundamentally classical entanglement plays role shaping output probabilitiesvalidation set09950995099099098509856 qubitmedian clmedian qm minmedian qm0995098590 accuracy boundaryaccuracyaccuracy0990980980980975training settraining epochs1102106 qubit min099number parameters09751000975100097training epochs110210310410number parametersfigure 4 example training classical model describedmain text left panel shows increase classificationaccuracy training set function numberepochs right panel shows validation setbands 90 confidence intervals averages indicatedsolid lines510bootstrap runs098 0985 099 0995bootstrap runsaccuracyfigure 5 results accuracy achieved mnistclassical model green points separable quantum models described text red blue points panel showsaccuracy function number parametersclassical model green solid circles quantum separablemodels blue solid circles separable quantum modelssingle output variable m1 1 red solid circles indicated min inset panel b shows location90 accuracy percentile classical green squaresseparable quantum model blue squares minimal separable quantum model red squares panels c dhistogram achieved accuracies 6 qubit modelsnumber possible output variables m1 64panel single output panelquantum model results shown fig 5data available tab 3 appendix bcase models m1 2nmild increase final accuracy function number parametersqubits modellargest model outperformed classical networks smaller size blue circlesfig 5a models latent space corresponding restricted output quantum layershown red circles fig 5a instead deterioration increase number qubitsparameterseffect especially clear looking histogramsachieved accuracy 48 bootstrap runs displayedright panels fig 5 largest modeln 6 qubits employing large output vectorquantum layer produces results better99 half runs restrictingoutput single probability prevents runsreaching threshold strikingly truetraining set shown singlebootstrap run achieved accuracy 99clear sign importance supplementquantum classifier rich decoder possibleexpense larger sample complexitydoesnt measurable advantageincreasing number parameters interestinglymodels restricted output size red circlesdenoted qm min panel fig 6optimization procedure struggling goodset parameters larger models accuracydecreases monotonically size possiblebetter results obtained directlyaccuracy cost function instead crossentropyorder clarify effect seeingcoming overfitting training setdifficulties exploring efficiently energy surface left panels evolution 90accuracy percentile function number parameters validation training set panelsb c respectively 3 networks consideredclassical feedforward network considered green squares quantum models entanglement output red squaresrestricted output model blue squaresclearly seen panel c optimizer ablegood parameter set large models accuracytraining decreases32 quantum models entanglementturn consider general quantum modelscapable creating entanglement quantum register use twoqubit unitaryu 2 defined sec 25 resulting median accuracyshown panel fig 6 similar trendsimpler separable models accuracyquantum model exceeds classical accuracyresults highlight importance supplementing quantum classifier non trivial outputdecoder order achieve good efficiency possibil7median clmedian qmmedian qm min09950995099099098509850995098097509990 percentile cl90 percentile qm90 percentile qm min110210310training410number parameters21041090 percentileaccuracydata ensure dimensions models inputsoutputs match failfirst failfastprinciple single forward pass data fasterpass single batch perspective trainingcheap code runs typical trainingforloop additional backward functionmain model explained section 22 endresults configuration savedsingle location bootstrapresults run folder aggregatedresults created simpler analysishelpers extension provides basic plottingutilities results meantexample processing output folders plotshighly dependent studies performedvalidation90 percentile0985number parametersfigure 6 results accuracy achieved mnistclassical model green points quantum modelsentanglement described text red blue pointspanel shows accuracy function numberparameters classical model green solid circlesquantum models blue solid circles quantum modelssingle output variable m1 1 red solid circles indicated min left panels location 90accuracy percentile classical green squares quantum blue squares minimal quantum model red squaresvalidation set panel b training set panel42 future workvast possible extensions squidincluded directly mainproject standalone packages main advantage squid allowsabstracting communication specific backendcustom quantummodel subclasses interfacing backend api neededadditionally right squid allowsclassification regression tasks advancedscenarios require changes squidlarger extent squid helperssooner addition squidstart supporting quantum computing frameworks example qiskit created great packageoptimization quantum circuits 12fit perfectly squid ecosystem translationlayer addition allow user implementhybrid models explicit definition circuitstraining provided circuit gradient correctlypassed backward functionframeworks similar behavior plans optimization packages modularity squid allow codebackend agnostic work uniformly multipletypes quantum devicesity available choose measuresingle qubit quantum device4 squid extensions future workmentioned section 2 squid designed extensibility mind means easywrite additional packages additional features involve changingmodules following sectionssquid helpers package designed allow usesquid userprovided configuration filescomment possible extensions framework41 squid helpers packageextension functionstreamline workload use cases providesquid helpers extension allows user use yamlconfiguration files run squid code result bootstrapping multiple runs multiple test cases aggregation results easierconversion configuration files squidfile read bootstrap optionprovided random seed changediteration change seed deterministicresults exactly reproducibleinitialization step single batch forward pass5 conclusionsgreat success classical machine learning algorithms tasks classificationexpectation quantum computers allow explore algorithms larger complexity classclassical counterparts makes exploration connections ideas fertile grounddiscovery novel approaches automated inferencework presented squid computational framework allows explore efficientlypossible advantages quantum computing machinelearning purposes achieved embeddingquantum algorithm general multilayerarchitecture allows interface classical quantum networks enjoying efficient optimizationautomatic differentiation engine providedpytorch similar packages notablyxanadus strawberry fields 23 ibms qiskit 12offer flexibility squid example strawberry fields offers completeexperience examples modelsability run code quantumsimulator reason creatingcustom model easier squid similar argument qiskit additioncontain bindings pytorch generalized frameworks provides advantagespurely classical purely quantum approachallows seamless dimensionality reductioninference problem step necessaryexplore high dimensional datasets small quantumdevices time allowing automatictuning measurement settings needed extractinformation quantum state producedalgorithm feature implemented squidclassical network decoder central model shown fig 1 extremely importantorder reach high precisions use explicit decoder output quantum model allows careful optimization tradeoffmeasuring vanishingly small fractionpossible output probabilities handdrawback entanglement start detrimentalinformation scrambling 24 25measurement probability distributioncomputational basis states require exponential number repetitions worksimple classification problem mnist databaseeffect tradeoff concrete highdimensional problemidentified simplified approachcurrently implemented squid successive studysample complexity lines derivationpresented sec 23 needed assess practical viability algorithm extensions implement effect finite statisticsadvanced effects models decoherencespecific target device added efficientlysquid plan explore impact classification problems future workacknowledgementswork roggero supported inqubator quantum simulation doe grantdesc0020970 institute nuclear theorydepartment energy grant defg0200er41132 work j filipek supportedwashington research foundation fellowshipuniversity washington work sc hsusupported department energy officescience office early career research program award number desc0015971 support nathanwiebe provided laboratory directed research development program pacific northwestnational laboratory multiprogram national laboratory operated battelle departmentenergy release pnnlsa157287 theoretical work project nw supporteddepartment energy office science nationalquantum information science research centers codesign center quantum advantage contractnumber desc0012704 additional support nathanwiebe provided google research awardreferences1 vedran dunjko peter wittek nonreviewquantum machine learning trends explorations quantum views 432 march 2020doi 1022331qv2020031732 url httpsdoiorg1022331qv20200317322 nathan wiebe key questions quantum machine learner ask newjournal physics 229091001 sep 2020doi 10108813672630abac39 url httpsdoiorg10108813672630abac393 wen guan gabriel perdue arthur pesah mariaschuld koji terashi sofia vallecorsa jeanroch vlimant quantum machine learninghigh energy physics machine learning sciencetechnology 21011003 mar 2021 issnthanks generality architecture developed work future explorations algorithmsentanglement classically efficient representation tensor network states polynomially large bond dimension 26 27carried squid minimal modifications code expect added flexibilityinterchanging classical quantum componentsglobal classifier prove valuable identifying promising datasets inference problems presenceentanglement quantum correlations provideimportant accuracy gains problems26322153 doi 10108826322153abc17d urlhttpdxdoiorg10108826322153abc17dpatrick rebentrost masoud mohseni sethlloyd quantum support vector machine bigdata classification phys rev lett 113130503sep 2014 doi 101103physrevlett113130503urlhttpslinkapsorgdoi101103physrevlett113130503jacob biamonte peter wittek nicola pancottipatrick rebentrost nathan wiebe sethlloyd quantum machine learning nature 549195202 2017 doi 101038nature23474 urlhttpsdoiorg101038nature23474maria schuld nathan killoranquantum machine learning feature hilbertspacesphys rev lett 122040504 feb2019doi 101103physrevlett122040504urlhttpslinkapsorgdoi101103physrevlett122040504vojtch havlek antonio d crcoles kristantemme aram w harrow abhinav kandalajerry m chow jay m gambetta supervised learning quantumenhanced featurespaces nature 5677747209212 mar 2019issn 14764687 doi 101038s4158601909802url httpdxdoiorg101038s4158601909802evan peters joo caldeira alan ho stefan leichenauer masoud mohseni hartmutneven panagiotis spentzouris doug straingabriel n perdue machine learning high dimensional data noisy quantum processorarxiv 210109581 2021martn abadi ashish agarwal paul barham eugene brevdo zhifeng chen craig citro greg scorrado andy davis jeffrey dean matthieudevin sanjay ghemawat ian goodfellow andrewharp geoffrey irving michael isard yangqingjia rafal jozefowicz lukasz kaiser manjunathkudlur josh levenberg dandelion man rajat monga sherry moore derek murray chrisolah mike schuster jonathon shlens benoitsteiner ilya sutskever kunal talwar paultucker vincent vanhoucke vijay vasudevan fernanda vigas oriol vinyals pete warden martinwattenberg martin wicke yuan yu xiaoqiang zheng tensorflow largescale machinelearning heterogeneous systems 2015 urlhttpswwwtensorfloworg software available tensorfloworgadam paszke sam gross francisco massaadam lerer james bradbury gregory chananet alpytorch imperative style highperformance deep learning library h wallachh larochelle beygelzimer f dalchbuce fox r garnett editors advancesneural information processing systems 32 pages80268037 curran associates 2019 urlhttppapersnipsccpaper9015pytorchanimperativestylehighperformancedeeplearninglibrarypdfrobert s smith michael j curtis william jzeng practical quantum instruction set architecture 2016hctor abraham et al qiskit opensourceframework quantum computing 2019quantum ai team collaborators cirq october 2020url httpsdoiorg105281zenodo4062499charles r harris k jarrod millman stefan jvan der walt ralf gommers pauli virtanendavid cournapeau et al array programmingnumpy nature 5857825357362 september 2020 doi 101038s4158602026492 urlhttpsdoiorg101038s4158602026492gilles brassard peter hyer michele moscaalain tapp quantum amplitude amplificationestimation quantum computation information page 5374 2002 issn 02714132doi 101090conm30505215 url httpdxdoiorg101090conm30505215yohichi suzuki shumpei uno rudy raymondtomoki tanaka tamiya onodera naoki yamamoto amplitude estimation phase estimation quantum information processing 192jan 2020 issn 15731332 doi 101007s1112801925652 url httpdxdoiorg101007s1112801925652dmitry grinko julien gacon christa zoufalstefan woerner iterative quantum amplitude estimation npj quantum information 71 mar2021 issn 20566387 doi 101038s41534021003791 url httpdxdoiorg101038s41534021003791andrs gilyn srinivasan arunachalamnathan wiebe optimizing quantum optimizationalgorithms faster quantum gradient computation proceedings thirtieth annual acmsiam symposium discrete algorithms pages14251444 siam 2019maria schuld alex bocharov krysta m svorenathan wiebecircuitcentric quantumclassifiersphys rev 101032308 mar2020doi 101103physreva101032308urlhttpslinkapsorgdoi101103physreva101032308g vidal c m dawsonuniversalquantum circuit twoqubit transformationsgradient evaluation variationalquantum modelscontrollednot gatesphys rev69010301 jan 2004 doi 101103physreva69010301 url httpslinkapsorgdoi101103physreva69010301farrokh vatan colin williams optimal quantum circuits general twoqubit gates physrev 69032315 mar 2004 doi 101103physreva69032315 url httpslinkapsorgdoi101103physreva69032315y lecun l bottou y bengio p haffnergradientbased learning applied documentrecognition proceedings ieee 861122782324 1998 doi 1011095726791nathan killoran josh izaac nicols quesadaville bergholm matthew amy christianweedbrook strawberry fields software platform photonic quantum computing quantum 3129 mar 2019issn 2521327xdoi 1022331q20190311129 url httpdxdoiorg1022331q20190311129huitao shen pengfei zhang yizhuanghui zhai information scrambling quantum neural networks phys rev lett 1242005042020doi 101103physrevlett124200504urlhttpslinkapsorgdoi101103physrevlett124200504carlos ortiz marrero mria kieferovnathan wiebe entanglement induced barrenplateaus 2021ding liu shiju ran peter wittek chengpeng raul blzquez garca gang sumaciej lewenstein machine learning unitary tensor network hierarchical tree structurenew journal physics 217073059 jul 2019doi 10108813672630ab31ef url httpsdoiorg10108813672630ab31efchase roberts ashley milsted martin ganahladam zalcman bruce fontaine yijian zou jackhidary guifre vidal stefan leichenauer tensornetwork library physics machinelearning 2019k mitarai m negoro m kitagawa k fujiiquantum circuit learningphysical review 983 sep 2018issn 24699934doi 101103physreva98032309 url httpdxdoiorg101103physreva98032309maria schuld ville bergholm christian gogolinjosh izaac nathan killoran evaluating analytic gradients quantum hardware physical review 993 mar 2019 issn 24699934doi 101103physreva99032331 url httpdxdoiorg101103physreva99032331appendix provide derivation schemeemployed main text evaluate gradientsrespect parameters quantum models following discussion sec 25 main textgeneric variational quantum model defined unitary transformation w wdependent m real parameters wtaking values 0 general construction employed work consists decomposing unitary operation w wcombinationqubit unitaries denoted uk1ujkrespectively subscript indices indicate qubit pairs qubits unitary actsgiven simple structure generic circuitdepicted eq 25 obtain closedform expression component gradientlooking individual gradients basic unitariesu 1 u 2 directly use concrete example generic su 4 unitary transformationeq 25 reproduce convenienceu01 0 0 0u11 1 1 1u01u01 2 2 2u11 3 3 3note case m 15 followingassume loss generality unitaryoperation applied initial state 00iqubit register denote resulting statewiw w0iclassical output generated measurementqubit register completely characterized4 probabilitiespossible basis statespk t r k wihintroduced explicitly projectors0 00ih00 1 01ih012 10ih10 3 11ih11computing derivatives respect 12 angles corresponding 4 qubit su 2 operationsstraightforward recalling definition eq 14u 1 terms exponentials pauli operatorsexample derivative respect 0probabilities eq 17 written explicitlymodelpkh00w wk w w00iih00w wk w wy0 00iih00y0 w wk w w00i2i h00w wk w wy0 00iw w2r h00w w00itr9009966099730998009994vr90099510994709967099520995009964rekm r hkw w0m 00ieikm hkw w0m 00icompact notation w w0m indicatederivative respect mth parameterrequires total 2km independent circuit executionstotal 2km 1 observables gradientcomputed2 2 2 3 3 3accuracy0991540990320098814409895809911120989116ki computational basis state associatedprojector k expectation values estimated hadamard test additional ancilla qubit require execution 2k independentcircuits real imaginarym parameters use additional 2k hadamard tests estimate expectationvalues associated shifted unitariesnew set parameters given0 0 0 0 0 1 1 1ktot236647279449188933148547225table 2 results classical feedforward models describedmain textr indicating imaginary real note12 parameters characterizing single qubit transformations derivative variational circuit unitary w expressed termsparametrized unitary appropriate angle angle shifted 2 case 0 consideredinstancew wiw wy0 w w0 0pk 2r h00w wk w w0m 00i2 rk rekm ikeikmoptimal implementation generalsu 4 transformation derived ref 21 fig6property2 qubit unitary ujkproperty usuallyreferred parameter shift rule 28 29order estimate expectation valuesline eq 19 employ strategiesrequired number output probabilities kmaximum possible n qubits k 2nconvenient decompose projectorscomputational basis states linear combinationk 2n diagonal operators obtained consideringpossible tensor products identities pali zevaluate resulting expectationvalues single hadamard test totalnumber separate circuits required approachm total number parametersrealistic situation k fi 2n insteadstrategy described require exponential number measurement size qubit register efficient alternative obtainedevaluating explicitly k pairs expectation valuesrk r h00w wkiik h00w wkialternative approach reduce number independent circuits needed gradient evaluationuse expectation values unitary operators insteadprojectors extension easily implementedsquid frameworkb additional information mnistbenchmarkreport tab 2 parameters resultsclassical models mnist classification discussed sec 3 corresponding results presented fig 3 main text columnstab 2 denoted tr90 vr90 boundary value 90 accuracy percentilerefers validation datatraining set estimated errors correspond 68confidence intervalparameters separable quantum modelsconsidered main text resultsaccuracy09837300984732098541609859260983926098692409812538tr9009898099200992109948099050994809881training setvr9009872098890988709891098680990409858ktot7070706811780117782356723553306323061844762447483539035328accuracy098791209865220987518098592409889280984724098852409833180988322098102409895180982332tr90099400993309960099260998709897099840986709993098630999509871098098096096094094output092092table 3 results set separable quantum modelsdescribed text parenthesis labelquantum models indicates number qubits n employedmodelqe2qe1 2qf 2qf1 2qg4qg1 4qh4qh1 4qi4qi1 4ql6ql1 6validation set098098096096single output094vr900989909892099098930992409879099150985409911098400992009867094training epochs100training epochsfigure 7 example training largest quantum modeldescribed main text left panels increaseclassification accuracy training set functionnumber epochs right panels showsvalidation set panels modelmaximum number outputs m1 16panels minimal model single outputdashed black line indicates 99 accuracy bands 90confidence intervals means indicated solid linestable 4 results set quantum models describedtext parenthesis label quantum modelsindicates number qubits n employedmedian clmedian qmmedian qm min09954 qubit maxobtained training mnist classificationproblem presented tab 3 modelslatent space corresponding restricted outputquantum layer indicated subscript 1tableconvention tab 4present parameters results quantummodels entanglement described sec 32fig 7 evolution accuracytraining set left panels validation set rightpanels panels obtained modelsmaximal output size m1 16 casepanels results restrictedoutput model m1 1finally present fig 8 extension resultspresented fig 6 left panelsaccuracy histograms largest model consideredwork output model panelcrestricted output model paneld09850980975097096590 accuracy boundaryaccuracy0992104104 qubit max min09950990985number parameters110210bootstrap runsktot235847154713943794231419514133310410number parametersbootstrap runsaccuracyaccuracymodelqa1qb2qb1 2qc4qc1 4qd6qd1 60975 098 0985 099 0995 1accuracyfigure 8 results accuracy achieved mnistclassical model green points quantum modelsentanglement described text red blue pointspanel shows accuracy function numberparameters classical model green solid circlesquantum models blue solid circles quantum modelssingle output variable m1 1 red solid circles indicated min inset panel b shows location90 accuracy percentile classical green squaresquantum blue squares minimal quantum model redsquares single output panels c d histogram achieved accuracies largest quantum modelconsidered n 4 qubits numberpossible output variables m1 16 panel singleoutput panel